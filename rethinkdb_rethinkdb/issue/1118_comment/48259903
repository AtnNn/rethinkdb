IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-08) 00 : 51 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/48259903"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1118#issuecomment-48259903"
  , issueCommentCreatedAt = 2014 (-07) (-08) 00 : 51 : 01 UTC
  , issueCommentBody =
      "Marking as settled after talking to @mlucy. To clarify:\r\n\r\n- We'll drop `return_initial` and always provide the initial value\r\n- For `t.get(x).changes()` we'll discard intermediate state, which eliminates a ton of traffic and need for overflow error handling (lord, is that beautiful). If it turns out people don't want that, we can later add an optarg to turn this behavior off.\r\n- for `.group(f).changes()` we can omit intermediate values for the aggregation case, and use `{old_val: ..., new_val: ...}` for non-aggregate cases\r\n\r\n"
  , issueCommentId = 48259903
  }