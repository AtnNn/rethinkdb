IssueComment
  { issueCommentUpdatedAt = 2016 (-06) (-10) 21 : 20 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/225298681"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1118#issuecomment-225298681"
  , issueCommentCreatedAt = 2016 (-06) (-10) 21 : 20 : 35 UTC
  , issueCommentBody =
      "I'm removing the API_settled tag because a bunch of things have changed about the `changes()` API.\r\n\r\nI think for our built-in reductions (`count`, `sum`, `avg`) the API is straight-forward. We basically just allow calling `changes` on those terms.\r\n\r\nThe open question is whether we want to support this for arbitrary reductions in 2.4, and if so, how the API of `reduce` should be extended.\r\n\r\nI'm in favor of supporting this for `reduce` in general, as it's not going to add much extra work as far as I can tell.\r\n\r\nThe following APIs have been suggested above:\r\n```\r\nr.table('test').filter(...).reduce{|a,b| ...}.changes(reverse: lambda {|acc, o| ...})\r\nr.table('test').filter(...).reduce(reverse: lambda {|acc, o| ...}){|a,b| ...}\r\n```\r\n\r\nI really don't like the first one, but I like the second one."
  , issueCommentId = 225298681
  }