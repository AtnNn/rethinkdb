Issue
  { issueClosedAt = Just 2016 (-02) (-12) 21 : 18 : 11 UTC
  , issueUpdatedAt = 2016 (-02) (-13) 07 : 25 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5395/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5395"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5395
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 679144
        , simpleUserLogin = N "Prinzhorn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/679144?v=3"
        , simpleUserUrl = "https://api.github.com/users/Prinzhorn"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "r.error() doesn't always result in an error in the node.js driver"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5395"
  , issueCreatedAt = 2016 (-02) (-12) 10 : 53 : 31 UTC
  , issueBody =
      Just
        "I've just started working with RethinkDB but it seems like I found a bug right away. Or I'm doing something really edge-casey. Or wrong? Or both.\n\nnode v5.1.0\ndriver 2.2.1\nrethinkdb 2.2.4~0trusty (GCC 4.8.2)\n\nHere's the code to reproduce together with an explanation. I'm basically trying to implemented optimistic locking using `r.branch`. I know it's not atomic and thus there's no guarantee, but that's good enough for my use case (it's not a banking software...). Every doc in the `thing` database has a `version` property. When updating a thing, I compare the two versions to make sure the update is based on the most recent document. The example code has a conflict hard coded. The version is already at 3 but the update tries to update the version from 1 to 2.\n\n``` js\nvar r = require('rethinkdb');\n\nvar dbConfig = {\n    host: 'localhost',\n    port: 28015,\n    db: 'test'\n};\n\nr.connect(dbConfig, function(err, conn) {\n    if(err) {\n        console.error(err);\n        process.exit(1);\n    }\n\n    r.tableCreate('thing').run(conn, function(err) {\n        //We silently ignore the error because the table likely exists already.\n\n        r.table('thing').insert({\n            id: 'foobar',\n            version: 3\n        }).run(conn, function(err) {\n            if(err) {\n                console.error(err);\n                process.exit(1);\n            }\n\n            r.table('thing').get('foobar').replace(function(thing) {\n                return r.branch(\n                    thing('version').eq(1),\n                    thing.merge({version: 2}),\n                    r.error('version conflict')\n                )\n            }).run(conn, function(err, ironman) {\n                console.log(err, ironman);\n                conn.close();\n            })\n        });\n    });\n});\n```\n\n**Instead of an error I get the following response (error parameter is `null`)**\n\n``` js\n{ deleted: 0,\n  errors: 1,\n  first_error: 'version conflict',\n  inserted: 0,\n  replaced: 0,\n  skipped: 0,\n  unchanged: 0 }\n```\n\nIn other cases, like the one in the [documentation](https://rethinkdb.com/api/javascript/error/), `r.error` inside `r.branch` actually results in an error.\n"
  , issueState = "closed"
  , issueId = Id 133209008
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 175
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }