IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-05) 17 : 19 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18992892"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/947#issuecomment-18992892"
  , issueCommentCreatedAt = 2013 (-06) (-05) 17 : 19 : 21 UTC
  , issueCommentBody =
      "It appears to be quadratic because the code was written back when we cached\r\nvalues between `arg` calls.  In the case where `pluck` and `without` are\r\ncalled on objects, `arg(0)` is evaluated twice; this means that if we have\r\nnested calls we'll be doing O(2^d) work where d is the depth.  This is easy\r\nto fix.\r\n\r\nOn Wed, Jun 5, 2013 at 9:53 AM, Joe Doliner <notifications@github.com>wrote:\r\n\r\n> I'm pretty sure this is caused by the fact that we make a copy for pluck.\r\n> It would be pretty easy to fix. However we should bear in mind, there are a\r\n> huge number of inefficiencies like this in the query language and we\r\n> obviously don't want to take the time to fix them all right now. Ideally we\r\n> want to only fix critical path things like base write performance and base\r\n> read performance because otherwise performance becomes an intractable task.\r\n> However I guess this issue becomes critical path due to the fact that YCSB\r\n> uses it. Is there anyway we could work around this and have YCSB not use it?\r\n>\r\n> Also I'm going to hack up a copy free version of pluck so we can test the\r\n> hypothesis.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/947#issuecomment-18991322>\r\n> .\r\n>"
  , issueCommentId = 18992892
  }