IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-05) 19 : 49 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19003755"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/947#issuecomment-19003755"
  , issueCommentCreatedAt = 2013 (-06) (-05) 19 : 49 : 25 UTC
  , issueCommentBody =
      "> there are a huge number of inefficiencies like this in the query language and we obviously don't want to take the time to fix them all right now\r\n\r\nHere is how I would like to structure this process. First, I think we should become competitive with mongodb on standard predefined YCSB workloads (or, hopefully, do a lot better than them). We should fix all operations that are on the critical path. This will give us two benefits:\r\n\r\n* A standard set of benchmarks everyone else knows and uses that we can publish and point people to.\r\n* I *suspect* that the overall qualitative performance of the system will likely increase significantly by virtue of fixing all these low hanging fruit (default YCSB workloads are really good at fixing low-hanging fruit).\r\n\r\nAfter that, we should just follow our users and fix things they complain about workload by workload.\r\n\r\nThis gives us more than enough to work with, and narrows the playing field quite a bit."
  , issueCommentId = 19003755
  }