IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-10) 20 : 05 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55174548"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2574#issuecomment-55174548"
  , issueCommentCreatedAt = 2014 (-09) (-10) 20 : 05 : 19 UTC
  , issueCommentBody =
      "Making map variadic is a pretty common solution to this problem.  Common Lisp's `mapcar` is variadic with the behavior @grandquista describes (it stops when the shortest list runs out).  OCAML has a function `map2` with this behavior (it needs a separate function because static typing).\r\n\r\n`zip` is pretty common too, though, and people might be more used to it since Python and Ruby both use `zip` to solve this.\r\n\r\nI wouldn't be opposed to making `zip` do what it's supposed to and replacing its current use with `collapse`.  If we do it that way, #1855 will have to go into the same release."
  , issueCommentId = 55174548
  }