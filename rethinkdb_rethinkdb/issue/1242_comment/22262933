IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-07) 16 : 12 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22262933"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1242#issuecomment-22262933"
  , issueCommentCreatedAt = 2013 (-08) (-07) 16 : 12 : 25 UTC
  , issueCommentBody =
      "So, there are three remaining things to discuss, in my mind:\r\n* Should we drop support for Ruby 1.8 so that we can return times + timezones?  I think it might be time to cut the cord.  (Anecdotally, most people using Ruby on OS X seem to be using homebrew Ruby.  This would also let us implement some other cool things without having to have separate code for 1.8 and 1.9+.)\r\n* Should we depend on a third-party timezone library in Python so that we can return time+timezone objects?  (Alternatively, should we implement Python's stubbed out timezone interface ourselves?)  I'm leaning toward yes on one of those.\r\n* Should we limit times to millisecond precision on the server?  This would solve the single biggest gotcha, that of reading a time from the server in JS and getting a different time.  (It's also what we originally decided to do, and we only abandoned it because boost wanted to print 6 digits after the decimal point.)  I'm leaning toward yes on this.\r\n\r\n@coffeemug, @srh, @wmrowan -- any thoughts?"
  , issueCommentId = 22262933
  }