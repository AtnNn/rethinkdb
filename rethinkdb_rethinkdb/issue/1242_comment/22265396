IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-07) 16 : 46 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22265396"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1242#issuecomment-22265396"
  , issueCommentCreatedAt = 2013 (-08) (-07) 16 : 46 : 06 UTC
  , issueCommentBody =
      "> In the interests of shipping this and not spending too long arguing over the interface, I'd like to propose that we ship with just `raw` and `native`, and add other options if people seem to want them.\r\n\r\nI'm cool with this.\r\n\r\n> Should we drop support for Ruby 1.8\r\n\r\nI did some research, and I'm cool with dropping 1.8. You're officially cleared to drop 1.8 support.\r\n\r\n> Should we limit times to millisecond precision on the server?\r\n\r\nI think we should, for a couple of reasons. Firstly, no general purpose database that I know of supports microsecond precision. Secondly, many widely used languages don't support microsecond precision either. Finally, if one needs microsecond precision, they'd likely end up using very specialized tools anyway, so supporting microsecond precision in Rethink (at the cost of all the issues we discovered) seems like misguided effort.\r\n\r\n> Should we depend on a third-party timezone library in Python so that we can return time+timezone objects? \r\n\r\nI think we shouldn't, and should just use UTC instead while dropping the timezone information. If the user really wants the timezone, they can use a third party library, get the raw object, and do it manually. This seems like a good-enough solution to me, and there's a lot of precedent to do it this way. Consider http://api.mongodb.org/python/current/faq.html#what-is-the-correct-way-to-handle-time-zones-with-pymongo."
  , issueCommentId = 22265396
  }