IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-07) 00 : 03 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22221092"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1242#issuecomment-22221092"
  , issueCommentCreatedAt = 2013 (-08) (-07) 00 : 03 : 32 UTC
  , issueCommentBody =
      "Having it at a module level is unworkable, completely different parts of the code would be stomping over each other.\r\n\r\nHaving it at the connection level is also something that only bad users would do, and it would ruin interoperability of different libraries trying to use the same ReQL connection.  Everybody would suddenly have to defensively add `:time_format => 'native'` on all the queries in their library.\r\n\r\nSuppose that instead of allowing modifying per-connection state, we supported queries like `r.use_time_format('native').table('foo').run()`.  Then the user could write this:\r\n\r\n```\r\nimport rethinkdb as rprime\r\nr = rprime.use_time_format('raw')\r\n```\r\n\r\nThe API documentation would describe the type as *r.use_time_format(format) -> r*\r\n\r\nIs that workable in Python, Javascript, and Ruby?\r\n\r\n"
  , issueCommentId = 22221092
  }