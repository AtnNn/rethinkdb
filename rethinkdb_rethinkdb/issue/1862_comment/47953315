IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-03) 16 : 33 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47953315"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1862#issuecomment-47953315"
  , issueCommentCreatedAt = 2014 (-07) (-03) 16 : 33 : 54 UTC
  , issueCommentBody =
      "I think that we should have two types of sharding that both operate simultaneously: one that works by hashes and one that is user-specified. These serve orthogonal use cases. The former is for scaling and the latter is for putting data in convenient places.\r\n\r\nThere are good reasons why users might want to do them independently. For example, suppose I split my table into \"American\" and \"European\" sections, and then my app becomes popular in Europe so I want to throw more computing power at the European section. Ideally, I could just change a number in the web UI from \"1\" to \"2\" and it would automatically split the European section into two parts by hashing.\r\n\r\nThe only disadvantage I can think of is that it might be difficult to explain the two different types of sharding to the users."
  , issueCommentId = 47953315
  }