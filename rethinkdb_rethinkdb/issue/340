Issue
  { issueClosedAt = Just 2013 (-06) (-10) 19 : 56 : 58 UTC
  , issueUpdatedAt = 2013 (-06) (-10) 20 : 02 : 11 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/340/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/340"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 340
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Implement `some` and `every` operations"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/340"
  , issueCreatedAt = 2013 (-02) (-14) 03 : 20 : 02 UTC
  , issueBody =
      Just
        "Implementing `contains`/`in`/`intersection` on arrays will take care of simple querying array cases, but there is a more sophisticated (and equally common) case of wanting to filter by a predicate. This is something @mglukhovsky ran into very quickly the moment he wanted to do anything interesting. I propose the following changes/additions:\n1. Implement a `seq.some(predicate)` command that's equivalent to `seq.filter(predicate).count().gt(0)`.\n2. Implement a `seq.every(predicate)` command that's equivalent to `seq.filter(predicate).count().eq(seq.count())`.\n"
  , issueState = "closed"
  , issueId = Id 10982699
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }