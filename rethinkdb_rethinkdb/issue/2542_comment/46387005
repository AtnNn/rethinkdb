IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-18) 01 : 31 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/46387005"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2542#issuecomment-46387005"
  , issueCommentCreatedAt = 2014 (-06) (-18) 01 : 31 : 15 UTC
  , issueCommentBody =
      "> Or maybe, when x runs on new_val and old_val, and fails on one of them, that entry is null.\r\n\r\nAlso, combining that with `return_all=True`, you get the exact set and sequence of data you'd need to construct and maintain a per-parser view of some query on the table.  Some kind of future `.create_view(...)` operation would be able to match the semantics of `changes()` quite nicely."
  , issueCommentId = 46387005
  }