IssueComment
  { issueCommentUpdatedAt = 2015 (-03) (-04) 15 : 52 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 519940
        , simpleUserLogin = N "elifarley"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/519940?v=3"
        , simpleUserUrl = "https://api.github.com/users/elifarley"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/77183570"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3875#issuecomment-77183570"
  , issueCommentCreatedAt = 2015 (-03) (-04) 15 : 52 : 56 UTC
  , issueCommentBody =
      "Looks like someone else on IRC would also like it:\r\n\r\n> Guest39519: I have a problem trying to perform what according to the documentation is valid, create a table with a primary key being an array. The documentation says: \8221The data type of a primary key is usually a string (like a UUID) or a number, but it can also be a time, binary object, boolean or an array.\8221\r\n> Guest39519:r.db(\8217test\8217).tableCreate('a', {primaryKey: ['x', 'y']})\r\n> Guest39519:gives me \8221Expected type STRING but found ARRAY\8221\r\n> Guest39519>i mean, a doc { x: 1, y: 2 } will need to be { x: 1, y: 2, some_dummy: [1, 2] }, just to be able to use arrays as primary keys? this conflicts semantically with how compound indexes work.\r\n> Codepope:You create a secondary compound index with indexCreate\r\n> Guest39519:those are not unique, which i need, hence the compound pk :/\r\n> Guest39519:This has to be a rather common issue for people, no? How else would you implement a many-to-many relation table without two-way relations, and with at least one of the way being a compound key to ensure unique-ness?"
  , issueCommentId = 77183570
  }