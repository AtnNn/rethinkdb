IssueComment
  { issueCommentUpdatedAt = 2015 (-03) (-04) 19 : 38 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/77230042"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3875#issuecomment-77230042"
  , issueCommentCreatedAt = 2015 (-03) (-04) 19 : 38 : 50 UTC
  , issueCommentBody =
      "That's an interesting idea.\r\nWe might be able to support general deterministic functions for generating the primary key actually.\r\n\r\nRelated to https://github.com/rethinkdb/rethinkdb/issues/3046\r\n\r\nYou probably know this, but just to have it here in case other users are wondering:\r\nRight now the way to use a compound primary key is to store an array into the primary key field. For CSV imports this is not possible directly, but you can first import your data into table `tmp`, and then copy it with the correct key into the final table `final`:\r\n```js\r\nr.tableCreate('final', {primaryKey: 'id'}); // You can use a different name for the key field if you like\r\nr.table('final').insert(r.table('tmp').merge({id: [r.row('a'), r.row('b')]}))\r\n```"
  , issueCommentId = 77230042
  }