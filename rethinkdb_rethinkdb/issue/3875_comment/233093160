IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-15) 23 : 40 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 39480
        , simpleUserLogin = N "tve"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/39480?v=3"
        , simpleUserUrl = "https://api.github.com/users/tve"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/233093160"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3875#issuecomment-233093160"
  , issueCommentCreatedAt = 2016 (-07) (-15) 23 : 40 : 10 UTC
  , issueCommentBody =
      "Where support for compound primary keys would be really helpful is to alleviate marshaling and unmarshaling issues on the client side. Maybe this is only an issue for typed languages, but for example, in Go if I have:\r\n```\r\ntype User struct {\r\n  Company string `gorethink:\"company\"`\r\n  Name    string `gorethink:\"name\"`\r\n  Age     int    `gorethink:\"age\"`\r\n}\r\n```\r\nand I want a compound primary key on company&name then I need to transform this into\r\n\r\n```\r\ntype User struct {\r\n  ID   []string `gorethink:\"id\"` // really: [company, name]\r\n  Age int       `gorethink:\"age\"`\r\n}\r\n```\r\nand I have to manually extract Company and Name from the ID array."
  , issueCommentId = 233093160
  }