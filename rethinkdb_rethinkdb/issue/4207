Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-05) (-09) 00 : 51 : 25 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4207/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4207"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4207
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "create a tool to support blue-green deployments"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4207"
  , issueCreatedAt = 2015 (-05) (-09) 00 : 33 : 22 UTC
  , issueBody =
      Just
        "Currently we don't have a great way of facilitating [blue-green deployment](http://martinfowler.com/bliki/BlueGreenDeployment.html) (mentioned in a user in #4102). But with [`return_initial`](#3579) changefeeds we have most of the functionality we would need to create a simple tool to bring a second RethinkDB cluster up-to-date with a first, and then keep it that way. With a little scripting we could make that into a really nice tool to help people with blue-green deployments.\n\nIn my imagining this would be a separate script that you would start that would provide its own html ui. It would allow you to connect to both source and target servers, then use a changefeed per table selected to push the data from source to target. It would not be too difficult to make this a really slick-looking tool that would demo really well.\n\nThis tool could also be wrapped around the import/export script by replacing either source or target with files. It would certainly make a good answer to how to backup a RethinkDB cluster.\n"
  , issueState = "open"
  , issueId = Id 74541796
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 1366
                , simpleUserLogin = N "deontologician"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/1366?v=3"
                , simpleUserUrl = "https://api.github.com/users/deontologician"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 12
          , milestoneNumber = 86
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "For issues related to the space between the database and the outside world (but not drivers)."
          , milestoneTitle = "ecosystem"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/86"
          , milestoneCreatedAt = 2014 (-10) (-06) 22 : 20 : 00 UTC
          , milestoneState = "open"
          }
  }