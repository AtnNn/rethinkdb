IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-31) 21 : 06 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39141983"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2196#issuecomment-39141983"
  , issueCommentCreatedAt = 2014 (-03) (-31) 21 : 06 : 47 UTC
  , issueCommentBody =
      "There are three easy ways we could make `match` in particular faster:\r\n* We currently recompile the regexp every query.  We could stop doing that in the case where people provide a string constant, or we could just cache compiled regexps.\r\n* We could do string search instead of regular expression matching when possible (we could do so in the \"carbonara\" example here).\r\n* We could avoid constructing the match object if we know its value is going to be turned into a boolean (we could do this with hints to `eval`).\r\n\r\nWhether any of those are worth doing depends on whether `match` is the bottleneck or not.  How fast is the query if you just put `.filter(lambda row: false)` as the filter portion?"
  , issueCommentId = 39141983
  }