IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-13) 15 : 09 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1276278
        , simpleUserLogin = N "williamstein"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1276278?v=3"
        , simpleUserUrl = "https://api.github.com/users/williamstein"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/130724006"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4678#issuecomment-130724006"
  , issueCommentCreatedAt = 2015 (-08) (-13) 15 : 09 : 10 UTC
  , issueCommentBody =
      "Still working fine an hour later.  Due to the new semester,  we have really heavy load suddenly, and the web server  are all at <5% and the database at least than 50% of a core (variable of course).  The only change is RethinkDB 2.0.4  versus 2.1.   With 2.1 it was \"everything at 100% of possible\".   This makes me extremely happy, since I was worried about whether RethinkDB could fundamentally handle how I'm using it (with lots of changefeeds for each user, etc).  Clearly it works well, which is exciting (except for some crashes that I'm sure you will help me sort out once I have more data.)\r\n\r\nI will try the bugfixed 2.1 with a copy of the data on another machine, and write a stress test in node.js using queries similar to my live ones.  I can then compare 2.1+bugfix to 2.0.4 and see what happens. "
  , issueCommentId = 130724006
  }