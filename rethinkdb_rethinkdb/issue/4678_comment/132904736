IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-20) 06 : 19 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1276278
        , simpleUserLogin = N "williamstein"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1276278?v=3"
        , simpleUserUrl = "https://api.github.com/users/williamstein"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/132904736"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4678#issuecomment-132904736"
  , issueCommentCreatedAt = 2015 (-08) (-20) 06 : 19 : 04 UTC
  , issueCommentBody =
      "I'm happy to report that I'm now finally successfully running a 5-node n1-standard-1 (with 50GB SSD/each) RethinkDB 2.1.1 cluster in production backing https://cloud.sagemath.com.   Thanks for all the help!   \r\n\r\nI did get this backtrack/crash when sharding/replicating from 1 to 5 nodes as it was finishing the last table:\r\n```\r\n2015-08-20T05:03:49.608418117 873.940379s error: Error in src/arch/runtime/thread_pool.cc at line 354:\r\n2015-08-20T05:03:49.608481873 873.940442s error: Segmentation fault from reading the address (nil).\r\n2015-08-20T05:03:49.608493462 873.940453s error: Backtrace:\r\n2015-08-20T05:03:50.015825973 874.347788s error: Thu Aug 20 05:03:49 2015\\n\\n1: backtrace_t::backtrace_t() at ??:?\\n2: format_backtrace(bool) at ??:?\\n3: report_fatal_err\r\nor(char const*, int, char const*, ...) at ??:?\\n4: linux_thread_pool_t::fatal_signal_handler(int, siginfo_t*, void*) at ??:?\\n5: /lib/x86_64-linux-gnu/libpthread.so.0(+0x\r\n10d10) [0x7f9d90d16d10] at 0x7f9d90d16d10 (/lib/x86_64-linux-gnu/libpthread.so.0)\\n6: std::_Rb_tree_increment(std::_Rb_tree_node_base*) at 0x7f9d914b8223 (/usr/lib/x86_64\r\n-linux-gnu/libstdc++.so.6)\\n7: rdb_update_single_sindex(store_t*, store_t::sindex_access_t const*, deletion_context_t const*, rdb_modification_report_t const*, unsigned l\r\nong*, auto_drainer_t::lock_t, cond_t*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned\r\n long> > > >*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*) at ??:?\\n\r\n8: callable_action_instance_t<std::_Bind<void (*(store_t*, store_t::sindex_access_t*, deletion_context_t const*, rdb_modification_report_t const*, unsigned long*, auto_dr\r\nainer_t::lock_t, cond_t*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*\r\n, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*))(store_t*, store_t::si\r\nndex_access_t const*, deletion_context_t const*, rdb_modification_report_t const*, unsigned long*, auto_drainer_t::lock_t, cond_t*, std::vector<std::pair<ql::datum_t, boo\r\nst::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned lo\r\nng> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*)> >::run_action() at ??:?\\n9: coro_t::run() at ??:?\r\n```\r\n\r\nI just restarted rethinkdb immediately after this and it worked. \r\n\r\nI *am* fully using nontrivial changefeed queries with rethinkdb still, thanks to the hints above. "
  , issueCommentId = 132904736
  }