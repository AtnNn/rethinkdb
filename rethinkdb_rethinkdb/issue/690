Issue
  { issueClosedAt = Just 2013 (-04) (-24) 18 : 52 : 56 UTC
  , issueUpdatedAt = 2013 (-05) (-01) 08 : 30 : 38 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/690/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/690"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 690
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 43867
          , simpleUserLogin = N "jdoliner"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/43867?v=3"
          , simpleUserUrl = "https://api.github.com/users/jdoliner"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Server crash when interrupting sindex creation"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/690"
  , issueCreatedAt = 2013 (-04) (-20) 01 : 33 : 16 UTC
  , issueBody =
      Just
        "Got the following crash when ctrl-c'ing the server right after ordering an sindex construction:\r\n\r\n```\r\nerror: Uncaught exception of type \"interrupted_exc_t\"\r\n         what(): interrupted\r\n```\r\n```c\r\n       1: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:249\r\n       2: format_backtrace(bool) at backtrace.cc:196\r\n       3: report_fatal_error(char const*, int, char const*, ...) at errors.cc:71\r\n       4: terminate_handler() at errors.cc:111\r\n       5: +0xb9f26 at 0x7fde1faacf26 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       6: +0xb9f53 at 0x7fde1faacf53 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       7: +0xb9f66 at 0x7fde1faacf66 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       8: __cxa_call_unexpected+0x30 at 0x7fde1faacba0 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       9: ../build/debug_clang/rethinkdb() [0x2148497]\r\n       10: void boost::_bi::list4<boost::_bi::value<std::set<std::string, std::less<std::string>, std::allocator<std::string> > >, boost::_bi::value<btree_store_t<rdb_protocol_t>*>, boost::_bi::value<boost::shared_ptr<internal_disk_backed_queue_t> >, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<void (*)(std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, btree_store_t<rdb_protocol_t>*, boost::shared_ptr<internal_disk_backed_queue_t>, auto_drainer_t::lock_t), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, btree_store_t<rdb_protocol_t>*, boost::shared_ptr<internal_disk_backed_queue_t>, auto_drainer_t::lock_t), boost::_bi::list0&, int) at bind.hpp:457\r\n       11: boost::_bi::bind_t<void, void (*)(std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, btree_store_t<rdb_protocol_t>*, boost::shared_ptr<internal_disk_backed_queue_t>, auto_drainer_t::lock_t), boost::_bi::list4<boost::_bi::value<std::set<std::string, std::less<std::string>, std::allocator<std::string> > >, boost::_bi::value<btree_store_t<rdb_protocol_t>*>, boost::_bi::value<boost::shared_ptr<internal_disk_backed_queue_t> >, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:20\r\n       12: callable_action_instance_t<boost::_bi::bind_t<void, void (*)(std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, btree_store_t<rdb_protocol_t>*, boost::shared_ptr<internal_disk_backed_queue_t>, auto_drainer_t::lock_t), boost::_bi::list4<boost::_bi::value<std::set<std::string, std::less<std::string>, std::allocator<std::string> > >, boost::_bi::value<btree_store_t<rdb_protocol_t>*>, boost::_bi::value<boost::shared_ptr<internal_disk_backed_queue_t> >, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at runtime_utils.hpp:58\r\n       13: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       14: coro_t::run() at coroutines.cc:178\r\n```\r\n\r\nThe backtrace is mostly useless, but it appears to have been in the coroutine for the function `post_construct_and_drain_queue(...)`.  Most of this function is wrapped in a try/catch for interrupted_exc_t, but there appears to be a bit at the end which may be interruptible that will not catch the exception."
  , issueState = "closed"
  , issueId = Id 13427653
  , issueComments = 6
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-05) (-15) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 8
          , milestoneClosedIssues = 183
          , milestoneDescription =
              Just "Issues that are absolutely necessary for 1.5."
          , milestoneTitle = "1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/8"
          , milestoneCreatedAt = 2013 (-03) (-20) 02 : 06 : 44 UTC
          , milestoneState = "closed"
          }
  }