IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-18) 22 : 52 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 290841
        , simpleUserLogin = N "al3xandru"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/290841?v=3"
        , simpleUserUrl = "https://api.github.com/users/al3xandru"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15087272"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/498#issuecomment-15087272"
  , issueCommentCreatedAt = 2013 (-03) (-18) 22 : 52 : 06 UTC
  , issueCommentBody =
      "User side this behavior would result in cumbersome code:\r\n\r\n```\r\nclass User(object):\r\n   def __init__(self, id=None, name=None):\r\n      self.id = id\r\n      self.name = name\r\n\r\nuser = User(name='alex')\r\n// the following will fail\r\nr.table('Users').insert(json.dumps(user)).run(c)\r\n```\r\n\r\nMost of the code has the form above and to make it work a user will have to figure out a way to instruct the JSON serializer to skip the `id` field if null.\r\n\r\n>  It's very weird to put in something with a null id an get back something with a non null id.\r\n\r\nActually this is the behavior all db tools I know offer."
  , issueCommentId = 15087272
  }