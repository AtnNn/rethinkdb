IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-10) 03 : 57 : 27 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16154075"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/498#issuecomment-16154075"
  , issueCommentCreatedAt = 2013 (-04) (-10) 03 : 57 : 27 UTC
  , issueCommentBody =
      "> It seems to me that if you insert `{'id' : null, 'a' : null}` and get back `{'id' : generated_key, 'a' : null}` then we're not consistently treating `null`s as equivalent to non existence.\r\n\r\nI disagree, this seems really consistent to me. Passing `{ 'id': null }` is equivalent to not passing `id` at all (which is treating `null` as non existence). Passing `{'a' : null}` gets the user `{'a' : null}` back because there are two ways to specify non existence (via passing null, or via passing nothing at all), and we're just stable about using the same way to specify non existence as the user selected (i.e. if they choose to do it via null, we give them null back, otherwise if they choose to do it via not passing an attribute at all, we don't return the attribute). This is a bit quirky, but I don't think we can do much better TBH."
  , issueCommentId = 16154075
  }