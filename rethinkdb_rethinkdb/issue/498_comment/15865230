IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-03) 21 : 06 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 290841
        , simpleUserLogin = N "al3xandru"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/290841?v=3"
        , simpleUserUrl = "https://api.github.com/users/al3xandru"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15865230"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/498#issuecomment-15865230"
  , issueCommentCreatedAt = 2013 (-04) (-03) 21 : 06 : 04 UTC
  , issueCommentBody =
      "Most of the important details are in this thread already. The summary is that for every app developed in an object-oriented programming language, users will have to figure out a way to instruct the JSON library serializer to ignore the  field mapped to the primary key present in any non-yet-persisted object before saving it.\r\n\r\nSo instead of being able to simply write:\r\n\r\n```\r\nclass A:\r\n  __slots__ = ['id', 'name']\r\n     \r\na = A()\r\nr.table('a').insert(json.dumps(a))\r\n```\r\n\r\nthey'll need to provide a special json serializer that ignores the id when it is `null`.\r\n\r\nWe already don't allow `null` to be a primary key ( _nb_: what's the behavior in 2i?), so I'm really not sure I see the advantage of dropping the previous (friendly and expected imo) behavior.\r\n\r\n"
  , issueCommentId = 15865230
  }