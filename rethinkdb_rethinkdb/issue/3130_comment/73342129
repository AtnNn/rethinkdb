IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-07) 01 : 17 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73342129"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3130#issuecomment-73342129"
  , issueCommentCreatedAt = 2015 (-02) (-07) 01 : 17 : 13 UTC
  , issueCommentBody =
      "Ah, API design... :smile: \r\n\r\nI think:\r\n\r\n- `r.table('foo').drop()` is very nice\r\n- `r.table('foo').drop()` along with `r.tableCreate()` is... unwise... and we shouldn't do that\r\n- `r.table('foo').create()` if we return a lazy reference would be ok, but seems... wrong to me\r\n\r\nPersonally I think we should leave `tableCreate` and `tableDrop` as is, and just change `tableCreate` and `dbCreate` not to throw errors if the objects already exist (#2975). I think that from usability perspective, implementing #2975 is much more important than worrying about this issue."
  , issueCommentId = 73342129
  }