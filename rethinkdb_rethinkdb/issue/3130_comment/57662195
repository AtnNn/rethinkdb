IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-02) 17 : 04 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/57662195"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3130#issuecomment-57662195"
  , issueCommentCreatedAt = 2014 (-10) (-02) 17 : 04 : 59 UTC
  , issueCommentBody =
      "Like @neumino, I like the look of `r.table('foo').drop()`, but not `r.table('foo').create()`.\r\n\r\nIf we end up doing auto-creation of tables, we could have a separate command to set the table \r\nproperties. However the primary key would have to be set on an empty table. How about this?\r\n* `r.table('foo')` <- creates the table with the default primary key 'id', if it doesn't exist.\r\n* `r.table('foo').init({primaryKey: 'k'})` <- creates the table with the primary key 'k' if it doesn't exist. Throws an error if 'foo' already exists. Optionally only if the existing table has a primary key other than 'k' (e.g. \"Cannot initialize a table that already exists\").\r\n\r\nI'm undecided if I would actually prefer that syntax over the current `r.tableCreate()`."
  , issueCommentId = 57662195
  }