IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-04) 03 : 42 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/72785423"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3130#issuecomment-72785423"
  , issueCommentCreatedAt = 2015 (-02) (-04) 03 : 42 : 24 UTC
  , issueCommentBody =
      "Well, it seems similar to me in terms of being able to operate on what would otherwise throw an error. In other words, `.default` is a way to turn an erroring query into a successful query, and `.create()` would have that same property, only for the more restricted case.\r\n\r\nSo, if `.default` was able to work on tables not existing, we might imagine `.create` being equivalent to:\r\n```javascript\r\nr.table('foo').default(function(err){\r\n    return r.tableCreate(err.match('Table `(.*)` does not exist in')('groups')(0)('str')));\r\n});\r\n```"
  , issueCommentId = 72785423
  }