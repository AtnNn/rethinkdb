IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-07) 22 : 12 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73385729"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3130#issuecomment-73385729"
  , issueCommentCreatedAt = 2015 (-02) (-07) 22 : 12 : 41 UTC
  , issueCommentBody =
      "The reusability aspect is actually really nice (both for `drop` and `create`) -- the fact that you just have to learn two commands and call them on any object you want. Unfortunately it breaks down for `create` because different objects have completely different optargs (the things you might want to pass to table create are different from what you might want to pass to index create). We could get around that by having `create` take an object with optargs, which wouldn't matter for JavaScript, but would be a little strange in Python because that's not how Python normally specifies optargs.\r\n\r\nI don't know... It might be one of those things that seem delightful but aren't meant to be, or may be we should work on this harder to make it happen. I think I'd opt for leaving this issue out of 2.0."
  , issueCommentId = 73385729
  }