Issue
  { issueClosedAt = Just 2013 (-05) (-21) 01 : 24 : 00 UTC
  , issueUpdatedAt = 2013 (-05) (-21) 01 : 33 : 20 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/817/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/817"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 817
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Adding a sindex through the web ui crashes rethinkdb"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/817"
  , issueCreatedAt = 2013 (-05) (-16) 18 : 45 : 33 UTC
  , issueBody =
      Just
        "I was running a cluster of 6 machines with a table with 6 shards.  I had a stress client running 1k clients distributed across all the machines in the cluster for this table, doing reads/writes/deletes.  Using the web ui, I added a new secondary index named \"value\" (not sure how this is supposed to work, but all rows contain a \"value\" field).  The entire cluster immediately crashed with the following backtrace:\n\n``` c\nVersion: rethinkdb 1.5.0-8-g8f447d-dirty (debug) (GCC 4.6.1)\nerror: Error in ../src/rdb_protocol/btree.cc at line 119:\nerror: Guarantee failed: [kv_location->value.has()] \nerror: Backtrace:\nVersion: rethinkdb 1.5.0-8-g8f447d-dirty (debug) (GCC 4.6.1)\nerror: Thu May 16 11:38:56 2013\n\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\n       3: format_backtrace(bool) at backtrace.cc:197\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:67\n       5: kv_location_delete(keyvalue_location_t<rdb_value_t>*, store_key_t const&, btree_slice_t*, repli_timestamp_t, scc_transaction_t<mc_cache_t>*) at btree.cc:119\n       6: rdb_update_single_sindex(btree_store_t<rdb_protocol_t>::sindex_access_t const*, rdb_modification_report_t const*, scc_transaction_t<mc_cache_t>*, auto_drainer_t::lock_t) at btree.cc:966\n       7: void boost::_bi::list4<boost::_bi::value<btree_store_t<rdb_protocol_t>::sindex_access_t const*>, boost::_bi::value<rdb_modification_report_t const*>, boost::_bi::value<scc_transaction_t<mc_cache_t>*>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<void (*)(btree_store_t<rdb_protocol_t>::sindex_access_t const*, rdb_modification_report_t const*, scc_transaction_t<mc_cache_t>*, auto_drainer_t::lock_t), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(btree_store_t<rdb_protocol_t>::sindex_access_t const*, rdb_modification_report_t const*, scc_transaction_t<mc_cache_t>*, auto_drainer_t::lock_t), boost::_bi::list0&, int) at bind.hpp:457\n       8: boost::_bi::bind_t<void, void (*)(btree_store_t<rdb_protocol_t>::sindex_access_t const*, rdb_modification_report_t const*, scc_transaction_t<mc_cache_t>*, auto_drainer_t::lock_t), boost::_bi::list4<boost::_bi::value<btree_store_t<rdb_protocol_t>::sindex_access_t const*>, boost::_bi::value<rdb_modification_report_t const*>, boost::_bi::value<scc_transaction_t<mc_cache_t>*>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:21\n       9: callable_action_instance_t<boost::_bi::bind_t<void, void (*)(btree_store_t<rdb_protocol_t>::sindex_access_t const*, rdb_modification_report_t const*, scc_transaction_t<mc_cache_t>*, auto_drainer_t::lock_t), boost::_bi::list4<boost::_bi::value<btree_store_t<rdb_protocol_t>::sindex_access_t const*>, boost::_bi::value<rdb_modification_report_t const*>, boost::_bi::value<scc_transaction_t<mc_cache_t>*>, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at runtime_utils.hpp:58\n       10: callable_action_wrapper_t::run() at runtime_utils.cc:67\n       11: coro_t::run() at coroutines.cc:178\n```\n\nI also observed this crash when I was running in release mode, but it might be a side-effect of the above error:\n\n``` c\nVersion: rethinkdb 1.4.5-1493-g7436cf (GCC 4.6.1)\nerror: Error in ../src/rdb_protocol/protocol.cc at line 238:\nerror: Guarantee failed: [ser_res == 0]  (errno 11 - Resource temporarily unavailable) corruption in disk-backed queue\nerror: Backtrace:\nerror: Thu May 16 11:23:37 2013\n\n       1: ../build/release/rethinkdb() [0x932602] format_backtrace(bool) + 130 in section .text\n       2: ../build/release/rethinkdb() [0x930150] report_fatal_error(char const*, int, char const*, ...) + 304 in section .text\n       3: ../build/release/rethinkdb() [0x8a50a1] rdb_protocol_details::post_construct_and_drain_queue(std::set<uuid_u, std::less<uuid_u>, std::allocator<uuid_u> > const&, btree_store_t<rdb_protocol_t>*, boost::shared_ptr<internal_disk_backed_queue_t>, auto_drainer_t::lock_t) + 1793 in section .text\n       4: ../build/release/rethinkdb() [0x8a72e7] callable_action_instance_t<boost::_bi::bind_t<void, void (*)(std::set<uuid_u, std::less<uuid_u>, std::allocator<uuid_u> > const&, btree_store_t<rdb_protocol_t>*, boost::shared_ptr<internal_disk_backed_queue_t>, auto_drainer_t::lock_t), boost::_bi::list4<boost::_bi::value<std::set<uuid_u, std::less<uuid_u>, std::allocator<uuid_u> > >, boost::_bi::value<btree_store_t<rdb_protocol_t>*>, boost::_bi::value<boost::shared_ptr<internal_disk_backed_queue_t> >, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() + 71 in section .text\n       5: ../build/release/rethinkdb() [0x43134e]\n```\n"
  , issueState = "closed"
  , issueId = Id 14420665
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 34
          , milestoneClosedIssues = 5
          , milestoneDescription = Nothing
          , milestoneTitle = "1.5.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/34"
          , milestoneCreatedAt = 2013 (-05) (-21) 01 : 33 : 20 UTC
          , milestoneState = "closed"
          }
  }