IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-17) 20 : 43 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 418097
        , simpleUserLogin = N "othiym23"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/418097?v=3"
        , simpleUserUrl = "https://api.github.com/users/othiym23"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12390641"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/222#issuecomment-12390641"
  , issueCommentCreatedAt = 2013 (-01) (-17) 20 : 43 : 53 UTC
  , issueCommentBody =
      "@wmrowman I would suggest that you look into alternate versions of protobuf support for use with Node, or at the very least alter the npm packaging of the driver to produce the Closure-compiled version as a preinstall / install / postinstall action instead of at publishing time. The latter is still a poor substitute for having an unobfuscated version of the code running in production, and the results of minification stuck out like a sore thumb to me the first time I used the driver from Node's REPL. Reviewing the available options makes clear that this entails a lot of work, but in the long run, I think it's unavoidable.\r\n\r\nAs @thisandagain says, developers need to be able to see unobfuscated source when developing / debugging / profiling their apps, and as someone developing tooling (I'm working on adding Node support for New Relic), I need to be able to be able to find clear and stable points to hook my instrumentation into 3rd party modules (see [the repo](https://github.com/newrelic/node-newrelic/tree/master/lib/instrumentation) for what I've built for some examples of how I do this). Packaging the driver this way ensures that adding support for Rethink to New Relic (and, I'm presuming, other APM tools like Nodetime or Nodefly) is difficult to impossible, regardless of its eventual popularity."
  , issueCommentId = 12390641
  }