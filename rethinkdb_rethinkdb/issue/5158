Issue
  { issueClosedAt = Just 2015 (-12) (-02) 00 : 07 : 54 UTC
  , issueUpdatedAt = 2015 (-12) (-15) 22 : 27 : 20 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5158/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5158"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 5158
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Migration issue: incompletely cleared indexes can mess up migration"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5158"
  , issueCreatedAt = 2015 (-11) (-30) 22 : 04 : 09 UTC
  , issueBody =
      Just
        "Reported on the mailing list by Lucas Miranda:\nhttps://groups.google.com/d/msg/rethinkdb/cynZc-_Z-DE/wDhlGwCDBwAJ\n\nHe did an `index-rebuild` on 2.0.5, and then upgraded to RethinkDB 2.2.1.\nRethinkDB 2.2.1 started migrating some metadata, and then failed as follows:\n\n``` C++\nError in src/rdb_protocol/datum.cc at line 1153:\nUnreachable code:\nBacktrace:\nFri Nov 27 16:54:30 2015\n\n1 [0xa57a20]: backtrace_t::backtrace_t() at ??:?\n2 [0xa57db3]: format_backtrace(bool) at ??:?\n3 [0xc99d65]: report_fatal_error(char const*, int, char const*, ...) at ??:?\n4 [0x8c5960]: ql::parse_secondary(std::string const&) at ??:?\n5 [0x8c5b02]: ql::datum_t::extract_primary(store_key_t const&) at ??:?\n6 [0x7f3c2b]: clear_sindex_traversal_cb_t::handle_pair(scoped_key_value_t&&, signal_t*) at ??:?\n7 [0x9ef745]: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\n8 [0x9ef4ae]: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\n9 [0x9ef4ae]: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\n10 [0x9ef4ae]: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\n11 [0x9efcf7]: btree_depth_first_traversal(superblock_t*, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, release_superblock_t, signal_t*) at ??:?\n12 [0x7eccb0]: store_t::clear_sindex_data(uuid_u, value_sizer_t*, deletion_context_t const*, key_range_t const&, signal_t*) at ??:?\n13 [0x934dc8]: /usr/bin/rethinkdb() [0x934dc8] at 0x934dc8 ()\n14 [0x936118]: /usr/bin/rethinkdb() [0x936118] at 0x936118 ()\n15 [0x97c548]: coro_t::run() at ??:?\nExiting.\n```\n\nFrom line 12 in the backtrace we can see that this was caused by `clear_sindex_data` being called on an old (pre 1.16) index. I think this can happen if RethinkDB 2.2.1 is started before the old index was fully cleared after the `index-rebuild`.\n\nUnfortunately we don't currently expose the index clearing process in ReQL, so it's hard to check for this condition in `index-rebuild`. We should think about changing that, so that `index-rebuild` can wait for the clearing to complete.\n\nMore importantly, it looks like the pre-check we do to detect any unsupported indexes before starting to migrate data doesn't catch deleted indexes with an unsupported version.\nIf that happens (like in this case), the database will be left in a partially migrated state, essentially making all data inaccessible.\nWe should fix this asap.\n\nAssigning @Tryneus .\n"
  , issueState = "closed"
  , issueId = Id 119591276
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 114
          , milestoneClosedIssues = 19
          , milestoneDescription = Nothing
          , milestoneTitle = "2.2.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/114"
          , milestoneCreatedAt = 2015 (-12) (-15) 22 : 25 : 25 UTC
          , milestoneState = "closed"
          }
  }