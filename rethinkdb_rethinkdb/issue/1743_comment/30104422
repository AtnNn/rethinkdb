IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-09) 04 : 03 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/30104422"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1743#issuecomment-30104422"
  , issueCommentCreatedAt = 2013 (-12) (-09) 04 : 03 : 39 UTC
  , issueCommentBody =
      "> what are your arguments against it?\r\n\r\nThis is really a matter of taste. Including large codebases into our own is just something I don't like. I would very strongly prefer to use `fetch` instead. I realize this makes offline compilation harder because people might clean directories and have to use `fetch` again, and it seems like the obvious solution to that is to make `r.js` optional.\r\n\r\n> I think making `r.js` optional is a bad idea. A lot of users use it to do a lot of things that reql cannot do (such as string manipulation and math).\r\n\r\nThere are two different flows: building rethink to use it, and building rethink in course of its development. For the former, `r.js` will always be a part of binaries that we ship, and will be trivially available for people who are compiling rethink from source. For the latter, allowing turning off `r.js` makes offline compilation issues go away, which is really nice.\r\n\r\nWhat if we make `r.js` optional but require users to turn it off explicitly in the configure script? This would make the functionality available to people building rethink to use it, and would allow developers who don't need it to turn it off."
  , issueCommentId = 30104422
  }