IssueComment
  { issueCommentUpdatedAt = 2016 (-09) (-09) 02 : 54 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/245804722"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5494#issuecomment-245804722"
  , issueCommentCreatedAt = 2016 (-09) (-09) 02 : 54 : 43 UTC
  , issueCommentBody =
      "> the problem with using $ref for pseudotypes is that it will bomb on json-schema clients that don't support overloading the behavior of that attribute\r\n\r\n@marshall007 could you expand a bit on this? I am leaning towards `$ref`, because all RQL pseudotypes are in fact valid JSON objects, and it seems perfectly normal to define them in an external schema that's officially provided by rethinkdb.\r\n\r\nThe problem with using `format` is the \"agreement between parties\" part: even if the format names were namespaced, you're essentially defining \"global\" formats, and the configuration is entirely out-of-channel.\r\n\r\nIf these types were implemented as references, on the other hand, there wouldn't be anything non-standard.\r\n"
  , issueCommentId = 245804722
  }