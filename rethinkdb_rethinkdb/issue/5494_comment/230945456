IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-07) 00 : 19 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/230945456"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5494#issuecomment-230945456"
  , issueCommentCreatedAt = 2016 (-07) (-07) 00 : 18 : 35 UTC
  , issueCommentBody =
      "@mbroadst I think there's value in having a version without references and other advanced features. However we should carefully discuss the API so that it's flexible enough.\r\n\r\nThe simplest option for an API I can think of is adding a top-level `r.checkJsonSchema(schema, object) -> bool` command. Then you could call this function in a write hook ( https://github.com/rethinkdb/rethinkdb/issues/5813 ) and fail writes that don't adhere to the schema. The schema itself would be stored as a constant within the write hook function, and no additional changes to the table metadata etc. would be required.\r\n\r\nA disadvantage of this is that it might be a bit too complicated to set up and manage. Something closer to what you suggest, where we add a new \"schema\" property to the table configuration is probably clearer and closer to what users expect."
  , issueCommentId = 230945456
  }