IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-06) 00 : 12 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 312966
        , simpleUserLogin = N "mbroadst"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/312966?v=3"
        , simpleUserUrl = "https://api.github.com/users/mbroadst"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/230638980"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5494#issuecomment-230638980"
  , issueCommentCreatedAt = 2016 (-07) (-06) 00 : 12 : 02 UTC
  , issueCommentBody =
      "On another line of discussion, I would also totally be willing to investigate preliminary support for json-schema in rethinkdb itself. Is there hesitation to add this support because of a desire to have complete support or nothing at all? \r\n\r\n@danielmewes couldn't we start off with support for just table validations (no references, or customization), storing the json-schema in e.g. `table_config` if you did something like `r.table('mytable').schema({ some: { json: 'schema' } })` ? I've already worked out the json-schema for custom reql types (all the geo types, dates, etc) in `thinkagain`, so those could be baked in and leveraged. \r\n"
  , issueCommentId = 230638980
  }