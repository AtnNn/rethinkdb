IssueComment
  { issueCommentUpdatedAt = 2016 (-09) (-09) 04 : 52 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/245818448"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5494#issuecomment-245818448"
  , issueCommentCreatedAt = 2016 (-09) (-09) 04 : 46 : 14 UTC
  , issueCommentBody =
      "Hmm, I do see the issue here, but having built a few projects that are heavily driven by json-schema, I had to abandon using `format` to solve the date issue in particular. The problem arises from the fact that your document is not just json-encoded between the database and server, but again between the server and client \8211 you do ultimately need to build a mechanism for encoding these \"special\" types between the client and server, and this intermediate form is the one that must be validated.\r\n\r\nEDIT: hit comment by accident\r\n\r\nSince there is already a well-defined representation for these types in the first part of the journey, then why not reuse it for the second part? JSON-schema isn't really designed to validate non-JSON values, so the only opportunity to reuse a schema is where it's encoded."
  , issueCommentId = 245818448
  }