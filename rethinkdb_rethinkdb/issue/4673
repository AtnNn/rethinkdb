Issue
  { issueClosedAt = Just 2015 (-08) (-17) 06 : 43 : 22 UTC
  , issueUpdatedAt = 2015 (-08) (-17) 18 : 01 : 36 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4673/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4673"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4673
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 172936
        , simpleUserLogin = N "freiksenet"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/172936?v=3"
        , simpleUserUrl = "https://api.github.com/users/freiksenet"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Errors when creating many tables fast"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4673"
  , issueCreatedAt = 2015 (-08) (-12) 07 : 04 : 18 UTC
  , issueBody =
      Just
        "Hello!\n\nIn our testing code we create a database, several tables (about 6), insert data and create some indexes. With javascript client version < 2, it worked fine, but after upgrading to version 2, we are having weird errors. They were solved by waiting ~2 seconds after creating tables and inserting data. It seems that the tables are no longer ready on the tableCreate promise resolve. I also get weird errors that connection is closed from tableCreate promises, even though the operation clearly succeeded. (tables _are_ created, data _is_ inserted, but index creation fails)\n\n``` js\nexport async function createTestDatabase(conn, dbName) {\n  await RethinkDB.dbCreate(dbName).run(conn);\n  await* TEST_DATA.get('tables').map(async function (data, table) {\n    await RethinkDB.db(dbName).tableCreate(table).run(conn);\n    await RethinkDB.db(dbName)\n      .table(table)\n      .insert(data.toJS())\n      .run(conn);\n  });\n  // With this pause it works fine\n  await new Promise((resolve) => {\n    setTimeout(() => resolve(), 2000);\n  });\n  await* TEST_DATA.get('tables').get(TYPE_TABLE).map(async function (type) {\n    const table = type.get('name');\n    const indexes = type.get('indexes') || List();\n    await* indexes.map(async function (index) {\n      const name = index.get('name');\n      const fields = index.get('fields');\n      const indexDefinition = fields.rest().reduce(\n        (acc, field) => acc(field),\n        RethinkDB.row(fields.first())\n      );\n      await RethinkDB\n        .db(dbName)\n        .table(table)\n        .indexCreate(name, indexDefinition)\n        .run(conn);\n      await RethinkDB\n        .db(dbName)\n        .table(table)\n        .indexWait(name)\n        .run(conn);\n    });\n  });\n}\n```\n## Errors:\n\nFrom tableCreate promises:\n\n```\nUnhandled rejection ReqlRuntimeError: Connection is closed in:\nr.db(\"testdb0dab7ebe_ddc5_4fab_a426_2e88d250e487\").tableCreate(\"User\")\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    at new ReqlRuntimeError (/home/freiksenet/Work/functo/reindex-api/node_modules/rethinkdb/errors.js:72:13)\n    at mkErr (/home/freiksenet/Work/functo/reindex-api/node_modules/rethinkdb/util.js:177:10)\n    at TcpConnection.<anonymous> (/home/freiksenet/Work/functo/reindex-api/node_modules/rethinkdb/net.js:323:18)\n    at TcpConnection.cancel (/home/freiksenet/Work/functo/reindex-api/node_modules/rethinkdb/util.js:26:16)\n    at TcpConnection.cancel (/home/freiksenet/Work/functo/reindex-api/node_modules/rethinkdb/net.js:603:43)\n    at wrappedCb (/home/freiksenet/Work/functo/reindex-api/node_modules/rethinkdb/net.js:262:17)\n    at tryCatcher (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/util.js:26:23)\n    at Promise.successAdapter (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/nodeify.js:23:30)\n    at Promise._settlePromiseAt (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/promise.js:575:21)\n    at Promise._settlePromises (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/promise.js:693:14)\n    at Async._drainQueue (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/async.js:123:16)\n    at Async._drainQueues (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/async.js:133:10)\n    at Immediate.Asy\n\nIn our testing code we create a database, several tables (about 6), insert data and create some indexes. With javascript client version < 2, it worked fine, but after upgrading to version 2, we are having weird errors. They were solved by waiting ~2 seconds after creating tables and inserting data. It seems that the tables are no longer ready on the tableCreate promise resolve. I also get weird errors that connection is closed from nc.drainQueues [as _onImmediate] (/home/freiksenet/Work/functo/reindex-api/node_modules/bluebird/js/main/async.js:15:14)\n    at processImmediate [as _immediateCallback] (timers.js:371:17)\n```\n\nFrom index creation\n\n```\n ReqlRuntimeError: Table `testdb0dab7ebe_ddc5_4fab_a426_2e88d250e487.Micropost` does not exist in:\nr.db(\"testdb0dab7ebe_ddc5_4fab_a426_2e88d250e487\").table(\"Micropost\").indexCreate(\"author\", r.row(\"author\")(\"value\"))\n```\n\n```\n```\n"
  , issueState = "closed"
  , issueId = Id 100481260
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }