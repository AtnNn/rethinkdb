Issue
  { issueClosedAt = Just 2014 (-07) (-25) 21 : 27 : 13 UTC
  , issueUpdatedAt = 2014 (-07) (-25) 22 : 34 : 06 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2741/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2741"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 2741
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Assertion failed: [copied_result.has()]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2741"
  , issueCreatedAt = 2014 (-07) (-23) 21 : 58 : 10 UTC
  , issueBody =
      Just
        "Ran into the following crash when running the polyglot test: `polyglot/regression/2399.rb`:\n\n``` cpp\nVersion: rethinkdb 1.13.3-532-gc0dca7-dirty (debug) (GCC 4.6.3)\nerror: Error in ../src/rdb_protocol/datum.cc at line 468:\nerror: Assertion failed: [copied_result.has()]\nerror: Backtrace:\nerror: Wed Jul 23 14:56:41 2014\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\n       2: backtrace_t::backtrace_t() at backtrace.cc:203\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\n       4: format_backtrace(bool) at backtrace.cc:198\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\n       6: ql::datum_t::drop_literals(bool*) const at datum.cc:468\n       7: ql::datum_t::drop_literals(bool*) const at datum.cc:446\n       8: ql::datum_t::drop_literals(bool*) const at datum.cc:446\n       9: ql::datum_t::drop_literals(bool*) const at datum.cc:415\n       10: ql::datum_t::merge(counted_t<ql::datum_t const>) const at datum.cc:861\n       11: ql::merge_term_t::obj_eval(ql::scope_env_t*, ql::args_t*, counted_t<ql::val_t>) const at obj_or_seq.cc:195\n       12: ql::obj_or_seq_op_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at obj_or_seq.cc:70\n       13: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:210\n       14: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:373\n       15: ql::args_t::arg(ql::scope_env_t*, unsigned long, ql::eval_flags_t) at op.cc:148\n       16: ql::branch_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at control.cc:56\n       17: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:210\n       18: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:373\n       19: ql::reql_func_t::call(ql::env_t*, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > > const&, ql::eval_flags_t) const at func.cc:71\n       20: ql::funcall_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at control.cc:120\n       21: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:210\n       22: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:373\n       23: ql::args_t::arg(ql::scope_env_t*, unsigned long, ql::eval_flags_t) at op.cc:148\n       24: ql::branch_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at control.cc:56\n       25: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:210\n       26: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:373\n       27: ql::reql_func_t::call(ql::env_t*, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > > const&, ql::eval_flags_t) const at func.cc:71\n       28: ql::func_t::call(ql::env_t*, counted_t<ql::datum_t const>, ql::eval_flags_t) const at func.cc:25\n       29: func_replacer_t::replace(counted_t<ql::datum_t const> const&, unsigned long) const at store.cc:336\n       30: one_replace_t::replace(counted_t<ql::datum_t const> const&) const at btree.cc:336\n...\n```\n"
  , issueState = "closed"
  , issueId = Id 38576772
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 71
          , milestoneClosedIssues = 113
          , milestoneDescription = Just ""
          , milestoneTitle = "1.14"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/71"
          , milestoneCreatedAt = 2014 (-06) (-11) 22 : 31 : 05 UTC
          , milestoneState = "closed"
          }
  }