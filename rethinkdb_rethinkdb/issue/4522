Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-07) (-09) 21 : 33 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4522/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4522"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 4522
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Create a \"table_info\" admin table"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4522"
  , issueCreatedAt = 2015 (-07) (-09) 19 : 31 : 36 UTC
  , issueBody =
      Just
        "Currently, doc counts and a list of secondary indexes needs to be obtained directly on a table through `.info()` (or `.indexList()`). This information wasn't added to `table_status` because it's slow to gather, and since we can't return a value until the slowest information returns, it would be an unnecessary drag on `table_status`'s performance.\r\n\r\nI still think there's value in have a `table_info` table because `r.db(x).table(y).info()` will succeed only if the table exists, whereas `table_status` and `table_config` always exist and can return error documents or incomplete documents with whatever non-authoritative information is available.\r\n\r\nThis makes admin queries easier, and makes thinks slightly more symmetrical with `.status()` and `.config()`. The major downside is that this would be a slow table, and `.info()` indicates that it's an operation rather than pretending it's data that's already hanging around (as a table implies). I think if we mention in the docs that the table is potentially very slow it would be ok."
  , issueState = "open"
  , issueId = Id 94133749
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }