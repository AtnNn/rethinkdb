Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-07) (-02) 02 : 51 : 46 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4439/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4439"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 4439
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Ability to \"tag\" databases"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4439"
  , issueCreatedAt = 2015 (-06) (-22) 19 : 09 : 31 UTC
  , issueBody =
      Just
        "We have several applications that generate a database per customer and in such cases we rely on `r.dbList()` for aggregated internal reporting. This hasn't been an issue in the past, but we're planning on consolidating our RethinkDB deployments soon, so a lot of different apps will now share the same RDB cluster.\r\n\r\nWith that in mind, it would be nice if we could tag/group databases in some way and then filter by tag (either as an optarg to `r.dbList()` or by using `.filter()` somehow). The workaround for us has been using to use a common prefix for database names and filter using `.match()`, but this doesn't allow for multiple groupings.\r\n\r\nI feel like I've seen something like this proposed in another issue, but I couldn't track it down. So apologies in advance if this is a dupe."
  , issueState = "open"
  , issueId = Id 90184151
  , issueComments = 7
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }