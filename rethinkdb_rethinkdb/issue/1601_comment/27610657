IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-02) 00 : 26 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27610657"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1601#issuecomment-27610657"
  , issueCommentCreatedAt = 2013 (-11) (-02) 00 : 26 : 03 UTC
  , issueCommentBody =
      "Some progress: The good thing is that starting with an empty database, I can now reproduce this. I used debug mode this time, and both nodes crashed at almost the same time with the following:\r\n```\r\nerror: Error in src/rdb_protocol/lazy_json.cc at line 19:\r\nerror: Guarantee failed: [res == 0]  (errno 11 - Resource temporarily unavailable) disk corruption (or programmer error) detected\r\nerror: Backtrace:\r\nerror: Fri Nov  1 17:22:17 2013\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\r\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:68\r\n       5: get_data(rdb_value_t const*, scc_transaction_t<mc_cache_t>*) at lazy_json.cc:19\r\n       6: post_construct_traversal_helper_t::process_a_leaf(scc_transaction_t<mc_cache_t>*, scc_buf_lock_t<mc_cache_t>*, btree_key_t const*, btree_key_t const*, signal_t*, int*) at btree.cc:1260\r\n       7: process_a_leaf_node(traversal_state_t*, scoped_ptr_t<scc_buf_lock_t<mc_cache_t> >*, int, btree_key_t const*, btree_key_t const*) at parallel_traversal.cc:476\r\n       8: do_a_subtree_traversal_fsm_t::on_node_ready(scoped_ptr_t<scc_buf_lock_t<mc_cache_t> >*) at parallel_traversal.cc:411\r\n       9: acquire_a_node_fsm_t::you_may_acquire() at parallel_traversal.cc:274\r\n       10: traversal_state_t::coro_pool_callback(acquisition_waiter_callback_t*, signal_t*) at parallel_traversal.cc:196\r\n       11: coro_pool_t<acquisition_waiter_callback_t*>::worker_run(acquisition_waiter_callback_t*, auto_drainer_t::lock_t) at coro_pool.hpp:70\r\n       12: boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>::operator()(coro_pool_t<acquisition_waiter_callback_t*>*, acquisition_waiter_callback_t*, auto_drainer_t::lock_t) const at mem_fn_template.hpp:280\r\n       13: void boost::_bi::list3<boost::_bi::value<coro_pool_t<acquisition_waiter_callback_t*>*>, boost::_bi::value<acquisition_waiter_callback_t*>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>&, boost::_bi::list0&, int) at bind.hpp:392\r\n       14: boost::_bi::bind_t<void, boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<coro_pool_t<acquisition_waiter_callback_t*>*>, boost::_bi::value<acquisition_waiter_callback_t*>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:21\r\n       15: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<coro_pool_t<acquisition_waiter_callback_t*>*>, boost::_bi::value<acquisition_waiter_callback_t*>, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at callable_action.hpp:28\r\n       16: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       17: coro_t::run() at coroutines.cc:178\r\nerror: Exiting.\r\n```\r\n\r\nOn the second node, the \"(errno 11 - Resource temporarily unavailable)\" part of the guarantee message is missing for some reason. Apart from that the backtrace and message is identical."
  , issueCommentId = 27610657
  }