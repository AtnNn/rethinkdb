IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-01) 22 : 44 : 36 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27606886"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1601#issuecomment-27606886"
  , issueCommentCreatedAt = 2013 (-11) (-01) 22 : 44 : 36 UTC
  , issueCommentBody =
      "Here's a somewhat better backtrace.\r\n```\r\nVersion: rethinkdb foo (debug) (GCC 4.6.3)\r\nerror: Error in src/buffer_cache/mirrored/mirrored.cc at line 178:\r\nerror: Guarantee failed: [data_token.has()] \r\nerror: Backtrace:\r\nerror: Fri Nov  1 15:33:47 2013\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\r\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:68\r\n       5: mc_inner_buf_t::load_inner_buf(bool, file_account_t*) at mirrored.cc:178\r\n       6: mc_inner_buf_t::mc_inner_buf_t(mc_cache_t*, unsigned long, file_account_t*) at mirrored.cc:214\r\n       7: mc_buf_lock_t::mc_buf_lock_t(mc_transaction_t*, unsigned long, access_t, buffer_cache_order_mode_t, lock_in_line_callback_t*) at mirrored.cc:514\r\n       8: scc_buf_lock_t<mc_cache_t>::scc_buf_lock_t(scc_transaction_t<mc_cache_t>*, unsigned long, access_t, buffer_cache_order_mode_t, lock_in_line_callback_t*) at semantic_checking.tcc:145\r\n       9: blob::region_tree_filler_t::operator()(int) const at blob.cc:320\r\n       10: void pmap<blob::region_tree_filler_t>(int, blob::region_tree_filler_t const&) at pmap.hpp:39\r\n       11: blob::make_tree_from_block_ids(scc_transaction_t<mc_cache_t>*, access_t, int, long, long, unsigned long const*) at blob.cc:341\r\n       12: blob_t::expose_region(scc_transaction_t<mc_cache_t>*, access_t, long, long, buffer_group_t*, blob_acq_t*) at blob.cc:289\r\n       13: blob_t::expose_all(scc_transaction_t<mc_cache_t>*, access_t, buffer_group_t*, blob_acq_t*) at blob.cc:298\r\n       14: rdb_blob_wrapper_t::expose_all(scc_transaction_t<mc_cache_t>*, access_t, buffer_group_t*, blob_acq_t*) at blob_wrapper.cc:38\r\n       15: get_data(rdb_value_t const*, scc_transaction_t<mc_cache_t>*) at lazy_json.cc:17\r\n       16: agnostic_rdb_backfill_callback_t::on_pair(scc_transaction_t<mc_cache_t>*, repli_timestamp_t, btree_key_t const*, void const*, signal_t*) at btree.cc:434\r\n       17: backfill_traversal_helper_t::process_a_leaf(scc_transaction_t<mc_cache_t>*, scc_buf_lock_t<mc_cache_t>*, btree_key_t const*, btree_key_t const*, signal_t*, int*)::{unnamed type#1}::key_value(btree_key_t const*, void const*, repli_timestamp_t) at backfill.cc:46\r\n       18: leaf::dump_entries_since_time(value_sizer_t<void>*, leaf_node_t const*, repli_timestamp_t, repli_timestamp_t, leaf::entry_reception_callback_t*) at leaf_node.cc:1510\r\n       19: backfill_traversal_helper_t::process_a_leaf(scc_transaction_t<mc_cache_t>*, scc_buf_lock_t<mc_cache_t>*, btree_key_t const*, btree_key_t const*, signal_t*, int*) at backfill.cc:58\r\n       20: process_a_leaf_node(traversal_state_t*, scoped_ptr_t<scc_buf_lock_t<mc_cache_t> >*, int, btree_key_t const*, btree_key_t const*) at parallel_traversal.cc:476\r\n       21: do_a_subtree_traversal_fsm_t::on_node_ready(scoped_ptr_t<scc_buf_lock_t<mc_cache_t> >*) at parallel_traversal.cc:411\r\n       22: acquire_a_node_fsm_t::you_may_acquire() at parallel_traversal.cc:274\r\n       23: traversal_state_t::coro_pool_callback(acquisition_waiter_callback_t*, signal_t*) at parallel_traversal.cc:196\r\n       24: coro_pool_t<acquisition_waiter_callback_t*>::worker_run(acquisition_waiter_callback_t*, auto_drainer_t::lock_t) at coro_pool.hpp:70\r\n       25: boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>::operator()(coro_pool_t<acquisition_waiter_callback_t*>*, acquisition_waiter_callback_t*, auto_drainer_t::lock_t) const at mem_fn_template.hpp:280\r\n       26: void boost::_bi::list3<boost::_bi::value<coro_pool_t<acquisition_waiter_callback_t*>*>, boost::_bi::value<acquisition_waiter_callback_t*>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>&, boost::_bi::list0&, int) at bind.hpp:392\r\n       27: boost::_bi::bind_t<void, boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<coro_pool_t<acquisition_waiter_callback_t*>*>, boost::_bi::value<acquisition_waiter_callback_t*>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:21\r\n       28: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf2<void, coro_pool_t<acquisition_waiter_callback_t*>, acquisition_waiter_callback_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<coro_pool_t<acquisition_waiter_callback_t*>*>, boost::_bi::value<acquisition_waiter_callback_t*>, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at callable_action.hpp:28\r\n       29: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       30: coro_t::run() at coroutines.cc:178\r\nerror: Exiting.\r\nTrace/breakpoint trap (core dumped)\r\n```\r\n\r\nLooks like something that's going to be fun to debug..."
  , issueCommentId = 27606886
  }