IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-29) 00 : 07 : 09 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135918836"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2269#issuecomment-135918836"
  , issueCommentCreatedAt = 2015 (-08) (-29) 00 : 07 : 09 UTC
  , issueCommentBody =
      "After giving this some more thought, I think I agree now that the division by 0 case is the most relevant one, and I think we should just make NaN a `NonExistence` error and make it catchable by `default`.\r\nWe should keep the handling of `Inf` the way it currently is.\r\n\r\nI was originally concerned about DoS attacks by malicious users injecting values that are too large, and thereby breaking analytical queries that are using these values and could be made to overflow. However even if we provided a way to handle `Inf`, that wouldn't be too useful in most queries I can think of because one way or the other, the result of the analytical query would be either wrong or undefined. So that probably wouldn't even be very useful."
  , issueCommentId = 135918836
  }