IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-31) 21 : 33 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/136507888"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2269#issuecomment-136507888"
  , issueCommentCreatedAt = 2015 (-08) (-31) 21 : 33 : 43 UTC
  , issueCommentBody =
      "@mlucy I wasn't aware of that. That indeed makes it a bad idea to treat `NaN` and `Inf` differently.\r\n\r\nI'd like to think about this for another day, but so far the following seems pretty reasonable to me then:\r\n* adding a new error type (`ReqlNumericError`, `ReqlMathError`?)\r\n* making `default` catch that error type in addition to non existence errors\r\n* long-term (but not for 2.2): making `default` accept a list of error types to catch\r\n\r\n(So basically what @coffeemug said.)"
  , issueCommentId = 136507888
  }