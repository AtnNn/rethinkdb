IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-02) 03 : 08 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/136921160"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2269#issuecomment-136921160"
  , issueCommentCreatedAt = 2015 (-09) (-02) 03 : 08 : 10 UTC
  , issueCommentBody =
      "Yeah I might have been over-thinking this.\r\nI suspect if a user places a `default` in a given place, they usually intend to ignore any data-related issues in that part of their query. Most queries I have seen use `default` in pretty localized places, and not as \"catch alls\" over a long sequence of terms. So the risk of unintentionally catching and ignoring a numeric problem is probably not very high.\r\n\r\nI do think that the question of which errors to catch in `default` matters. We will eventually allow providing a list of error types to `default`, but - unless it turns out by then that our decision has been substantially wrong - we will likely try to keep the default behavior that we decide on now.\r\n\r\nAnyway, I think the easier solution of having a generic `NumericError` error type for whenever `Inf` or `NaN` pop up, and catching that in `default` is good."
  , issueCommentId = 136921160
  }