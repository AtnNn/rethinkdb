IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-31) 22 : 04 : 49 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/136513632"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2269#issuecomment-136513632"
  , issueCommentCreatedAt = 2015 (-08) (-31) 22 : 04 : 49 UTC
  , issueCommentBody =
      "We would also need to do that anyway if we wanted to mimic the Python error types and have a `ZeroDivisionError`.\r\n\r\nI would be happy to have `default` catch `ZeroDivisionError` (by default), while I still have some small doubts for having it handle all numerical errors.\r\n\r\nSo here's another proposal which is similar but slightly different:\r\n* add a new error type `ReqlZeroDivisionError`\r\n* make `default` catch that error type in addition to non existence errors\r\n* make `div` and `mod` throw that error if one tries to divide by 0 (or sufficiently close to it to get an `Inf` result)\r\n* long-term (but not for 2.2): making `default` accept a list of error types to catch. Also add a `ReqlNumericError` or similar to allow handling `Inf` and `NaN` in places other than division by zero\r\n\r\nAny thoughts?"
  , issueCommentId = 136513632
  }