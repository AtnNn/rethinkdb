IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-27) 20 : 01 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135537138"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2269#issuecomment-135537138"
  , issueCommentCreatedAt = 2015 (-08) (-27) 20 : 01 : 59 UTC
  , issueCommentBody =
      "I don't think `NaN` is quite the same as non-existence. You can get `NaN` through perfectly fine calculations simply by encountering rounding issues.\r\nI suggest introducing a `ReqlNumericError` type and making both `NaN` and `Inf` throw an instance of it.\r\n\r\nMaking `default` catch those by default feels slightly wrong to me. But it probably wouldn't be terrible."
  , issueCommentId = 135537138
  }