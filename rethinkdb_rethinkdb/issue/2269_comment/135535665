IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-27) 19 : 54 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135535665"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2269#issuecomment-135535665"
  , issueCommentCreatedAt = 2015 (-08) (-27) 19 : 54 : 44 UTC
  , issueCommentBody =
      "I like extending default vs. add a `catch` term because it keeps ReQL in the declarative realm. The idea is to force the query to return a value instead of erroring out. your client code should be catching exceptions.\r\n\r\nMaking `NaN` a non-existence error makes sense to me (your answer isn't a number, would you like to provide a default?). I think `Inf` is a borderline conceptually, but I think making a whole separate exception type is splitting hairs, so I vote for both becoming NonExistence errors."
  , issueCommentId = 135535665
  }