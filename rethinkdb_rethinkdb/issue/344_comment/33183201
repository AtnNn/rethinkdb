IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-23) 23 : 55 : 08 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/33183201"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/344#issuecomment-33183201"
  , issueCommentCreatedAt = 2014 (-01) (-23) 23 : 55 : 08 UTC
  , issueCommentBody =
      "@coffeemug, Imagine a cluster of three nodes with one table (one shard):\r\n\r\nNode A: master\r\nNode B: nothing\r\nNode C: nothing\r\n\r\nThen we reshard the table into two shards.  If we don't have something to prevent it, we could end up with:\r\n\r\nNode A: nothing\r\nNode B: master-shard-1\r\nNode C: master-shard-2\r\n\r\nWhich would require twice as much backfilling as when one of the shards is allocated to Node A.  I believe we prefer this behavior at the moment, I was just saying we can't forget about it.\r\n\r\n@danielmewes, you said yourself that \"it will not guarantee that primaries for a given table are distributed across machines\", and on this front I think our blueprint suggester can do much better.  For certain combinations of pinnings and datacenter affinities, I am fairly certain our suggester will result in very lopsided clusters, when a more balanced solution exists.\r\n\r\n"
  , issueCommentId = 33183201
  }