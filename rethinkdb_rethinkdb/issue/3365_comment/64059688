IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-22) 00 : 35 : 16 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/64059688"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3365#issuecomment-64059688"
  , issueCommentCreatedAt = 2014 (-11) (-22) 00 : 35 : 16 UTC
  , issueCommentBody =
      "I am obviously in favor of this because I think that it makes things line up more with the rest or ReQL, and feels more integrated rather than just thrown in.\r\n\r\nWe already have `.info()` for both `db` and `table` and `.reconfigure()` for `table`\r\n\r\nThere are also lesser cases to be made for other terms (in descending order):\r\n1.`table_wait()` would feel a bit more natural as `.wait()` applied to the `db` and `table` objects.\r\n2. `db_create`/`db_drop`/`table_create`/`table_drop` are covered in #3130\r\n3. `.table_status()` to just `.status()`. This does imply a `db().status()` but does not require it.\r\n4. `.table_list()` and `.db_list()` to just `.list()`, but that would be a little awkward having `r.list().run()` being the `.db_list()` replacement."
  , issueCommentId = 64059688
  }