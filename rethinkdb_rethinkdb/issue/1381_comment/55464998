IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-12) 21 : 47 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55464998"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1381#issuecomment-55464998"
  , issueCommentCreatedAt = 2014 (-09) (-12) 21 : 47 : 30 UTC
  , issueCommentBody =
      "1. It's a lot slower.\r\n2. It makes interactive use unpleasant because the errors array becomes absolutely huge.  You type `r.table('test').insert(...)` and if there's one error on a 1MB document you get tons of scrolling text in your REPL as it tries to print the result of the query.\r\n\r\nAlso, I don't know enough JS to critique that snippet, but it seems way too long.  In Ruby I'd write:\r\n```rb\r\nres = r.table('test').insert('docs')\r\n(res['errors'] || []).each{|error|\r\n  docs_with_errors << docs[res['generated_keys'].index(error['key'])]\r\n}\r\n```\r\n(Assuming the arrays are small.)\r\n\r\nI definitely don't think we should return the documents by default, but like I said I'd be OK adding an optarg for it."
  , issueCommentId = 55464998
  }