IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-09) 23 : 39 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55052701"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1381#issuecomment-55052701"
  , issueCommentCreatedAt = 2014 (-09) (-09) 23 : 39 : 57 UTC
  , issueCommentBody =
      "Here's what I think we should do:\r\n* Replace `first_error` with `errors`.\r\n* Do https://github.com/rethinkdb/rethinkdb/issues/1375 and truncate errors based on cumulative size rather than the array size limit.\r\n* Have an optarg `return_error_rows` everywhere we accept `return_changes`.  If set to `true`, `errors` becomes an array of objects of the form `{error: ..., row: ...}` rather than an array of strings.\r\n\r\nThere are a few questions:\r\n* What should the default value of `return_error_rows` be?  It's nice to lean toward returning as much information as possible, but some people's rows are huuuuge, and having 1MB error messages that get printed out in a REPL by default sucks.\r\n* Should the optarg be `return_error_rows`?  I sort of don't like that name.\r\n  - One option would be to return `{error: ..., row: \"Use `return_error_rows` to see the row.\"}` if `return_error_rows` is set to `false`, rather than an array of strings.  That would help with discoverability."
  , issueCommentId = 55052701
  }