Issue
  { issueClosedAt = Just 2013 (-08) (-06) 19 : 21 : 27 UTC
  , issueUpdatedAt = 2013 (-08) (-13) 22 : 32 : 54 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1234/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1234"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02d7e1"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:reql"
          , labelName = "cp:reql"
          }
      ]
  , issueNumber = 1234
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 10422
        , simpleUserLogin = N "dmitrig01"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/10422?v=3"
        , simpleUserUrl = "https://api.github.com/users/dmitrig01"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Unable to find 10s of numbers"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1234"
  , issueCreatedAt = 2013 (-08) (-06) 00 : 31 : 46 UTC
  , issueBody =
      Just
        "I'm trying to find the 10s place and above of a bunch of numbers (2013 -> 201, 38.2 -> 3, etc). In JavaScript, I'd use either `Math.floor(num / 10)` or `(num - (field.number % 10)) / type)`. However, when I try using the second technique in rethink:\r\n```javascript\r\nr.table('data').map(function(data) {\r\n  return {\r\n    a: r.div(r.sub(data('num'), r.mod(data('num'), 10)), 10)\r\n  };\r\n})\r\n```\r\nI get an error because some of my numbers aren't integers, and r.mod doesn't want to work with non-integers. Of course, this solution is inferior to the Math.floor solution because of floating-point errors, so from my not-very-experienced-with-rethink point-of-view, the two solutions would be\r\n- introduce functions like r.floor, r.ceil, and r.round\r\n- change r.mod to work with floating point numbers\r\nEither would work for me, though a better solution would probably be the second.\r\n\r\nNote:\r\nAs a temporary solution, I'm using:\r\n```javascript\r\nr.table('data').map(r.js(\"(function (row) { return { 'a': Math.floor(row.num / 10); } })\"))\r\n```\r\nbut obviously that solution is not so great.\r\n"
  , issueState = "closed"
  , issueId = Id 17667504
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }