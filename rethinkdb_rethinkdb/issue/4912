Issue
  { issueClosedAt = Just 2016 (-04) (-07) 18 : 28 : 26 UTC
  , issueUpdatedAt = 2016 (-04) (-07) 18 : 28 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4912/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4912"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4912
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Segmentation fault in changefeed code"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4912"
  , issueCreatedAt = 2015 (-10) (-02) 18 : 43 : 26 UTC
  , issueBody =
      Just
        "I was running the table fuzzer with the following modification:\r\n```\r\ndiff --git a/test/interface/table_fuzzer.py b/test/interface/table_fuzzer.py\r\nindex 3ee85da..0464a02 100755\r\n--- a/test/interface/table_fuzzer.py\r\n+++ b/test/interface/table_fuzzer.py\r\n@@ -300,7 +300,7 @@ class insert(TableQuery):\r\n     def __init__(self, conn):\r\n         TableQuery.__init__(self, conn)\r\n         self.start = self.table.count\r\n-        self.num_rows = random.randint(1, 500)\r\n+        self.num_rows = random.randint(1000, 50000)\r\n         self.table.count = self.start + self.num_rows\r\n     def sub_query(self, q):\r\n         return q.insert(r.range(self.start, self.start + self.num_rows).map(lambda x: {'id': x}))\r\n```\r\nand these parameters:\r\n```\r\ntable_fuzzer.py --changefeeds --servers 4 --threads 64 --duration 1800\r\n```\r\non next commit 4bdbcfa57b6cf00bed4d9ebefc83d1a89fef984b .\r\n\r\nOne server then crashed with:\r\n```\r\nerror: Error in src/arch/runtime/thread_pool.cc at line 359:\r\nerror: Segmentation fault from reading the address 0x1.\r\nerror: Backtrace:\r\n```\r\n\r\nand oddly without a backtrace.\r\n\r\nGDB gives me the following backtrace from the core file:\r\n```\r\n#0  0x00007f0433ba8066 in ?? () from /lib/x86_64-linux-gnu/libgcc_s.so.1\r\n#1  0x00007f0433ba8d7d in _Unwind_Backtrace () from /lib/x86_64-linux-gnu/libgcc_s.so.1\r\n#2  0x00007f04336c7548 in backtrace () from /lib/x86_64-linux-gnu/libc.so.6\r\n#3  0x00000000016e955b in rethinkdb_backtrace (buffer=0x7f03647f0380, size=100) at src/rethinkdb_backtrace.cc:100\r\n#4  0x000000000220047b in backtrace_t::backtrace_t (this=0x7f041783e1c0) at src/backtrace.cc:203\r\n#5  0x0000000002200f65 in lazy_backtrace_formatter_t::lazy_backtrace_formatter_t (this=0x7f041783e1c0) at src/backtrace.cc:283\r\n#6  0x0000000002200107 in format_backtrace (use_addr2line=true) at src/backtrace.cc:197\r\n#7  0x00000000017f26ee in report_fatal_error (file=0x2962c4a \"src/arch/runtime/thread_pool.cc\", line=359, msg=0x2963780 \"Segmentation fault from reading the address %p.\")\r\n    at src/errors.cc:83\r\n#8  0x000000000160aeb4 in linux_thread_pool_t::fatal_signal_handler (signum=11, info=0x7f041783e570, data=0x7f041783e440) at src/arch/runtime/thread_pool.cc:359\r\n#9  <signal handler called>\r\n#10 0x0000000000000001 in ?? ()\r\n#11 0x00000000020c5591 in operator() (this=0x7f0417010040, sub=0x7f03fbe24c00) at src/rdb_protocol/changefeed.cc:2308\r\n#12 0x00000000020c5232 in std::_Function_handler<void (ql::changefeed::range_sub_t *), <lambda at src/rdb_protocol/changefeed.cc:2306:37> >::_M_invoke(const std::_Any_data &, ql::changefeed::range_sub_t *) (__functor=..., __args=0x7f03fbe24c00) at /usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../include/c++/4.6/functional:1778\r\n#13 0x00000000020b35b8 in std::function<void (ql::changefeed::range_sub_t *)>::operator()(ql::changefeed::range_sub_t *) const (this=0x7f03a77efd08, __args=0x7f03fbe24c00)\r\n    at /usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../include/c++/4.6/functional:2160\r\n#14 0x00000000020b3312 in ql::changefeed::each_sub_in_vec_cb<ql::changefeed::range_sub_t>(std::function<void (ql::changefeed::range_sub_t *)> &, std::vector<std::set<ql::changefeed::range_sub_t*, std::less<ql::changefeed::range_sub_t*>, std::allocator<ql::changefeed::range_sub_t*> >, std::allocator<std::set<ql::changefeed::range_sub_t*, std::less<ql::changefeed::range_sub_t*>, std::allocator<ql::changefeed::range_sub_t*> > > > &, std::vector<int, std::allocator<int> > &, int) (this=0x7f0390ffc100, f=..., \r\n    vec=std::vector of length 25, capacity 25 = {...}, subscription_threads=std::vector of length 1, capacity 1 = {...}, i=0) at src/rdb_protocol/changefeed.cc:2933\r\n#15 0x00000000020b4149 in std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)>::operator()(ql::changefeed::feed_t *, const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t*, std::less<ql::changefeed::range_sub_t*>, std::allocator<ql::changefeed::range_sub_t*> >, std::allocator<std::set<ql::changefeed::range_sub_t*, std::less<ql::changefeed::range_sub_t*>, std::allocator<ql::changefeed::range_sub_t*> > > > &, const std::vector<int, std::allocator<int> > &, int) const (this=0x7f03a77ef668, __object=0x7f0390ffc100, __args=0, __args=0, __args=0, __args=0)\r\n    at /usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../include/c++/4.6/functional:550\r\n#16 0x00000000020b406d in std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)>::__call_c<void, long&, 0, 1, 2, 3, 4>(<unknown type in /home/ssd3/daniel/rethinkdb/build/debug_clang/rethinkdb, CU 0x567e6f1, DIE 0x578de39>) const (this=0x7f03a77ef668, \r\n    __args=<unknown type in /home/ssd3/daniel/rethinkdb/build/debug_clang/rethinkdb, CU 0x567e6f1, DIE 0x578de39>)\r\n    at /usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../include/c++/4.6/functional:1154\r\n#17 0x00000000020b3f5d in std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)>::operator()<long &, void>(long &) const (this=0x7f03a77ef668, __args=@0x7f03a77ef518) at /usr/lib/gcc/x86_64-linux-gnu/4.6/../../../../include/c++/4.6/functional:1217\r\n#18 0x00000000020b3ee4 in pmap_runner_one_arg_t<std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)>, long>::operator()(void) (this=0x7f03a77ef518) at ./src/concurrency/pmap.hpp:20\r\n#19 0x00000000020b3e19 in pmap<std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)> >(int64_t, int64_t, const std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)> &) (begin=0, end=1, c=...)\r\n    at ./src/concurrency/pmap.hpp:47\r\n#20 0x00000000020b30ba in pmap<std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)> >(int64_t, const std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(const std::function<void (ql::changefeed::range_sub_t *)> &, const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > &, const std::vector<int, std::allocator<int> > &, int)> (ql::changefeed::feed_t *, std::reference_wrapper<const std::function<void (ql::changefeed::range_sub_t *)> >, std::reference_wrapper<const std::vector<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> >, std::allocator<std::set<ql::changefeed::range_sub_t *, std::less<ql::changefeed::range_sub_t *>, std::allocator<ql::changefeed::range_sub_t *> > > > >, std::reference_wrapper<const std::vector<int, std::allocator<int> > >, std::_Placeholder<1>)> &) (count=1, c=...) at ./src/concurrency/pmap.hpp:53\r\n#21 0x000000000208cbb9 in ql::changefeed::feed_t::each_sub_in_vec<ql::changefeed::range_sub_t>(std::vector<std::set<ql::changefeed::range_sub_t*, std::less<ql::changefeed::range_sub_t*>, std::allocator<ql::changefeed::range_sub_t*> >, std::allocator<std::set<ql::changefeed::range_sub_t*, std::less<ql::changefeed::range_sub_t*>, std::allocator<ql::changefeed::range_sub_t*> > > > &, rwlock_in_line_t *, auto_drainer_t::lock_t &, std::function<void (ql::changefeed::range_sub_t *)> &) (this=0x7f0390ffc100, \r\n    vec=std::vector of length 25, capacity 25 = {...}, spot=0x7f03a77ef708, lock=..., f=...) at src/rdb_protocol/changefeed.cc:2921\r\n#22 0x0000000002081434 in ql::changefeed::feed_t::each_range_sub(auto_drainer_t::lock_t &, std::function<void (ql::changefeed::range_sub_t *)> &) (this=0x7f0390ffc100, \r\n    lock=..., f=...) at src/rdb_protocol/changefeed.cc:2942\r\n#23 0x00000000020c21f4 in ql::changefeed::msg_visitor_t::operator() (this=0x7f03a77f0098, change=...) at src/rdb_protocol/changefeed.cc:2306\r\n#24 0x00000000020c2133 in boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>::internal_visit<ql::changefeed::msg_t::change_t const> (this=0x7f03a77effa8, \r\n    operand=...) at /usr/local/include/boost/variant/variant.hpp:858\r\n#25 0x00000000020c20fc in boost::detail::variant::visitation_impl_invoke_impl<boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>, void const*, ql::changefeed::msg_t::change_t> (visitor=..., storage=0x7f03daa96020) at /usr/local/include/boost/variant/detail/visitation_impl.hpp:129\r\n#26 0x00000000020c0a2f in boost::detail::variant::visitation_impl_invoke<boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>, void const*, ql::changefeed::msg_t::change_t, boost::variant<ql::changefeed::msg_t::stop_t, ql::changefeed::msg_t::change_t, ql::changefeed::msg_t::limit_start_t, ql::changefeed::msg_t::limit_change_t, ql::changefeed::msg_t::limit_stop_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_> (\r\n    internal_which=1, visitor=..., storage=0x7f03daa96020, t=0x0) at /usr/local/include/boost/variant/detail/visitation_impl.hpp:170\r\n#27 0x00000000020c05e5 in boost::detail::variant::visitation_impl<mpl_::int_<0>, boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<5>, ql::changefeed::msg_t::stop_t, boost::mpl::l_item<mpl_::long_<4>, ql::changefeed::msg_t::change_t, boost::mpl::l_item<mpl_::long_<3>, ql::changefeed::msg_t::limit_start_t, boost::mpl::l_item<mpl_::long_<2>, ql::changefeed::msg_t::limit_change_t, boost::mpl::l_item<mpl_::long_<1>, ql::changefeed::msg_t::limit_stop_t, boost::mpl::l_end> > > > > >, boost::mpl::l_iter<boost::mpl::l_end> >, boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>, void const*, boost::variant<ql::changefeed::msg_t::stop_t, ql::changefeed::msg_t::change_t, ql::changefeed::msg_t::limit_start_t, ql::changefeed::msg_t::limit_change_t, ql::changefeed::msg_t::limit_stop_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_> (internal_which=1, logical_which=1, visitor=..., storage=0x7f03daa96020, \r\n    no_backup_flag=...) at /usr/local/include/boost/variant/detail/visitation_impl.hpp:256\r\n...\r\n```"
  , issueState = "closed"
  , issueId = Id 109549109
  , issueComments = 7
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }