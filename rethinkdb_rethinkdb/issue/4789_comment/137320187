IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-03) 03 : 29 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 5349504
        , simpleUserLogin = N "Xbot3maSter"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/5349504?v=3"
        , simpleUserUrl = "https://api.github.com/users/Xbot3maSter"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/137320187"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4789#issuecomment-137320187"
  , issueCommentCreatedAt = 2015 (-09) (-03) 03 : 29 : 40 UTC
  , issueCommentBody =
      "just tested this command \r\nr.db(\"code_friends_test\").table(\"documents_ops\").indexWait(\"v\")\r\ni was wait the index building it as run the code same time\r\n\r\nnpm test\r\n\r\n> CodeFriends@1.0.0 test /root/Downloads/CodeFriends-master\r\n> export NODE_ENV='test'; ./node_modules/mocha/bin/mocha -t 15000 server/tests/index\r\n\r\nconfig: { mysql: \r\n   { host: 'localhost',\r\n     user: 'root',\r\n     password: '',\r\n     database: 'code_friends_test' },\r\n  mongo: 'mongodb://localhost:27017/codeFriendsTest?auto_reconnect',\r\n  rethinkdb: { host: 'localhost', port: 28015, db: 'code_friends_test' },\r\n  ports: { http: 8000, editor: 9000, chat: 9001, video: 8005 },\r\n  url: '127.0.0.1',\r\n  github: \r\n   { clientID: '364ea3bc2b086177fd27',\r\n     clientSecret: '2dce4e81ad618474f5c822b4567200b941a6c1b1' },\r\n  timeFormat: 'YYYY-MM-DDTHH:MM:SSZ',\r\n  tmpDirectory: '../data/tmp',\r\n  gitRepositoriesDirectory: '../data/git-repositories' }\r\nChat listening on port: 9001\r\nEditor listening on port: 9000\r\n\r\n\r\n  Code Friends\r\ncreated table: users\r\ncreated table: projects\r\ncreated table: templates\r\ncreated table: projects_users\r\n    Database\r\n      User\r\n        \10003 should create a new user (851ms)\r\n      Project\r\n        \10003 should create a new project (154ms)\r\n      Template\r\n        \10003 should create a new template (135ms)\r\n      User/Project\r\n        \10003 should attach user to a project (364ms)\r\n    Auth\r\n      - should sign up the user\r\n      - should authenticate the user\r\n      - should logout the user\r\n    API\r\n      User\r\n        \10003 should get all of the users and their projects on GET /user (54ms)\r\n        \10003 should get a specific user on GET /user/:username\r\n        \10003 should create a new user on POST /user (827ms)\r\n      Project\r\n        \10003 should create a new project on POST /project (341ms)\r\n        \10003 should add a user to a project on PUT /project/addUser (180ms)\r\n        \10003 should get all of the user's projects on GET /project (68ms)\r\n        \10003 should get a specific project on GET /project/:projectName (167ms)\r\n        \10003 should get a specific project on GET /project/:id (225ms)\r\n        \10003 should delete a project on DELETE /project/projectId (61ms)\r\n        Uploading .zips in POST /api/project\r\nUnhandled rejection ReqlRuntimeError: Index `v` was not found on table `code_friends_test.documents_ops` in:\r\nr.table(\"documents_ops\").orderBy({\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    index: \"v\"\r\n    ^^^^^^^^^^\r\n}).filter({\r\n^^^^^^^^^^^\r\n    name: \"a4a7b92dd21e41a7c70d213d725c89ec088d7294274610fd681a43d12f417188\"\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n}).filter(function(var_1) {\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    return var_1(\"v\").ge(0).and(var_1(\"v\").lt(1))\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n})\r\n^^\r\n\r\n    at Connection._processResponse (/root/Downloads/CodeFriends-master/node_modules/livedb-rethinkdb/node_modules/rethinkdbdash/lib/connection.js:184:35)\r\n    at Socket.<anonymous> (/root/Downloads/CodeFriends-master/node_modules/livedb-rethinkdb/node_modules/rethinkdbdash/lib/connection.js:117:22)\r\n    at Socket.emit (events.js:107:17)\r\n    at readableAddChunk (_stream_readable.js:163:16)\r\n    at Socket.Readable.push (_stream_readable.js:126:10)\r\n    at TCP.onread (net.js:538:20)\r\n          1) should add all files in the main folder from a .zip with a parent directory\r\n          \10003 should add all files in the main folder when uploading from .zip with no parent directory (1479ms)\r\n        Cloning git repos through POST /api/project\r\n          \10003 should add all files into a project when a git url (https) is passed to it (14222ms)\r\n          - should add all files into a project when a git (git) url is passed to it\r\n          - should add all files into a project when a larger git repo url is passed to it\r\n      File\r\n        \10003 should get the file structure for a project (198ms)\r\n        \10003 should add a new file when POSTed (116ms)\r\nError creating new file or folder [Error: Path is Invalid or File Already Exists]\r\nError Creating File or Folder: [TypeError: Cannot read property 'id' of undefined]\r\n        \10003 should throw a 400 error when a file has already been created\r\n        \10003 should add a new folder when POSTed (116ms)\r\n        \10003 should add a new file to a folder that was already added (170ms)\r\n        \10003 should add a new folder to a folder that was already added (143ms)\r\n        \10003 should add a new file to a second-level folder (114ms)\r\n        \10003 should get the file structure when requesting a project through GET\r\n        \10003 should upload a new file to the database (440ms)\r\n        \10003 should upload a new file to a folder in the database (385ms)\r\n        \10003 should download a file in the database (41ms)\r\n        \10003 should download a file in the database that is not in the root folder (39ms)\r\n        \10003 should download a project on GET /api/project/download/:projectNameOrId (614ms)\r\n        Moving Files\r\nError creating new file or folder [Error: Path is Invalid or File Already Exists]\r\n          \10003 should move a file from a folder to root on PUT /api/file/move (959ms)\r\nError creating new file or folder [Error: Path is Invalid or File Already Exists]\r\n          \10003 should move a file from root to a folder on PUT /api/file/move (628ms)\r\nError creating new file or folder [Error: Path is Invalid or File Already Exists]\r\n          \10003 should move a file from root to a folder that is within a folder on PUT /api/file/move (745ms)\r\nError creating new file or folder [Error: Path is Invalid or File Already Exists]\r\n          \10003 should move a file from a folder that is within a folder to the root on PUT /api/file/move (653ms)\r\n      Template\r\n        \10003 should add a new template on POST api/template (160ms)\r\n        \10003 should add a update a template name on PUT api/template/newName (118ms)\r\n        \10003 should update a gitRepoUrl on PUT api/template/newGitRepoUrl (76ms)\r\n        \10003 should get all templates on GET api/template/\r\n        \10003 should delete a template on DELETE api/template/ (109ms)\r\nDeleting All MySQL Tables\r\nDeleting All RethinkDB Tables\r\nDeleting Database Done\r\n\r\n\r\n  37 passing (53s)\r\n  5 pending\r\n  1 failing\r\n\r\n  1) Code Friends API Project Uploading .zips in POST /api/project should add all files in the main folder from a .zip with a parent directory:\r\n     Error: timeout of 15000ms exceeded. Ensure the done() callback is being called in this test.\r\n  \r\nnpm ERR! Test failed.  See above for more details.\r\n\r\n"
  , issueCommentId = 137320187
  }