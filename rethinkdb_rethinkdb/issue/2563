Issue
  { issueClosedAt = Just 2014 (-06) (-28) 00 : 45 : 35 UTC
  , issueUpdatedAt = 2014 (-07) (-16) 23 : 41 : 31 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2563/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2563"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2563
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 258437
          , simpleUserLogin = N "srh"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/258437?v=3"
          , simpleUserUrl = "https://api.github.com/users/srh"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Make everything use serialization versions right (removing ONLY_VERSION)"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2563"
  , issueCreatedAt = 2014 (-06) (-18) 03 : 17 : 21 UTC
  , issueBody =
      Just
        "In followup to #2537, but less urgent relative to other work on 1.14., we need to make everything use serialization versions properly.  Many things still assume there's just one version.  These things use `cluster_version_t::ONLY_VERSION` to declare this assumption.\r\n\r\nFor example: when sending a message across the cluster, right now we still use ONLY_VERSION instead of having a map of connection-sessions and version numbers to look that information up by.\r\n\r\nFor example: persist.cc assumes there's just one version, with no code that checks the block magic.\r\n\r\nOut-of-scope example: The btree code assumes there's just one version of leaf format.\r\n\r\nOut-of-scope example: When upgrading a cluster with changes to the query language between versions, ReQL evaluation can't start using new query language features until... everything supports it.  There's no code, no UI, related to bringing the cluster up a version, or, say, bringing a table up a version, if the per-table notion would make sense.  (See #2564.)\r\n\r\n(Assigning to myself, because this is a continuation of #2537.)\r\n\r\n(Implementing in sam_2563, branched off of sam_2537, which is branched off of v1.13.x.)"
  , issueState = "closed"
  , issueId = Id 35951463
  , issueComments = 6
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 74
          , milestoneClosedIssues = 7
          , milestoneDescription = Nothing
          , milestoneTitle = "1.13.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/74"
          , milestoneCreatedAt = 2014 (-07) (-03) 21 : 42 : 41 UTC
          , milestoneState = "closed"
          }
  }