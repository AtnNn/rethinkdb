IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-05) 13 : 07 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/36739958"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2063#issuecomment-36739958"
  , issueCommentCreatedAt = 2014 (-03) (-05) 13 : 07 : 18 UTC
  , issueCommentBody =
      "This would sometimes be nice to have.  Note that `r.uniqueId()` (which I would rather call `r.uuid()`) would have to be a treated as a nondeterministic expression, the same way as `r.js(...)` -- you couldn't \"send the query to the row\" and then generate the UUID when updating a row atomically.  You'd have to (assuming a straightforward implementation on the server) generate the UUID and then do the query.\r\n\r\nSomething like thisthis:\r\n\r\n```\r\nr.js('Math.random()').do(function(x) { return r.table('foo').update({'z': x}); })\r\n```"
  , issueCommentId = 36739958
  }