IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-13) 01 : 55 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52001141"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2840#issuecomment-52001141"
  , issueCommentCreatedAt = 2014 (-08) (-13) 01 : 55 : 00 UTC
  , issueCommentBody =
      "Running `r.db('test').table(table['name']).filter(r.row['field0'].gt('5'))` from two clients in a loop against a server with 16 MB cache size crashed after a few minutes with\r\n```\r\nerror: Error in src/rdb_protocol/lazy_json.cc at line 22:\r\nerror: Guarantee failed: [res == archive_result_t::SUCCESS] Deserialization of rdb value failed with error archive_result_t::RANGE_ERROR.\r\nerror: Backtrace:\r\nerror: Tue Aug 12 18:50:34 2014\r\n       \r\n       1: format_backtrace(bool) at backtrace.cc:214\r\n       2: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       3: get_data(rdb_value_t const*, buf_parent_t) at basic_string.h:288\r\n       4: lazy_json_t::get() const at counted.hpp:98\r\n       5: rget_cb_t::handle_pair(scoped_key_value_t&&, concurrent_traversal_fifo_enforcer_signal_t) at counted.hpp:35\r\n       6: concurrent_traversal_adapter_t::handle_pair_coro(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t) at concurrent_traversal.cc:67\r\n       7: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (concurrent_traversal_adapter_t::*)(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> (concurrent_traversal_adapter_t*, scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> >::run_action() at functional:551\r\n       8: coro_t::run() at coroutines.cc:206\r\nerror: Exiting.\r\nTrace/breakpoint trap (core dumped)\r\n```\r\n\r\nRelated to #2410?\r\n\r\nNot sure if it's reproducible yet, but something is wrong..."
  , issueCommentId = 52001141
  }