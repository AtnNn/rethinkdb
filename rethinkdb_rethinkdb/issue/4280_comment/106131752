IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-28) 01 : 27 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 284476
        , simpleUserLogin = N "jasonkuhrt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/284476?v=3"
        , simpleUserUrl = "https://api.github.com/users/jasonkuhrt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/106131752"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4280#issuecomment-106131752"
  , issueCommentCreatedAt = 2015 (-05) (-28) 01 : 27 : 40 UTC
  , issueCommentBody =
      "@marshall007 You could just as well ask why do you need an EventEmitter in the API? For the same reasons as you might want a composable stream API. You are missing the fact that dealing with a change feed right now likely requires code such as:\r\n\r\n```\r\n...\r\ncursor.on('data', ...)\r\ncursor.on('error', ...)\r\n```\r\n\r\nI haven't explored ChangeFeeds in depth yet but I will report back on other use-cases, such as composing multiple ChangeFeeds together or composing ChangeFeeds with other completely different stream sources.\r\n\r\nEven without direct FRP support Kefir can completely wrap an EE API https://rpominov.github.io/kefir/#from-event just like Bluebird can completely wrap a Callback API."
  , issueCommentId = 106131752
  }