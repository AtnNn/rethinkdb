IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-17) 23 : 28 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/112979295"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4410#issuecomment-112979295"
  , issueCommentCreatedAt = 2015 (-06) (-17) 23 : 28 : 25 UTC
  , issueCommentBody =
      "Thanks for the performance numbers. That's a pretty significant difference.\r\n\r\nAs you've said, it's hard to get this functionality into our `update` term since it works on a selection.\r\n\r\nMaybe the `no_conflict` solution with `insert` that you proposed is really the easiest way to solve this.\r\nThe thing I don't like about it is that it only makes sense in a very specific usage scenario for `insert`, and someone not aware of that use case might be confused as to what the `no_conflict` parameter could be useful for. This is not a very strong argument against it.\r\n\r\nLet's include this in the next ReQL discussion period, so we can hear what other people think about it (@mlucy, @atnnn)."
  , issueCommentId = 112979295
  }