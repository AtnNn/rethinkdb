IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-29) 20 : 39 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/41729047"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2272#issuecomment-41729047"
  , issueCommentCreatedAt = 2014 (-04) (-29) 20 : 39 : 39 UTC
  , issueCommentBody =
      "@coffeemug your suggestion of breaking the update down to multiple sindex block acquisitions would avoid the memory problem of my idea. We would still have to be careful about when a read is allowed to pass a write on a secondary index and when it isn't.\r\n\r\nSecondary indexes do get snapshotted, so writes don't have to wait for reads. To get the other way around we would have to implement something like #1841 and enforce any ordering guarantees separately.\r\n\r\nNone of this sounds trivial. I'll think more about it and also run some actual tests."
  , issueCommentId = 41729047
  }