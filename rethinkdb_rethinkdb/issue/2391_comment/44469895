IssueComment
  { issueCommentUpdatedAt = 2014 (-05) (-28) 21 : 55 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/44469895"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2391#issuecomment-44469895"
  , issueCommentCreatedAt = 2014 (-05) (-28) 21 : 55 : 52 UTC
  , issueCommentBody =
      "@eliangidoni:\r\n\r\n> get the current extprocs count\r\n\r\nNothing currently tracks the number of extprocs in use.  This logic should probably be put into the `extproc_pool_t` object.  It shouldn't be too hard to have `extproc_worker_t` notify the `extproc_pool_t` when acquired and released (as long as it is done in a thread-safe and exception-safe manner).\r\n\r\n> deallocate some of them\r\n\r\nIn order to deallocate an extproc worker process, the function `extproc_worker_t::kill_process()` should be called on the worker to kill (this function is private at the moment).  This would need to be done after acquiring it from the semaphore in the `extproc_pool_t`.  Calling `kill_process()` will kill the worker process until a new job attempts to acquire the worker, in which case a new worker process will be started."
  , issueCommentId = 44469895
  }