Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-04) (-01) 00 : 29 : 51 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3786/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3786"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/JavaScript%20/%20Coffee"
          , labelName = "JavaScript / Coffee"
          }
      ]
  , issueNumber = 3786
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "JavaScript driver nits/fixes"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3786"
  , issueCreatedAt = 2015 (-02) (-16) 20 : 49 : 26 UTC
  , issueBody =
      Just
        "Having read through `net.coffee` in probably way too much detail recently, I accumulated a huge number of nits that might be cleaned up. These are quick to fix, but probably not worth taking on unless (for some reason) we decide against #3771 . If #3771 is accepted, this issue can be closed, since it's very specific to the current js driver, and none of these will apply to rethinkdb-dash\n- [ ] convert direct imports of util functions to use the util.namespace.\n- [ ] The connection constructor should use coffeescript default args,\n  rather than doing it manually\n- [ ] in _processResponse, the conditional should have the error\n  condition at the top, and should return early rather than having an\n  `else` that's miles away from the `if`\n- [ ] Remove the line containing `@_events = @_events || {}`, it's no longer needed (used\n  for emulating google EventEmitter previously)\n- [ ] Rename the _data method to something less opaque. Also move it closer\n  to where it's invoked (_start)\n- [ ] Rename b,i in @buffer to byte, offset in @buffer in the\n  handshake portion of the code\n- [ ] move the default setting code in the constructor for `db` down\n  below the other defaults, rather than being right in the middle\n- [ ] if cursor? and if feed? arms in _processResponse are identical\n  because the two types share and implementation. Either one of two\n  things should be done:\n  - Change the outstandingCallbacks object to include an `iterable`\n    key, and store either a feed or a cursor in it.\n  - Collapse the two branches together to remove boilerplate (this is\n    suboptimal if the first option is possible because cursors and\n    feeds are mutually exclusive in a response as I assume)\n- [ ] the else if in _processResponse that checks for a callback `cb?`\n  should have an else branch that raises an error if there is no\n  callback, but it's not a feed or cursor.\n- [ ] Rename the `root` key in outstandingCallbacks to something like `query`, right now the name is confusingly opaque\n- [ ] Abstract out the code that handles error responses in\n  _processResponse, it's repetitive boilerplate.\n- [ ] Also abstract out the code that handles success responses, it's\n  boilerplatey as well\n- [ ] Make `.cancel` private since it isn't documented publicly.\n- [ ] Argument decision trees in close and reconnect have unreachable\n  cases, and cases where values are set to something that is known to\n  be undefined\n- [ ] `reconnect` refers to @rawSocket, which is only present in the\n  TCPConnection, not the HTTPConnection. This method should probably\n  be moved to the subclass\n- [ ] Make the isOpen method private\n- [ ] Keep track of whether any queries are ever sent with `noreply:\n  true`. If not, don't bother ever running a `noreplyWait` query on\n  close.\n- [ ] In the `timeout` listener in the TcpConnection constructor,\n  instead of just setting @close to false, we should close the\n  connection directly. This will raise the 'close' event on the\n  socket, and the connections 'close' handler will be run\n- [ ] In TcpConnection constructor fix \"timedout\" -> \"timed out\"\n- [ ] Uh, why is the `@_url` variable only stored once a connection is\n  successfully created? The url never changes, so this is useless to\n  do so late.\n- [ ] In httpConnection.cancel, we null out @_url. This seems pointless.\n- [ ] httpConnection.close is completely redundant. The superclass calls cancel.\n- [ ] split out encodeURI(data).split into its own variable, making it\n  clear the reasoning is for unicode\n- [ ] in r.connect, create_connection needs to be inlined. there's no\n  reason for it to be a function.\n- [ ] wrappedCb in r.connect is redundant. Both TcpConnection and\n  HttpConnection return promises, so we can just chain the callback\n  onto the promise from them instead of creating a new promise\n- [ ] Remove the handler for the `timeout` event on `@rawSocket` in `TcpConnection`. It's dead code per #3768 \n"
  , issueState = "open"
  , issueId = Id 57849817
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }