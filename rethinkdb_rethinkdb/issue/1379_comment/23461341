IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-29) 01 : 31 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 91193
        , simpleUserLogin = N "mglukhovsky"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/91193?v=3"
        , simpleUserUrl = "https://api.github.com/users/mglukhovsky"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/23461341"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1379#issuecomment-23461341"
  , issueCommentCreatedAt = 2013 (-08) (-29) 01 : 31 : 11 UTC
  , issueCommentBody =
      "Right, I didn't mean please and thank you-- I think that the main problems are:\r\n\r\n- no capitalization\r\n- some error messages don't provide a helping hand in how the user screwed up (such as those pointed out by Slava)\r\n- imperative words (e.g. \"must use one delimiter\") instead of explanations (\"only one delimiter may be specified\", or something to that effect)\r\n\r\nHere are some good examples I found of other CLI tools:\r\n\r\n`mosh` tries to be helpful when it can't find a remote IP address and capitalizes.\r\n```\r\ndr-manhattan:~ michael$ mosh asdsad\r\n/usr/bin/mosh: Could not resolve hostname asdsad\r\nssh_exchange_identification: Connection closed by remote host\r\n/usr/bin/mosh: Did not find remote IP address (is SSH ProxyCommand disabled?).\r\n```\r\n\r\n`htop` uses capitalization.\r\n```\r\ndr-manhattan:~ michael$ htop asdas\r\nError: unknown flag: asdas\r\n```\r\n\r\n`bc` capitalizes and uses periods.\r\n```\r\ndr-manhattan:~ michael$ bc asdasdasd\r\nFile asdasdasd is unavailable.\r\n```\r\n\r\nI also think that we don't show enough help when someone just types `rethinkdb import`, particularly since this is an easy thing for a ten-minute novice to run into. Here's how Meteor does it with the `meteor deploy` command:\r\n\r\n```\r\ndr-manhattan:~ michael$ meteor deploy\r\nUsage: meteor deploy <site> [--password] [--settings settings.json] [--debug] [--delete]\r\n\r\nDeploys the project in your current directory to Meteor's servers.\r\n\r\nYou can deploy to any available name under 'meteor.com'\r\nwithout any additional configuration, for example,\r\n'myapp.meteor.com'.  If you deploy to a custom domain, such as\r\n'myapp.mydomain.com', then you'll also need to configure your domain's\r\nDNS records.  See the Meteor docs for details.\r\n\r\nThe --settings flag can be used to pass deploy-specific information to\r\nthe application. It will be available at runtime in Meteor.settings, but only\r\non the server. The argument is the name of a file containing the JSON data\r\nto use.  The settings will persist across deployments until you again specify\r\na settings file.  To unset Meteor.settings, pass an empty settings file.\r\n\r\nThe --delete flag permanently removes a deployed application, including\r\nall of its stored data.\r\n\r\nThe --password flag sets an administrative password for the domain.  Once\r\nset, any subsequent 'deploy', 'logs', or 'mongo' command will prompt for\r\nthe password.  You can change the password with a second 'deploy' command.\r\n\r\nOptions:\r\n  --password, -P  set a password for this deployment                   [boolean]\r\n  --delete, -D    permanently delete this deployment                   [boolean]\r\n  --debug         deploy in debug mode (don't minify, etc)             [boolean]\r\n  --settings      set optional data for Meteor.settings on the server\r\n```\r\n\r\nwhereas we just say:\r\n\r\n```\r\ndr-manhattan:~ michael$ rethinkdb import\r\nmust specify one of --directory or --file to import\r\n```\r\n\r\nI haven't picked out specific phrases to change (I can sit down with @Tryneus and go through the messages to improve them if that's helpful), but hopefully this gives a sense of what I'm talking about."
  , issueCommentId = 23461341
  }