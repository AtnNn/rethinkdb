IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-23) 18 : 53 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/95684465"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3895#issuecomment-95684465"
  , issueCommentCreatedAt = 2015 (-04) (-23) 18 : 53 : 05 UTC
  , issueCommentBody =
      "I think we should use an implementation that's non-intrusive to how we run writes and other non-majority reads.\r\n\r\n@timmaxw suggested at some point that we could run a `sync` query after the read from the primary, before we return the result of the read. This will not only make sure that a majority of replicas has processed all writes before the read, but it will also make sure that those writes have been written to disk, even if they were originally soft durability writes.\r\n\r\nI really like that solution. I think the performance of the majority read / repeatable read mode under this wouldn't be much worse than under a more complicated / more intrusive solution either (but I could be missing something)."
  , issueCommentId = 95684465
  }