IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-18) 21 : 05 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 27624
        , simpleUserLogin = N "linuxjuggler"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/27624?v=3"
        , simpleUserUrl = "https://api.github.com/users/linuxjuggler"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/74947715"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3794#issuecomment-74947715"
  , issueCommentCreatedAt = 2015 (-02) (-18) 21 : 05 : 39 UTC
  , issueCommentBody =
      "here is the config file `instance1.conf` and this version was cloned from git and installed manually using `make && make install`\r\n\r\nthus the config file was taken from git repo + the startup script was also taken from git and the only thing I have changed from this config file was the user & the group\r\n\r\n~~~~\r\n#\r\n# RethinkDB instance configuration sample\r\n#\r\n# - Give this file the extension .conf and put it in /etc/rethinkdb/instances.d in order to enable it.\r\n# - See http://www.rethinkdb.com/docs/guides/startup/ for the complete documentation\r\n# - Uncomment an option to change its value.\r\n#\r\n\r\n###############################\r\n## RethinkDB configuration\r\n###############################\r\n\r\n### Process options\r\n\r\n## User and group used to run rethinkdb\r\n## Command line default: do not change user or group\r\n## Init script default: rethinkdb user and group\r\nrunuser=pi\r\nrungroup=pi\r\n\r\n## Stash the pid in this file when the process is running\r\n## Command line default: none\r\n## Init script default: /var/run/rethinkdb/<name>/pid_file (where <name> is the name of this config file without the extension)\r\n# pid-file=/var/run/rethinkdb/rethinkdb.pid\r\n\r\n### File path options\r\n\r\n## Directory to store data and metadata\r\n## Command line default: ./rethinkdb_data\r\n## Init script default: /var/lib/rethinkdb/<name>/ (where <name> is the name of this file without the extension)\r\n# directory=/var/lib/rethinkdb/default\r\n\r\n## Log file options\r\n## Default: <directory>/log_file\r\n# log-file=/var/log/rethinkdb\r\n\r\n### Network options\r\n\r\n## Address of local interfaces to listen on when accepting connections\r\n## May be 'all' or an IP address, loopback addresses are enabled by default\r\n## Default: all local addresses\r\n# bind=127.0.0.1\r\n\r\n## Address that other rethinkdb instances will use to connect to this server.\r\n## It can be specified multiple times\r\n# canonical-address=\r\n\r\n## The port for rethinkdb protocol for client drivers\r\n## Default: 28015 + port-offset\r\n# driver-port=28015\r\n\r\n## The port for receiving connections from other nodes\r\n## Default: 29015 + port-offset\r\n# cluster-port=29015\r\n\r\n## The host:port of a node that rethinkdb will connect to\r\n## This option can be specified multiple times.\r\n## Default: none\r\n# join=example.com:29015\r\n\r\n## All ports used locally will have this value added\r\n## Default: 0\r\n# port-offset=0\r\n\r\n## r.http(...) queries will use the given server as a web proxy\r\n## Default: no proxy\r\n# reql-http-proxy=socks5://example.com:1080\r\n\r\n### Web options\r\n\r\n## Port for the http admin console\r\n## Default: 8080 + port-offset\r\n# http-port=8080\r\n\r\n## Disable web administration console\r\n# no-http-admin\r\n\r\n### CPU options\r\n\r\n## The number of cores to use\r\n## Default: total number of cores of the CPU\r\n# cores=2\r\n\r\n### Memory options\r\n\r\n## Size of the cache in MB\r\n## Default: Half of the available RAM on startup\r\n# cache-size=1024\r\n\r\n### Disk\r\n\r\n## How many simultaneous I/O operations can happen at the same time\r\n# io-threads=64\r\n\r\n## Enable direct I/O\r\n# direct-io\r\n\r\n### Meta\r\n\r\n## The name for this server (as will appear in the metadata).\r\n## If not specified, it will be randomly chosen from a short list of names.\r\n# server-name=server1\r\n~~~~\r\n\r\nand here is the `/etc/init.d/rethinkdb` content, the only thing I have changed is the path to `rtdbbin`\r\n\r\n~~~\r\n#!/bin/sh\r\n# Copyright 2014 RethinkDB.\r\n# Portions from Frank Trampe and Novell used with permission.\r\n\r\n# This file targets Ubuntu and is not in line with the Linux specification. Move runlevel 2 from Default-Start to Default-Stop for compliance.\r\n\r\n### BEGIN INIT INFO\r\n# Provides:          rethinkdb\r\n# Required-Start: $remote_fs\r\n# Required-Stop: $remote_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: This starts a set of rethinkdb server instances.\r\n# Description:       This looks in /etc/rethinkdb/instances.d for rethinkdb config files and launches, stops, or examines each instance describ\r\ned there.\r\n### END INIT INFO\r\n\r\nset -e -u\r\numask 022\r\n\r\nitask=\"${1:-}\"\r\n\r\nrtdbbin=/home/pi/rethinkdb/build/release/rethinkdb ;\r\nrtdbconfigdir=/etc/rethinkdb ;\r\n\r\n# parse a line from the config file\r\nconf_read_line () {\r\n    local _val=\"${1#*=}\"\r\n    local _key=\"${1%%=*}\"\r\n    if [ \"$_val\" = \"$1\" ]; then\r\n        unset -v $2\r\n        unset -v $3\r\n        false\r\n    else\r\n        read -r $2 <<EOF\r\n`echo $_key`\r\nEOF\r\n        read -r $3 <<EOF\r\n${_val# }\r\nEOF\r\n    fi\r\n}\r\n\r\n# conf_read <file> <var>\r\n# read the config file file into the variable var\r\nconf_read () {\r\n    local _dict=\"#\"\r\n    local line sect key val\r\n    while read -r full_line; do\r\n        line=${full_line%%#*}\r\n        if conf_read_line \"$line\" key val; then\r\n            _dict=\"$_dict$key=$val#\"\r\n        elif [ \"`echo -n $line`\" != \"\" ]; then\r\n            # ignore parse errors\r\n            true\r\n        fi\r\n    done < $1 && read -r $2 <<EOF\r\n$_dict\r\nEOF\r\n}\r\n\r\n# get <conf> <key> [var]\r\n# extract the value of key from the parsed config conf\r\n# into the variable var or if var is not passed, into the variable key\r\nget () {\r\n    local _valp=\"${1#*#$2=}\"\r\n    local _val=\"${_valp%%#*}\"\r\n    if [ \"$_valp\" = \"$1\" ]; then\r\n        unset -v ${3:-$2}\r\n        return 1\r\n    else\r\n        read -r ${3:-$2} <<EOF\r\n$_val\r\nEOF\r\n    fi\r\n}\r\n\r\ndefault_ports_available=true\r\n\r\ndefault_driver_port=28015\r\ndefault_cluster_port=29015\r\ndefault_http_port=8080\r\ndefault_port_offset=0\r\n\r\n# is_running <pid>\r\n# test if the process exists\r\nis_running () {\r\n    ps -p \"$1\" > /dev/null\r\n}\r\n\r\nusage_fail () {\r\n    echo \"Usage: /etc/init.d/rethinkdb [start|stop|restart|force-restart|status]\"\r\n    exit 1\r\n}\r\n\r\ncase \"$itask\" in\r\n    start|stop|restart|force-restart|status)\r\n        true\r\n        ;;\r\n    \"\")\r\n        usage_fail\r\n        ;;\r\n    *)\r\n        echo \"$0: error: unknown action $1\"\r\n        usage_fail\r\n        ;;\r\nesac\r\n\r\n# We check for active configurations .\r\nif ! ls \"$rtdbconfigdir\"/instances.d/*.conf >/dev/null 2>/dev/null ; then\r\n    echo \"rethinkdb: No instances defined in $rtdbconfigdir/instances.d/\"\r\n    echo \"rethinkdb: See http://www.rethinkdb.com/docs/guides/startup/ for more information\" ;\r\n    exit\r\nfi\r\n\r\nfor rtdbconffile in \"$rtdbconfigdir\"/instances.d/*.conf ;\r\ndo\r\n    if ! conf_read \"$rtdbconffile\" conf; then\r\n        continue\r\n    fi\r\n\r\n    instance_name=`basename \"$rtdbconffile\" .conf`\r\n\r\n    # $@ will contain the options we pass to rethinkdb\r\n    set --\r\n    set -- --config-file \"$rtdbconffile\"\r\n\r\n    if ! get \"$conf\" runuser; then\r\n        runuser=rethinkdb\r\n        set -- \"$@\" --runuser \"$runuser\"\r\n    fi\r\n    if ! get \"$conf\" rungroup; then\r\n        rungroup=rethinkdb\r\n        set -- \"$@\" --rungroup \"$rungroup\"\r\n    fi\r\n\r\n    # If no pid file is specified, assign one and make sure the parent folder has the correct permissions\r\n    if ! get \"$conf\" pid-file rtdbpidfile; then\r\n        rtdbpidfile=\"/var/run/rethinkdb/$instance_name/pid_file\"\r\n    fi\r\n    if [ -d /var/run -a \"${rtdbpidfile#/var/run/}\" != \"$rtdbpidfile\" ]; then\r\n        parent_directory=\"`dirname \"$rtdbpidfile\"`\"\r\n        if [ ! -e \"$parent_directory\" ]; then\r\n            if mkdir -p \"$parent_directory\"; then\r\n                test -n \"${runuser:-}\"  && chown -- \"$runuser\"  \"$parent_directory\"\r\n                test -n \"${rungroup:-}\" && chgrp -- \"$rungroup\" \"$parent_directory\"\r\n            fi\r\n        fi\r\n\r\n        set -- \"$@\" --pid-file \"$rtdbpidfile\"\r\n    fi\r\n\r\n    # If no data directory is specified, assign one and make sure it has the correct permissions\r\n    if ! get \"$conf\" directory rtdb_directory; then\r\n        rtdb_directory=\"/var/lib/rethinkdb/$instance_name/data\"\r\n        parent_directory=\"/var/lib/rethinkdb/$instance_name\"\r\n        if [ ! -e \"$parent_directory\" ]; then\r\n            if mkdir -p \"$parent_directory\"; then\r\n                test -n \"${runuser:-}\"  && chown -- \"$runuser\"  \"$parent_directory\"\r\n                test -n \"${rungroup:-}\" && chgrp -- \"$rungroup\" \"$parent_directory\"\r\n            fi\r\n        fi\r\n        set -- \"$@\" --directory \"$rtdb_directory\"\r\n    fi\r\n\r\n    # Only one of the instances can use the default ports\r\n    get \"$conf\" driver-port driver_port || :\r\n    get \"$conf\" cluster-port cluster_port || :\r\n    get \"$conf\" http-port http_port || :\r\n    get \"$conf\" port-offset port_offset || :\r\n    port_offset=${port_offset:-0}\r\n    if [ \"${driver_port:-$((default_driver_port+port_offset))}\" = \"$default_driver_port\" -o \\\r\n         \"${cluster_port:-$((default_cluster_port+port_offset))}\" = \"$default_cluster_port\" -o \\\r\n         \"${http-port:-$((default_http_port+port_offset))}\" = \"$default_http_port\" ]; then\r\n        if $default_ports_available; then\r\n            default_ports_available=false\r\n        else\r\n            echo \"rethinkdb: $instance_name: error: the default ports are already used by another instance\"\r\n            echo \"rethinkdb: $instance_name: error: please use non-default values for driver-port, cluster-port and http-port in $rtdbconffile\"\r\n            continue\r\n        fi\r\n    fi\r\n\r\n    if [ \"$itask\" = \"stop\" -o \"$itask\" = \"restart\" -o \"$itask\" = \"force-restart\" ] ; then\r\n        # stop rethinkdb\r\n\r\n        if [ ! -e \"$rtdbpidfile\" ] ; then\r\n            echo \"rethinkdb: $instance_name: The instance is not running (there is no pid file)\"\r\n        elif is_running \"`cat \"$rtdbpidfile\"`\" ; then\r\n            echo -n \"rethinkdb: $instance_name: Waiting for instance to stop (pid `cat \"$rtdbpidfile\"`) ...\"\r\n            instance_pid=`cat \"$rtdbpidfile\"`\r\n            kill -INT \"$instance_pid\"\r\n            while is_running \"$instance_pid\"; do\r\n                echo -n \".\"\r\n                sleep 1\r\n            done\r\n            echo \" Stopped.\"\r\n        else\r\n            rm -f \"$rtdbpidfile\"\r\n        fi\r\n    fi\r\n\r\n    if [ \"$itask\" = \"start\" -o \"$itask\" = \"restart\" -o \"$itask\" = \"force-restart\" ] ; then\r\n        # start rethinkdb\r\n\r\n        if ! get \"$conf\" bind x; then\r\n            echo \"rethinkdb: $instance_name: will only listen on local network interfaces.\"\r\n            echo \"rethinkdb: $instance_name: To expose rethinkdb on the network, add the 'bind=all' option to $rtdbconffile\"\r\n        fi\r\n\r\n        if [ -e \"$rtdbpidfile\" ] && is_running \"$(cat \"$rtdbpidfile\")\"; then\r\n            echo \"rethinkdb: $instance_name: The instance has already started\"\r\n        else\r\n            if [ -e \"$rtdbpidfile\" ] ; then\r\n                rm \"$rtdbpidfile\"\r\n            fi\r\n            if ! get \"$conf\" log-file rtdblogfile; then\r\n                rtdblogfile=$rtdb_directory/log_file\r\n            fi\r\n            echo \"rethinkdb: $instance_name: Starting instance. (logging to \\`$rtdblogfile')\"\r\n            \"$rtdbbin\" --daemon \"$@\"\r\n        fi\r\n    fi\r\n\r\n    if [ \"$itask\" = \"status\" ] ; then\r\n        # show the rethinkdb status\r\n\r\n        if [ -e \"$rtdbpidfile\" ] ; then\r\n            if ! is_running \"$(cat \"$rtdbpidfile\")\"; then\r\n                echo \"rethinkdb: $instance_name: stop/crashed\"\r\n            else\r\n                echo \"rethinkdb: $instance_name: start/running, pid `cat \"$rtdbpidfile\"`\"\r\n            fi\r\n        else\r\n            echo \"rethinkdb: $instance_name: stop/waiting\"\r\n        fi\r\n    fi\r\ndone\r\n~~~"
  , issueCommentId = 74947715
  }