Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-10) (-17) 15 : 39 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6122/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/6122"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 6122
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 5514175
        , simpleUserLogin = N "mattkrick"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/5514175?v=3"
        , simpleUserUrl = "https://api.github.com/users/mattkrick"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "guarantee changefeed add/remove order"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6122"
  , issueCreatedAt = 2016 (-09) (-26) 14 : 44 : 38 UTC
  , issueBody =
      Just
        "Let's say I subscribe to 2 channels via changefeeds: `food/fruit` and `food/veggies`.\r\nthe former gives me no documents, but the later gives me one: `{id: 'tomato', type: 'veggie'}`.\r\nNow I realize that a tomato is actually a fruit, so I change it: `{id: 'tomato', type: 'fruit'}`.\r\nA rookie might think this would just be an update, but it actually triggers an `add` to the `food/fruit` channel and a `remove` to the `food/veggies` channel. This makes sense, but sometimes the `add` comes first, sometimes the `remove` does.\r\n\r\nWhile there might be a more eloquent way of handling this, such as sending an \"action 1 of 2\" flag, I think it'd be nice to give a guarantee that the `remove` comes before the `add`. That way, if internet is sketchy, we don't accidentally render the same thing twice on the screen."
  , issueState = "open"
  , issueId = Id 179248848
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }