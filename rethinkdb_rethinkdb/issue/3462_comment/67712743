IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-19) 23 : 34 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/67712743"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3462#issuecomment-67712743"
  , issueCommentCreatedAt = 2014 (-12) (-19) 23 : 34 : 02 UTC
  , issueCommentBody =
      "This would be hard to do without using a lot of memory.  The only way I can think of is to store some information in the btree when we update a row, and then not update when we see it for the second time in the index.  We could maybe use the existing timestamps for this.  (An alternative would be to do what Daniel said and keep the primary keys around, but to keep them around in a disk-backed queue so that we don't use up all the memory on the machine if you try to do it on a whole table.)"
  , issueCommentId = 67712743
  }