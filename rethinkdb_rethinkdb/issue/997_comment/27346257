IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-29) 21 : 42 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 84792
        , simpleUserLogin = N "defunctzombie"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/84792?v=3"
        , simpleUserUrl = "https://api.github.com/users/defunctzombie"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27346257"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-27346257"
  , issueCommentCreatedAt = 2013 (-10) (-29) 21 : 42 : 20 UTC
  , issueCommentBody =
      "Instead of trying to support all the complex cases of triggers, I think a simple changes feed would be more ideal. Those familiar with mongodb, this would be similar to listening to the oplog and just filtering out what you are interested in. Yes, the type of queries you can listen to are limited (join, etc would be out I think), but you do get nice notifications when things change in the db. One nice aspect of such a system is having web UI interfaces across disparate browser sessions update (i.e. someone adds a new comment and it can show up on everyone's screen).\r\n\r\nIt might be possible to retask the replication or hot backup layer to do this. I don't know what data format that thing spits out or how but I would imagine that all the db updates are present in it to allow for replication or realtime backup."
  , issueCommentId = 27346257
  }