IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-01) 21 : 14 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39259995"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-39259995"
  , issueCommentCreatedAt = 2014 (-04) (-01) 21 : 14 : 56 UTC
  , issueCommentBody =
      "Could we call it a noun like `changes` instead of `onChange`?  `onChange` looks like it should take a callback, but `changes` looks like it should take nothing:\r\n```ruby\r\nr.table('test').changes().run().each {|change|\r\n  ...\r\n}\r\n```\r\n\r\nAdding `since` would make life harder because we'd have to know when to keep changes around in case a client wants them later and when it's safe to discard them.  (We could also get into a situation where we're storing changes even when no clients are listening, which would waste memory and slow down normal operations.)  What if we just did the simplest thing first and implemented `changes` without `since`?  We could always add an optarg later."
  , issueCommentId = 39259995
  }