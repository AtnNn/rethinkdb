IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-01) 01 : 29 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 265071
        , simpleUserLogin = N "kofalt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/265071?v=3"
        , simpleUserUrl = "https://api.github.com/users/kofalt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21908519"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-21908519"
  , issueCommentCreatedAt = 2013 (-08) (-01) 01 : 29 : 14 UTC
  , issueCommentBody =
      "Without chiming in on the runtime bundling stuff - another way to think about triggers could be exposing events to external software and letting them handle it. The initial comment implies a model where RethinkDB fires an event off to RabbitMQ - it could be the other way around.\r\n\r\nThis is simpler in some ways and more complex in others. How about something like [couchDB's change feed](http://guide.couchdb.org/draft/notifications.html#continuous)? If I write an application using the python driver, for example, I'm probably going to run some python in response to a triggered event. Why not let that same software listen for changes?\r\n\r\nRather open-ended so I'll stop here. I'm excited to see this feature implemented in some form or another, and I hope several different approaches are considered to arrive at a robust solution."
  , issueCommentId = 21908519
  }