IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-07) 22 : 29 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39791796"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-39791796"
  , issueCommentCreatedAt = 2014 (-04) (-07) 22 : 29 : 34 UTC
  , issueCommentBody =
      "> (Just for context, I think write throttling and maybe disk-backed buffers would both be great, but @coffeemug asked me to do the simplest possible implementation of this that will actually be useful, and I think I agree with him that that's what we should do first.)\r\n\r\nI don't think you have a good idea of what's \"useful\".  Writing a naive worthless change feed implementation that breaks under a load of having more than one client writing to the system, or having a change feed implementation that breaks whenever the feed is read from a different datacenter, is not a useful change feed system, it's the kind of system that makes people think RethinkDB is a toy database."
  , issueCommentId = 39791796
  }