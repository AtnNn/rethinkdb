IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-07) 23 : 01 : 36 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39794342"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-39794342"
  , issueCommentCreatedAt = 2014 (-04) (-07) 23 : 01 : 36 UTC
  , issueCommentBody =
      "> We wait until the ack count is reached.\r\n\r\nGot it.  So what happens if write acks are one, one replica writes it to disk, then the whole cluster goes down and comes back up?  Does that one replica know to send the row to all the other replicas when it comes up?\r\n\r\nAlso, why do up-to-date reads have to go to one machine rather than going to any replica if all the replicas are equal?  (Or do I misunderstand the purpose of out-of-date reads?)"
  , issueCommentId = 39794342
  }