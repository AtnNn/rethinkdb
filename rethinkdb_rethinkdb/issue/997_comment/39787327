IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-07) 21 : 40 : 37 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39787327"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-39787327"
  , issueCommentCreatedAt = 2014 (-04) (-07) 21 : 40 : 37 UTC
  , issueCommentBody =
      "@srh --\r\n* `r.table('test').changes()` return a change feed.  This is a type `FEED` on the server which behaves like `SELECTION` (i.e. it is sent back to users the same way a stream is, but there's a different set of functions defined on it).  The only legal operations on a feed are ungrouped transformations and `limit`.  If you call `limit`, you get back a normal stream (since it's finite).\r\n  - The change feed is a sequence of objects of the form `{old_val:..., new_val:...}` that ends when the table is dropped.\r\n  - Change feeds are buffered on the server on a per-server per-table basis.  If a client subscribed to a change feed falls more than ARRAY_LIMIT elements behind, it gets kicked off with an error.  This is the simplest implementation that I think is actually sane and useful.\r\n* The drivers treat changefeeds like normal cursors."
  , issueCommentId = 39787327
  }