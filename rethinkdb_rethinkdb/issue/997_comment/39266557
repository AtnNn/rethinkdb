IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-01) 22 : 09 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39266557"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/997#issuecomment-39266557"
  , issueCommentCreatedAt = 2014 (-04) (-01) 22 : 09 : 11 UTC
  , issueCommentBody =
      "> Adding since would make life harder because we'd have to know when to keep changes around in case a client wants them later and when it's safe to discard them.\r\n\r\nMaybe.  Or maybe we would only have to keep around deletion entries in the b-tree (i.e. for not supplying a log of changes, but rather, collapsed changes).  This is a serious problem with issue #2134 that should be mentioned there -- we do want to drop deletion entries at some point.\r\n\r\nEither way, if we don't want to store information forever, we would have to have (registered) named feeds and have the client explicitly tell the server it can discard information from before a given cut-off (as far as that feed's concerned) [1].  Or, if we only supported collapsed changes, expose the actual backfilling API (in all its glory) where we send entire ranges... Yuck no.\r\n\r\n[1] Whether the client tells the server implicitly in the driver or explicitly might depend on the driver and its language features -- it would be bad to have the logic be that once a client reads the change off a feed, it's okay to discard that change's information on the server -- the user of the value might need to confirm that it has processed the value persistently (or not, depending on their preferences)."
  , issueCommentId = 39266557
  }