IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-11) 22 : 17 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/195574227"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5490#issuecomment-195574227"
  , issueCommentCreatedAt = 2016 (-03) (-11) 22 : 17 : 35 UTC
  , issueCommentBody =
      "I am in favor of Option 2 for a few reasons:\r\n1. In addition to synchronizing/setting the admin password it also forms a solid basis for cluster-id\r\n2. That cluster-id pre-share would keep clusters seperated, so (at least for password-set clusters) we would not have the current worries of accidentally merging clusters.\r\n3. Changing the password becomes a much more deliberate process.\r\n\r\nThere are also other possibilities that seem a more natural extension of it (and less like a reversal to me):\r\n- intercluster TLS could be based on the password/salt making administration of that much easier\r\n- flipping that last one: you could use the a CA to generate certs with the passwords embedded and use those for shared secret, making the protected part much easier to manage"
  , issueCommentId = 195574227
  }