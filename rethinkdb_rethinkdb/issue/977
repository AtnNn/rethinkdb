Issue
  { issueClosedAt = Just 2013 (-08) (-08) 23 : 30 : 00 UTC
  , issueUpdatedAt = 2013 (-10) (-04) 16 : 47 : 24 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/977/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/977"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "007575"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:API_settled"
          , labelName = "tp:API_settled"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 977
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Proposal: Dates"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/977"
  , issueCreatedAt = 2013 (-06) (-10) 22 : 05 : 05 UTC
  , issueBody =
      Just
        "I propose that we introduce three new pseudo-types: dates (by which I mean date, time, and optional timezone), durations, and intervals, all cribbed from ISO 8601 (http://en.wikipedia.org/wiki/ISO_8601), which we represent as strings.\n\nWe introduce the following terms:\n\n``` ruby\ndate.date_sub(other_date) => duration\ndate.dur_sub(duration) => other_date\ndate.dur_add(duration) => other_date\nduration.dur_sub(other_duration) => third_duration\nduration.dur_add(other_duration) => third_duration\n\ndate.date_{lt/gt/le/ge/eq/ne}(other_date) => bool\nduration.dur_{lt/gt/le/ge/eq/ne}(other_date) => bool\n\n# intervals can also be specified directly as strings\nr.interval(date, other_date) => interval\nr.interval(date, duration) => interval\ndate.during(interval) => bool\n```\n\nWe should also update the drivers to automatically render native dates/durations/intervals as the appropriate strings.\n\nSo, for example, in Ruby you could get all rows inserted in the last day with:\n\n``` ruby\ntable.between(Date.today, Date.today - 1, :index => :timestamp)\n```\n\nOr, if Ruby didn't have easy date manipulation:\n\n``` ruby\ntable.between(Time.now, r(Time.now).dur_sub(\"P1M\"), :index => :timestamp)\n```\n"
  , issueState = "closed"
  , issueId = Id 15371319
  , issueComments = 164
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-08) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 40
          , milestoneClosedIssues = 96
          , milestoneDescription = Just ""
          , milestoneTitle = "1.8"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/40"
          , milestoneCreatedAt = 2013 (-06) (-29) 01 : 55 : 11 UTC
          , milestoneState = "closed"
          }
  }