IssueComment
  { issueCommentUpdatedAt = 2016 (-06) (-24) 18 : 22 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/228421930"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2598#issuecomment-228421930"
  , issueCommentCreatedAt = 2016 (-06) (-24) 18 : 22 : 47 UTC
  , issueCommentBody =
      "After working with this system quite a bit in #5147, I think we are close to being ready for testing on this on `next`. Before recent changes there was no way of testing the `dump` or `restore` parts of the driver, since they would import the `_export` and `_import` scripts from the `rethindb` Python driver installed on the system. This has been fixed, but we are still going to have the same problems testing `rethinkdb dump` and `rethinkdb-dump`, I am not sure how to get around that.\r\n\r\nBut in doing the aforementioned work I did feel the lack of a good body of data to testing import/export. In an attempt to start development on that here is a working list of what I think should be represented in that :\r\n- all the types of data we represent: numbers, strings, dates, dicts, lists, geo points, binary\r\n- some attention to unicode characters to make sure they survive the round-trip\r\n- indexes\r\n- outdated indexes (for `index_rebuild`)\r\n- a large file\r\n- export/import round-tripping for json, njson, and csv\r\n- `--fileds` option\r\n- `--custom-header` option\r\n- bad json (e.g. bad endings) and extra whitespace\r\n"
  , issueCommentId = 228421930
  }