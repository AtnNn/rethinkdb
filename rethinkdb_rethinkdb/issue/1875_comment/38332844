IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-21) 22 : 57 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/38332844"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1875#issuecomment-38332844"
  , issueCommentCreatedAt = 2014 (-03) (-21) 22 : 57 : 07 UTC
  , issueCommentBody =
      "@mlucy: Both behaviors have advantages and disadvantages. The thing is that if we don't throttle early, benchmarks like this one will not measure the performance that can actually be sustained over longer times. On the other hand there can be actual real-world scenarios where allowing for a higher rate of writes over short periods is desired. We've also had latency issues resulting from too large unwritten data sets in the past, because some operations that had to be atomic became slow.\r\nI personally don't have a very strong preference for one or the other behavior.\r\n@coffeemug Any insights from talking to clients about this?"
  , issueCommentId = 38332844
  }