IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-27) 01 : 11 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135229083"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4715#issuecomment-135229083"
  , issueCommentCreatedAt = 2015 (-08) (-27) 01 : 11 : 19 UTC
  , issueCommentBody =
      "I would definitely expect 0-argument `merge` to work.  I could easily imagine a query like `r.table('original_documents').get(whatever).merge(r.args(r.table('patches').get(whatever)['patches']))`.\r\n\r\n`contains` is more borderline, but in general I expect arbitrary-arity functions to have well-defined 0-arity cases (and languages like the various lisps that have lots of arbitrary-arity predicates almost always define the 0-arity case).  The case here is something like `array_of_words.contains(r.args(array_of_banned_words))` or something -- you want that to work for an empty array of banned words."
  , issueCommentId = 135229083
  }