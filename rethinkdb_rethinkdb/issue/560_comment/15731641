IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-01) 19 : 15 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 91193
        , simpleUserLogin = N "mglukhovsky"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/91193?v=3"
        , simpleUserUrl = "https://api.github.com/users/mglukhovsky"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15731641"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/560#issuecomment-15731641"
  , issueCommentCreatedAt = 2013 (-04) (-01) 19 : 15 : 40 UTC
  , issueCommentBody =
      ":+1: for `has_key` or `has_attr`. JSON spec actually calls the attribute a\r\n\"name\", so there isn't really a standard term.\r\n\r\nAs far as confusing `has_key` with the primary key, we do call it a\r\n__primary__ key, so it implies there are keys that are not primary (e.g.\r\nthose for the other attributes of a document). However, I agree that it\r\ncould get confusing quickly.\r\n\r\nI would note that Backbone uses `has`, but since our documents are\r\nsignificantly more complicated than theirs (embedding, etc.) I would prefer\r\nwe specify what we're checking for.\r\n\r\n\r\nOn Mon, Apr 1, 2013 at 12:08 PM, Michel <notifications@github.com> wrote:\r\n\r\n> I would prefer has_key because .contains() can be used on an object\r\n>\r\n> r.table(\"foo\").map( r.row(\"contact\").has_key(\"phone\") )\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/560#issuecomment-15731297>\r\n> .\r\n>"
  , issueCommentId = 15731641
  }