IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-29) 22 : 09 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11758347"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/183#issuecomment-11758347"
  , issueCommentCreatedAt = 2012 (-12) (-29) 22 : 09 : 50 UTC
  , issueCommentBody =
      "Throwing an error on the client was how I imagined representing bottom. Actually this is sort of what we're doing right now the only thing we don't have is a way to recover from bottom.\r\n\r\nBottom really is the functional equivalent of an exception. I don't think we want to have true exceptions here's why: We have some imperative parts of our language where bottom won't work like exceptions. For example bulk inserts. Here if one the items to be inserted returns bottom it won't behave like an exception (or at least how one might reasonable expect an exception to behave) in that it won't prevent the later insertions from happening. Making it so it did would be a pain and cost us some performance. Basically I think that exceptions are a little bit too heavyweight of a feature to fit in to our language right now, and perhaps ever. Particularly because they're going to make us sacrifice performance in some places."
  , issueCommentId = 11758347
  }