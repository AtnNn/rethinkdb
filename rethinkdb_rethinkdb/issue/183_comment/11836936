IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-03) 07 : 54 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11836936"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/183#issuecomment-11836936"
  , issueCommentCreatedAt = 2013 (-01) (-03) 07 : 54 : 57 UTC
  , issueCommentBody =
      "Ok, agreed that consistency in default behavior outweighs the confusion associated with different behaviors in different cases. Also agreed that dealing with passing nested bottom to the client is an unnecessary complication.\r\n\r\nHowever, I think that doubling the number of functions will unnecessarily complicate the API. I'd much rather put the database into a \"strictness state\" by passing a flag on the connection, and on `.run()` function. It will be a little less granular, but I think there is no evidence that such granularity is required. If/when we find out we need such granularity, I think we'll need a more general purpose way of expressing it (for example, by passing optional `run=...` arguments to each command that override the arguments passed to `run`), but I don't think we need to deal with that case for now.\r\n\r\nAlso, I agree with @kareemk, I think the default behavior should be to skip over bottom. What we have now is pulling the product in two different directions (i.e. a flexible schema that one can't comfortably take advantage of because of a rather inflexible default error handling policy). If the user actually wants this behavior in production, they can get it by creating connections this way (and they'll be able to get further safety once we get to implementing constraints).\r\n\r\n"
  , issueCommentId = 11836936
  }