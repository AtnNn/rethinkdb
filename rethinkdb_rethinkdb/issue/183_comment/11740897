IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-28) 20 : 33 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11740897"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/183#issuecomment-11740897"
  , issueCommentCreatedAt = 2012 (-12) (-28) 20 : 33 : 34 UTC
  , issueCommentBody =
      "I think in lieu of representing bottom on the client, we should just throw an error if we would otherwise have to return bottom to the client (with bottom's error message, of course).  So if somebody wrote:\r\n```ruby\r\ntbl.filter{|row| row[:missing_attr]}\r\n```\r\nthey wouldn't get an error because filter would handle bottom.  But if somebody wrote:\r\n```ruby\r\ntbl.map{|row| row[:missing_attr]}\r\n```\r\nthen they would get an error, because the map would return bottom and we can't send bottom to the user.  But if they wrote:\r\n```ruby\r\ntbl.filter{|row| row[:list].map{|row2| row2[:missing_attr]}}\r\n```\r\nthen they wouldn't get an error, because the map would return bottom and then the filter would handle it.\r\n\r\n---\r\n\r\nAs an aside, since we want bottom to short-circuit evaluation for efficiency reasons, this really seems more like throwing and catching an exception in my head.  Also, we should probably call it the error type or something instead of bottom, since we're only using it for errors and it's a clearer name for people who don't know Haskell.  (Also, maybe it would make sense to change `r.error` to return this error type?)"
  , issueCommentId = 11740897
  }