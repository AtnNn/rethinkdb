IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-09) 17 : 51 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16128768"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/602#issuecomment-16128768"
  , issueCommentCreatedAt = 2013 (-04) (-09) 17 : 51 : 29 UTC
  , issueCommentBody =
      "The current syntax for `eq_join` is `table.eq_join(field_name, other_table)`.  I think we should maybe extend it to `table1.eq_join(field_name_or_index_for_table1, index_for_table2, table2)` (which is similar to the `eq_join` signature in the old protobuf when we hardcoded `id`).\r\n\r\nAs an aside, I really don't like putting the index on the end of all of these.  It looks ugly and different from everything else:\r\n```ruby\r\nr.table('people').get_all('John')\r\nr.table('people').get_all('John', :name)\r\n```\r\n\r\nImagine if we handled the problem of an optional database that way:\r\n```ruby\r\nr.table('people')\r\nr.table('people', 'test') # instead of r.db('test').table('people')\r\n```\r\n\r\nI think both of these look better:\r\n```ruby\r\nr.table('people').index(:name).get_all('John')\r\nr.table('people').get_all(:name, 'John') # although this one might be confusing\r\n```"
  , issueCommentId = 16128768
  }