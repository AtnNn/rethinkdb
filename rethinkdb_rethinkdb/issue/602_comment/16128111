IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-09) 17 : 40 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16128111"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/602#issuecomment-16128111"
  , issueCommentCreatedAt = 2013 (-04) (-09) 17 : 40 : 32 UTC
  , issueCommentBody =
      "OK. So to summarize on what I think we've agreed on thus far.\r\n\r\n```python\r\ntable.index_create(name, function) => {'created':1, ...}\r\ntable.index_drop(name) => {'dropped': 1, ...}\r\ntable.index_list() => [...]\r\n\r\ntable.get(key) => SingleSelection # unchanged, works only for primary index\r\ntable.get_all(key[, index]) => StreamSelection\r\ntable.between(lower, upper[, index]) => StreamSelection\r\ntable.eq_join(other, key[, index]) => Stream\r\n\r\n# This has never used an index and I assume we're still punting for now.\r\n# Someday we'll have to figure out how this should look.\r\ntable.order_by(attr[, attrs...]) => Stream\r\n```\r\n\r\nSo what are the remaining open questions?\r\n\r\n1. Should ordinary `get` also work on secondary indices?\r\n  * error on multiple matches\r\n  * return row with least primary key\r\n  * return arbitrary row from result set\r\n  * return random row from result set\r\n\r\n\r\n2. Should the index parameter be the last argument or should it be an optional argument?\r\n\r\nAnd I think that's it. Did I miss anything?"
  , issueCommentId = 16128111
  }