IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-20) 17 : 33 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15190937"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/506#issuecomment-15190937"
  , issueCommentCreatedAt = 2013 (-03) (-20) 17 : 33 : 13 UTC
  , issueCommentBody =
      "This is seems to be due to inefficiency in the scope stack. Here's an output of cpu usage while the slow query is run\r\n```\r\n137.00 33.5% std::_Rb_tree_increment(std::_Rb_tree_node_base*)                                                                                                                    libstdc++.so.6.0.16 \r\n541.00 10.8% std::_Deque_iterator<ql::datum_t const**, ql::datum_t const**&, ql::datum_t const***>::difference_type std::operator-<ql::datum_t const**, ql::datum_t const**&, ql: rethinkdb           \r\n156.00  6.2% std::__deque_buf_size(unsigned long)                                                                                                                                 rethinkdb           \r\n081.00  4.1% std::_Rb_tree_iterator<std::pair<long const, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > > > >::operator++ rethinkdb           \r\n027.00  4.0% ql::env_t::dump_scope(std::map<long, ql::datum_t const**, std::less<long>, std::allocator<std::pair<long const, ql::datum_t const**> > >*)                           rethinkdb           \r\n318.00  2.6% std::_Rb_tree<long, std::pair<long const, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > > >, std::_Select1st rethinkdb           \r\n273.00  2.5% std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> >::size() const                                                                                  rethinkdb           \r\n126.00  2.2% intel_idle                                                                                                                                                           [kernel.kallsyms]   \r\n071.00  2.1% PyEval_EvalFrameEx                                                                                                                                                   /usr/bin/python2.7  \r\n991.00  1.9% std::map<long, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > >, std::less<long>, std::allocator<std::pair<lo rethinkdb           \r\n968.00  1.9% std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > >::size() const                                                rethinkdb           \r\n942.00  1.8% std::_Rb_tree_iterator<std::pair<long const, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > > > >::operator!= rethinkdb           \r\n941.00  1.8% std::_Rb_tree_iterator<std::pair<long const, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > > > >::operator-> rethinkdb           \r\n749.00  1.5% std::_Rb_tree_iterator<std::pair<long const, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > > > >::_Rb_tree_i rethinkdb           \r\n651.00  1.3% std::pair<long const, std::stack<ql::datum_t const**, std::deque<ql::datum_t const**, std::allocator<ql::datum_t const**> > > >* std::__addressof<std::pair<long con rethinkdb           \r\n424.00  0.8% std::_Deque_iterator<ql::datum_t const**, ql::datum_t const**&, ql::datum_t const***>::_S_buffer_size()                                                              rethinkdb           \r\n383.00  0.7% PyString_FromFormatV                                                                                                                                                 /usr/bin/python2.7  \r\n342.00  0.7% __ticket_spin_lock                                                                                                                                                   [kernel.kallsyms]   \r\n276.00  0.5% PyObject_Malloc                                                                                                                                                      /usr/bin/python2.7  \r\n275.00  0.5% find_busiest_group                                  \r\n```\r\n\r\nI think the first line comes from iterating the vars and the second line has to do with iterating the implicit vars."
  , issueCommentId = 15190937
  }