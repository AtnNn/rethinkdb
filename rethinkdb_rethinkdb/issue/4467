Issue
  { issueClosedAt = Just 2015 (-06) (-30) 02 : 13 : 59 UTC
  , issueUpdatedAt = 2015 (-06) (-30) 02 : 13 : 59 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4467/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4467"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4467
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "\"Assertion failed: [found]\" on next"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4467"
  , issueCreatedAt = 2015 (-06) (-27) 01 : 06 : 27 UTC
  , issueBody =
      Just
        "On f98fe605ccc0edc5453bfd6b434a47460a742429 with the `shard_balancing.py` test:\n\n```\nerror: Error in ../src/btree/leaf_node.cc at line 1493:\nerror: Assertion failed: [found] \nerror: Backtrace:\nerror: Fri Jun 26 18:03:53 2015\n\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:100\n       2: backtrace_t::backtrace_t() at backtrace.cc:203\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\n       4: format_backtrace(bool) at backtrace.cc:198\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\n       6: leaf::erase_presence(value_sizer_t*, leaf_node_t*, btree_key_t const*, key_modification_proof_t) at leaf_node.cc:1493\n       7: apply_keyvalue_change(value_sizer_t*, keyvalue_location_t*, btree_key_t const*, repli_timestamp_t, value_deleter_t const*, key_modification_callback_t*, delete_mode_t) at operations.cc:631\n       8: metadata_file_t::write_txn_t::write_bin(store_key_t const&, write_message_t const*, signal_t*) at file.cc:281\n       9: void metadata_file_t::write_txn_t::erase<table_inactive_persistent_state_t>(metadata_file_t::key_t<table_inactive_persistent_state_t> const&, signal_t*) at file.hpp:135\n       10: real_table_persistence_interface_t::write_metadata_active(uuid_u const&, table_active_persistent_state_t const&, raft_persistent_state_t<table_raft_state_t> const&, signal_t*, raft_storage_interface_t<table_raft_state_t>**) at table_interface.cc:222\n       11: multi_table_manager_t::on_action(signal_t*, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&) at multi_table_manager.cc:355\n       12: std::_Mem_fn<void (multi_table_manager_t::*)(signal_t*, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&)>::operator()(multi_table_manager_t*, signal_t*, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&) const at functional:551\n       13: void std::_Bind<std::_Mem_fn<void (multi_table_manager_t::*)(signal_t*, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&)> (multi_table_manager_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>)>::__call<void, signal_t*&&, uuid_u&&, multi_table_manager_bcard_t::timestamp_t&&, multi_table_manager_bcard_t::status_t&&, boost::optional<table_basic_config_t>&&, boost::optional<raft_member_id_t>&&, boost::optional<raft_persistent_state_t<table_raft_state_t> >&&, mailbox_addr_t<void ()>&&, 0, 1, 2, 3, 4, 5, 6, 7, 8>(std::tuple<signal_t*&&, uuid_u&&, multi_table_manager_bcard_t::timestamp_t&&, multi_table_manager_bcard_t::status_t&&, boost::optional<table_basic_config_t>&&, boost::optional<raft_member_id_t>&&, boost::optional<raft_persistent_state_t<table_raft_state_t> >&&, mailbox_addr_t<void ()>&&>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6, 7, 8>) at functional:1146\n       14: void std::_Bind<std::_Mem_fn<void (multi_table_manager_t::*)(signal_t*, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&)> (multi_table_manager_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>)>::operator()<signal_t*, uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>, void>(signal_t*&&, uuid_u&&, multi_table_manager_bcard_t::timestamp_t&&, multi_table_manager_bcard_t::status_t&&, boost::optional<table_basic_config_t>&&, boost::optional<raft_member_id_t>&&, boost::optional<raft_persistent_state_t<table_raft_state_t> >&&, mailbox_addr_t<void ()>&&) at functional:1204\n       15: std::_Function_handler<void (signal_t*, uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>), std::_Bind<std::_Mem_fn<void (multi_table_manager_t::*)(signal_t*, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&)> (multi_table_manager_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>, std::_Placeholder<8>)> >::_M_invoke(std::_Any_data const&, signal_t*, uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>) at functional:1780\n       16: std::function<void (signal_t*, uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>)>::operator()(signal_t*, uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>) const at functional:2161\n       17: mailbox_t<void (uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>)>::read_impl_t::read(read_stream_t*, signal_t*) at typed.hpp:705\n       18: mailbox_manager_t::mailbox_read_coroutine(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, threadnum_t, unsigned long, std::vector<char, std::allocator<char> >*, long, mailbox_manager_t::force_yield_t) at mailbox.cc:277\n       19: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x14de348] at 0x14de348 ()\n       20: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x14de22c] at 0x14de22c ()\n       21: callable_action_wrapper_t::run() at runtime_utils.cc:43\n       22: coro_t::run() at coroutines.cc:205\n       23: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x14dd55d] at 0x14dd55d ()\n       24: mailbox_manager_t::on_local_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, std::vector<char, std::allocator<char> >&&) at mailbox.cc:212\n       25: connectivity_cluster_t::send_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, unsigned char, cluster_send_message_write_callback_t*) at cluster.cc:1277\n       26: send(mailbox_manager_t*, raw_mailbox_t::address_t, mailbox_write_callback_t*) at mailbox.cc:129\n       27: void send<uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()> >(mailbox_manager_t*, mailbox_t<void (uuid_u, multi_table_manager_bcard_t::timestamp_t, multi_table_manager_bcard_t::status_t, boost::optional<table_basic_config_t>, boost::optional<raft_member_id_t>, boost::optional<raft_persistent_state_t<table_raft_state_t> >, mailbox_addr_t<void ()>)>::address_t, uuid_u const&, multi_table_manager_bcard_t::timestamp_t const&, multi_table_manager_bcard_t::status_t const&, boost::optional<table_basic_config_t> const&, boost::optional<raft_member_id_t> const&, boost::optional<raft_persistent_state_t<table_raft_state_t> > const&, mailbox_addr_t<void ()> const&) at typed.hpp:744\n       28: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1c98e32] at 0x1c98e32 ()\n       29: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1c98bcc] at 0x1c98bcc ()\n       30: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1c98b2c] at 0x1c98b2c ()\n       31: callable_action_wrapper_t::run() at runtime_utils.cc:43\n       32: coro_t::run() at coroutines.cc:205\n       33: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1c988bd] at 0x1c988bd ()\n       34: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1c98889] at 0x1c98889 ()\n       35: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1c96266] at 0x1c96266 ()\n       36: table_meta_client_t::create_or_emergency_repair(uuid_u const&, table_raft_state_t const&, unsigned long, signal_t*) at table_meta_client.cc:555\n       37: table_meta_client_t::create(uuid_u, table_config_and_shards_t const&, signal_t*) at table_meta_client.cc:278\n       38: real_reql_cluster_interface_t::table_create(name_string_t const&, counted_t<ql::db_t const>, table_generate_config_params_t const&, std::string const&, write_durability_t, signal_t*, ql::datum_t*, std::string*) at real_reql_cluster_interface.cc:255\n       39: artificial_reql_cluster_interface_t::table_create(name_string_t const&, counted_t<ql::db_t const>, table_generate_config_params_t const&, std::string const&, write_durability_t, signal_t*, ql::datum_t*, std::string*) at artificial_reql_cluster_interface.cc:73\n       40: ql::table_create_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at db_table.cc:194\n       41: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:213\n       42: ql::runtime_term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:345\n       43: ql::query_cache_t::ref_t::run(ql::env_t*, Response*) at query_cache.cc:277\n       44: ql::query_cache_t::ref_t::fill_response(Response*) at query_cache.cc:235\n       45: ql::run(ql::query_id_t&&, ql::protob_t<Query>, Response*, ql::query_cache_t*, signal_t*) at term.cc:264\n       46: rdb_query_server_t::run_query(ql::query_id_t&&, ql::protob_t<Query> const&, Response*, ql::query_cache_t*, signal_t*) at query_server.cc:49\n       47: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const::{lambda()#1}::operator()() const at protob.cc:597\n       48: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const::{lambda()#1}&&) at protob.cc:537\n       49: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const at protob.cc:594\n       50: std::_Function_handler<void (std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*), void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}>::_M_invoke(std::_Any_data const&, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) at functional:1780\n       51: std::function<void (std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)>::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const at functional:2161\n       52: std_function_callback_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::coro_pool_callback(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) at coro_pool.hpp:30\n       53: coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::worker_run(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t) at coro_pool.hpp:68\n       54: std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>::operator()(coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t) const at functional:551\n       55: void std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>::__call<void, , 0, 1, 2>(std::tuple<>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\n       56: void std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1204\n       57: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\n       58: callable_action_wrapper_t::run() at runtime_utils.cc:43\n       59: coro_t::run() at coroutines.cc:205\n       60: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>&&) at coroutines.hpp:58\n       61: coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::on_source_availability_changed() at coro_pool.hpp:88\n       62: availability_control_t::set_available(bool) at passive_producer.hpp:65\n       63: limited_fifo_queue_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, std::list<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, std::allocator<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > > > >::push(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > const&) at limited_fifo.hpp:35\n       64: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda()#1}::operator()() const at protob.cc:631\n       65: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}&&) at protob.cc:537\n       66: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*) at protob.cc:626\n       67: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.cc:477\n       68: std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(query_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:551\n       69: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0, 1, 2>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\n       70: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1204\n       71: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1780\n       72: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2161\n       73: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:924\n       74: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at functional:551\n       75: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\n       76: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::operator()<, void>() at functional:1204\n       77: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >::run_action() at callable_action.hpp:31\n       78: callable_action_wrapper_t::run() at runtime_utils.cc:43\n       79: coro_t::run() at coroutines.cc:205\n       80: void coro_t::spawn_now_dangerously<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>&&) at coroutines.hpp:52\n       81: linux_nonthrowing_tcp_listener_t::accept_loop(auto_drainer_t::lock_t) at network.cc:891\n       82: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)>::operator()(linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t) const at functional:551\n       83: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\n       84: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1204\n       85: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\n       86: callable_action_wrapper_t::run() at runtime_utils.cc:43\nerror: Exiting.\n```\n"
  , issueState = "closed"
  , issueId = Id 91395889
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 316661
                , simpleUserLogin = N "timmaxw"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/316661?v=3"
                , simpleUserUrl = "https://api.github.com/users/timmaxw"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 95
          , milestoneClosedIssues = 217
          , milestoneDescription =
              Just "To-do list before shipping auto-failover"
          , milestoneTitle = "2.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/95"
          , milestoneCreatedAt = 2015 (-03) (-04) 21 : 09 : 42 UTC
          , milestoneState = "closed"
          }
  }