IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-06) 02 : 44 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/65882474"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3421#issuecomment-65882474"
  , issueCommentCreatedAt = 2014 (-12) (-06) 02 : 43 : 51 UTC
  , issueCommentBody =
      "Independently of what we return on a bare `r.db(my_db)`, we could also allow `r.db(...).table_list().changes()` by mapping it onto a corresponding transformation on `r.db(my_db).config()`.\r\n\r\nOn the other hand getting a changefeed on the union of all tables in a db without having `r.db(my_db).changes()` as a shortcut for that is more complex.\r\n\r\nMy suggestion for `r.db(my_db)` to give the union of all tables' contents came mostly out the consideration that we already have a couple of other terms where applying them to a db object basically means applying them to each table in the db.\r\nSo if we think of `r.db(...).table()` as some sort of implicit \"readAll\" term being applied to the table, I would expect `r.db(...)` to give me some sort of combination of \"readAll\" applied to each of the contained tables.\r\n\r\nThe `r.db(...).changes()` use case aside, I still think that doing a `table_list()` by default would be more useful in practice."
  , issueCommentId = 65882474
  }