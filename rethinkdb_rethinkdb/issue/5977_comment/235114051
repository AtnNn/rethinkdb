IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-25) 23 : 09 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/235114051"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5977#issuecomment-235114051"
  , issueCommentCreatedAt = 2016 (-07) (-25) 23 : 09 : 44 UTC
  , issueCommentBody =
      "> Adding a flag isn't as easy, because it will also change the serialization format for datums.\r\n\r\nWe could implement it as an additional datum type (we'd have `OBJECT` and `OBJECT_WITH_LITERAL` or something).  That should be backward-compatible with on-disk data.\r\n\r\n> What do you think about the option of just traversing the whole object on a merge to strip out literals?\r\n\r\nIt's probably fine, actually; you're right that it's not that much more expensive in the common case if we implement it well (i.e. doing it during the merge traversal rather than as a preprocessing step that generates a new object)."
  , issueCommentId = 235114051
  }