IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-25) 18 : 05 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/235033916"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5977#issuecomment-235033916"
  , issueCommentCreatedAt = 2016 (-07) (-25) 18 : 05 : 50 UTC
  , issueCommentBody =
      "> After thinking about it, though, I think the cleanest option would actually be to tag objects with whether or not they contain a nested literal.\r\n\r\nWhat do you think about the option of just traversing the whole object on a `merge` to strip out `literal`s? I think that's probably just one or two lines of code (since we already have the function that does it), and I think in practice the performance penalty isn't going to be that big. It will only affect the case where one side of the merge adds a nested object that doesn't exist on the other side (and maybe it will affect nested arrays always? I'm not sure what we're currently doing for those).\r\n\r\nAdding a flag isn't as easy, because it will also change the serialization format for datums."
  , issueCommentId = 235033916
  }