IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-24) 04 : 40 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12636944"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/252#issuecomment-12636944"
  , issueCommentCreatedAt = 2013 (-01) (-24) 04 : 39 : 08 UTC
  , issueCommentBody =
      "It seems to me that RethinkDB currently does (or is about to do very soon) the following:\r\n\r\n1. The server uses our very own binary format that can easily be serialized and deserialized to JSON and will eventually be extended with degrading to JSON in mind, but is really independent of JSON conceptually. So, exposing a JSON parser through the server seems is at odds with our philosophy.\r\n2. The client drivers take our internal format and deserialize it into native language data structures (and serialize native data structures into our format). Again, this happens to interop with JSON rather well and we'll maintain that for convenience, but it's rather tangential to JSON itself.\r\n\r\nSo, we probably should support client-side `r.json` that either contains our own json parser implemented in each client driver, or relies on a standard (or an external) library to make json interop even more convenient for users, but I don't think it will happen until we run out of lower-hanging fruit. Moving to backlog.\r\n\r\n(Unless I misunderstood @wmrowan, @jdoliner, *and* @al3xandru, in which case please correct me).\r\n"
  , issueCommentId = 12636944
  }