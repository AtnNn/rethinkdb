IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-30) 07 : 52 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29547815"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-29547815"
  , issueCommentCreatedAt = 2013 (-11) (-30) 07 : 52 : 56 UTC
  , issueCommentBody =
      "> @coffeemug -- `table.group('a')[0]` would, with the current semantics, apply `[0]` to each stream in the grouped streams.\r\n\r\nErr, duh. Upon further reflection I don't think it's necessarily a bad idea to special case some commands where they make more sense (or might be more useful) the other way. It might be worth thinking about it, but I don't think it's worth opening this discussion now.\r\n\r\n> A client-side helper like `group_to_hash` might be a very reasonable idea, but I'd have to think about it more. (It would also be an additional burden on 3rd-party driver developers, who already have to put up with a lot.)\r\n\r\nConsider that it wouldn't be any more difficult to implement `group_to_hash` than to implement the conversion from the pseudotype. In fact it would be easier because driver devs could ignore implementing `group_to_hash` without adverse effects; it would be harder to ignore pseudotypes (since that would result in some weirdness for end users)."
  , issueCommentId = 29547815
  }