IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-01) 19 : 29 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20304496"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-20304496"
  , issueCommentCreatedAt = 2013 (-07) (-01) 19 : 29 : 14 UTC
  , issueCommentBody =
      "In this proposal, what would r.sum('age').typeOf() be?\r\n\r\nI think it is essential to be able to combine aggregators:\r\n\r\n    r.avg = fun x -> r.sum(x) / r.count()\r\n\r\nAnd to have direct way to build these aggregators:\r\n\r\n    r.avg = fun x -> r.aggregator({\r\n        map: fun row -> [row[x], 1],\r\n        reduce: fun a b -> [a[0]+b[0], a[1]+b[1]],\r\n        final: fun row -> row[0] / row[1]\r\n    })\r\n\r\nAll the examples in this thread use r.table.group.reduce, but I assume aggregators will also work on regular streams:\r\n\r\n    r.table('foo').reduce(r.avg('bar'))\r\n\r\nI don't like the name aggregator. It sounds like a Google Reader replacement."
  , issueCommentId = 20304496
  }