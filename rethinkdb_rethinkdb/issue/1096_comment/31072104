IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-21) 21 : 01 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/31072104"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-31072104"
  , issueCommentCreatedAt = 2013 (-12) (-21) 21 : 01 : 14 UTC
  , issueCommentBody =
      "`group` is the wrong way to solve this problem and the way you guys are writing your queries they're going to wind up being really inefficient. The eventual way to write this query is going to be:\r\n\r\n```Python\r\ntable.merge(lambda x: {\"posts\" : r.table(\"posts\").get_all(x[\"id\"], index=\"user_id\")})\r\n```\r\n\r\nWe could add some sugar for that for example just adding an `as_attr` optarg to joins so you could say:\r\n\r\n```Python\r\ntable.eq_join(\"id\", r.table(\"posts\"), index=\"user_id\", as_attr=\"posts\")\r\n```"
  , issueCommentId = 31072104
  }