IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-30) 03 : 18 : 12 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29544827"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-29544827"
  , issueCommentCreatedAt = 2013 (-11) (-30) 03 : 18 : 12 UTC
  , issueCommentBody =
      "Everything makes sense, I'm cool with implementing as is. I think it would be awesome. I do have a few more ideas:\r\n\r\n> We can let people name their group and reduction fields with optargs to `group`.\r\n\r\nFrom an API perspective I think it would be much cleaner to add an optarg to `group` and to the reduction/aggregator:\r\n\r\n```javascript\r\nfoo.group(..., field='city').count(field='count')\r\n```\r\n\r\nI also think that the default reduction name should be the name of the aggregator. I.e. for `count` it would be `count` instead of `reduction`, for `sum` the field name would be `sum`, etc. It seems far more friendly, pleasant, and familiar to me than just calling it `reduction` everywhere.\r\n\r\n> If we let people include members of a group, we could do it by adding an optarg `group_members => n`\r\n\r\nA bit of nitpicking but I think we could find a better name. May be just `members`?\r\n\r\n> I think we should do multi-reduction by implementing stream\r\n\r\nI've opened #1725 so we can discuss this separately."
  , issueCommentId = 29544827
  }