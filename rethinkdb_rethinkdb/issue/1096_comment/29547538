IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-30) 07 : 28 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29547538"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-29547538"
  , issueCommentCreatedAt = 2013 (-11) (-30) 07 : 28 : 25 UTC
  , issueCommentBody =
      "OK, let's hold off on `return_members` until we get stream splitting (or whatever we settle on) in, which probably won't happen for 1.12.\r\n\r\n@jdoliner -- I think `table.group{|row| [row[:a], row[:b]]}` is a pretty common idiom, and in Python you can't use arrays as object keys.  That's the main problem I see right now.\r\n\r\n@coffeemug -- `table.group('a')[0]` would, with the current semantics, apply `[0]` to each stream in the grouped streams.  I don't think we want to special case it.  I'd rather have people write `table.filter({a:0})` if they only care about one group.\r\n\r\nA client-side helper like \"group_to_hash\" might be a very reasonable idea, but I'd have to think about it more.  (It would also be an additional burden on 3rd-party driver developers, who already have to put up with a lot.)"
  , issueCommentId = 29547538
  }