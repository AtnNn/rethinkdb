IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-27) 00 : 14 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29349556"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-29349556"
  , issueCommentCreatedAt = 2013 (-11) (-27) 00 : 14 : 17 UTC
  , issueCommentBody =
      "So, I have a radical proposal here.  I'm not sure I even like it myself, but I want to throw it out there.\r\n\r\nThe niggling problem we always have with this is \"what if someone just types `r.table('test').group('field')` -- what do we return?  Or do we error?  The basic problem is that we can't return multiple cursors.\r\n\r\nNow that we have psudotypes, we could return something like this:\r\n```ruby\r\n[{group: 'a', reduction: {$reql_type$: 'stream_ref', token: 13, first_batch: [...]}}, ...]\r\n```\r\n\r\nThe clients could then turn the `stream_ref` pseudotypes into cursors.\r\n\r\nAny thoughts?"
  , issueCommentId = 29349556
  }