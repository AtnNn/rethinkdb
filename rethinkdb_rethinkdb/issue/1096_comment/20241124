IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-30) 02 : 47 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20241124"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-20241124"
  , issueCommentCreatedAt = 2013 (-06) (-30) 02 : 46 : 28 UTC
  , issueCommentBody =
      "SQL dbs automatically rename but that's not really feasible for us because we support such a wider variety of aggregations than SQL that we can't just default to \"Count(foo.bar)\" long term I like the syntax we've discussed where you could say:\r\n\r\n`reduce({\"foo\" : lambda x,y x + y, \"bar\" : lambda x,y: x * y})`\r\n\r\nI think that would really be awesome but a bit tougher so I think we should just do the simple thing and come back later\r\n\r\n---\r\n\r\nWe return:\r\n\r\n```\r\nQuery result must be of type DATUM or STREAM (got FUNCTION).\r\n```\r\nif the person tries to print a FUNCTION. I think that's a much better error message than either.\r\n\r\n---\r\n\r\nIt seems kind of inconsistent to me to let people coerce streams to arrays but not let them coerce groupedstream to something (I realized coercing to an object actually doesn't work but stream does). This is actually a really useful feature when you're dealing with a smaller dataset and what to just take a quick peek at the computation between steps.\r\n"
  , issueCommentId = 20241124
  }