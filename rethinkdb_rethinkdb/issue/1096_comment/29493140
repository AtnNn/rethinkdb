IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-29) 02 : 43 : 27 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29493140"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1096#issuecomment-29493140"
  , issueCommentCreatedAt = 2013 (-11) (-29) 02 : 42 : 24 UTC
  , issueCommentBody =
      "> With grouped_datums the exact code that averages a stream of numbers also averages groups of streams of numbers. That's a very good smell to me.\r\n\r\nAh, I totally missed this bit, that makes complete sense. I retract all my objections for doing this on the server. \r\n\r\nHowever, I still maintain that having different native representations in different drivers is a bad idea. I also maintain that we should return JSON from the server directly (instead of a pseudotype, which I think is at best unnecessary, and at worst, a temptation for third party developers to diverge on this feature).\r\n\r\nOne good way to do it (from a user's perspective) is to have a templatized `GROUPING` type that would instantiate either as `GROUPING<STREAM>` or `GROUPING<DATUM>`. We could then implement proper overloading, and coerce all groupings about to be sent to the client into arrays right on the server.\r\n\r\n> I think doing multiple reductions is good but we should do it as a separate proposal rather than tack it on to this.\r\n\r\nMakes sense, I'm not opposed to dropping it from this issue."
  , issueCommentId = 29493140
  }