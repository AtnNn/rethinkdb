IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-29) 19 : 42 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15657279"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/527#issuecomment-15657279"
  , issueCommentCreatedAt = 2013 (-03) (-29) 19 : 42 : 55 UTC
  , issueCommentBody =
      "Except that integers do a lot for a lot of people. Many use cases for numbers in data models are really use cases for integers. From an internal perspective, using an integer rather than floating point representation in these cases allows us to use more efficient encodings, increases performance, and limits the chances for unexpected errors like  bad roundoffs when converting types.\r\n\r\nMore importantly though, is that supporting integers in rethinkdb allows users to better match their rethinkdb data model to the data model in use in their application. This is already one of several issues opened because of the confusion generated by the fact that the singular RQL number type degrades to a floating point value in the host language. Better support for the conventions of our host languages reduces the friction of using RQL. Users expect that when they stick an integer into RethinkDB they get an integer back. Violating that expectation creates a user experience problem if not a technical one.\r\n\r\nMy data model may not make use of integers (and in JS it cannot) and integer values returned by RethinkDB will degrade to floating point values in those languages that don't support integers leaving me no worse off than before RethinkDB supported integers. When my data model does make use of integers though it's confusing as hell to see RethinkDB downgrade them to floating point values."
  , issueCommentId = 15657279
  }