Issue
  { issueClosedAt = Just 2014 (-03) (-01) 00 : 41 : 54 UTC
  , issueUpdatedAt = 2014 (-03) (-01) 00 : 41 : 54 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2003/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2003"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 2003
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Guarantee failed: [gc_state.current_entry == __null]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2003"
  , issueCreatedAt = 2014 (-02) (-24) 06 : 19 : 36 UTC
  , issueBody =
      Just
        "I got this crash twice when joining a new node to a cluster.\n\n```\nerror: Error in src/serializer/log/data_block_manager.cc at line 1211:\nerror: Guarantee failed: [gc_state.current_entry == __null] 0x5f40ec0: 520192 garbage bytes left on the extent, 4096 index-referenced bytes, 0 token-referenced bytes, at offset 3145728.  block dump:\n       [3145728..+4096)   \n       [3149824..+4096)   \n       [3153920..+4096)   \n       [3158016..+4096)   \n       [3162112..+4096)   \n       [3166208..+4096)   \n       [3170304..+4096)   \n       [3174400..+4096)   \n       [3178496..+4096)   \n       [3182592..+4096)   \n       [3186688..+4096)   \n       [3190784..+4096)   \n       [3194880..+4096)   \n       [3198976..+4096)   \n       [3203072..+4096)   \n       [3207168..+4096)   \n       [3211264..+4096)   \n       [3215360..+4096)   \n       [3219456..+4096)   \n       [3223552..+4096)   \n       [3227648..+4096)   \n       [3231744..+4096)   \n       [3235840..+4096)   \n       [3239936..+4096)   \n       [3244032..+4096)   \n       [3248128..+4096)   \n       [3252224..+4096)   \n       [3256320..+4096)   \n       [3260416..+4096)   \n       [3264512..+4096)   \n       [3268608..+4096)   \n       [3272704..+4096)   \n       [3276800..+4096)   \n       [3280896..+4096)   \n       [3284992..+4096)   \n       [3289088..+4096)   \n       [3293184..+4096)   \n       [3297280..+4096)   \n       [3301376..+4096)   \n       [3305472..+4096)   \n       [3309568..+4096)   \n       [3313664..+4096)   \n       [3317760..+4096)   \n       [3321856..+4096)   \n       [3325952..+4096)   \n       [3330048..+4096)   \n       [3334144..+4096)   \n       [3338240..+4096)   \n       [3342336..+4096)   \n       [3346432..+4096)   \n       [3350528..+4096)   \n       [3354624..+4096)   \n       [3358720..+4096)   \n       [3362816..+4096)   \n       [3366912..+4096)   \n       [3371008..+4096)   \n       [3375104..+4096)   \n       [3379200..+4096)   \n       [3383296..+4096)   \n       [3387392..+4096)   \n       [3391488..+4096)   \n       [3395584..+4096)   \n       [3399680..+4096)   \n       [3403776..+4096)   \n       [3407872..+4096)   \n       [3411968..+4096)   \n       [3416064..+4096)   \n       [3420160..+4096)   \n       [3424256..+4096)   \n       [3428352..+4096)   \n       [3432448..+4096)   \n       [3436544..+4096)   \n       [3440640..+4096)   \n       [3444736..+4096)   \n       [3448832..+4096)   \n       [3452928..+4096)   \n       [3457024..+4096)   \n       [3461120..+4096)   \n       [3465216..+4096)   \n       [3469312..+4096)   \n       [3473408..+4096)  I\n       [3477504..+4096)   \n       [3481600..+4096)   \n       [3485696..+4096)   \n       [3489792..+4096)   \n       [3493888..+4096)   \n       [3497984..+4096)   \n       [3502080..+4096)   \n       [3506176..+4096)   \n       [3510272..+4096)   \n       [3514368..+4096)   \n       [3518464..+4096)   \n       [3522560..+4096)   \n       [3526656..+4096)   \n       [3530752..+4096)   \n       [3534848..+4096)   \n       [3538944..+4096)   \n       [3543040..+4096)   \n       [3547136..+4096)   \n       [3551232..+4096)   \n       [3555328..+4096)   \n       [3559424..+4096)   \n       [3563520..+4096)   \n       [3567616..+4096)   \n       [3571712..+4096)   \n       [3575808..+4096)   \n       [3579904..+4096)   \n       [3584000..+4096)   \n       [3588096..+4096)   \n       [3592192..+4096)   \n       [3596288..+4096)   \n       [3600384..+4096)   \n       [3604480..+4096)   \n       [3608576..+4096)   \n       [3612672..+4096)   \n       [3616768..+4096)   \n       [3620864..+4096)   \n       [3624960..+4096)   \n       [3629056..+4096)   \n       [3633152..+4096)   \n       [3637248..+4096)   \n       [3641344..+4096)   \n       [3645440..+4096)   \n       [3649536..+4096)   \n       [3653632..+4096)   \n       [3657728..+4096)   \n       [3661824..+4096)   \n       [3665920..+4096)   \nerror: Backtrace:\nerror: Sun Feb 23 21:40:36 2014\n\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:99\n       2: backtrace_t::backtrace_t() at backtrace.cc:202\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:282\n       4: format_backtrace(bool) at backtrace.cc:197\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:76\n       6: data_block_manager_t::run_gc() at data_block_manager.cc:1201\n       7: data_block_manager_t::on_gc_write_done() at data_block_manager.cc:1043\n       8: data_block_manager_t::gc_writer_t::write_gcs(data_block_manager_t::gc_write_t*, unsigned long) at data_block_manager.cc:1032\n       9: boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>::operator()(data_block_manager_t::gc_writer_t*, data_block_manager_t::gc_write_t*, unsigned long) const at mem_fn_template.hpp:281\n       10: void boost::_bi::list3<boost::_bi::value<data_block_manager_t::gc_writer_t*>, boost::_bi::value<data_block_manager_t::gc_write_t*>, boost::_bi::value<unsigned long> >::operator()<boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>&, boost::_bi::list0&, int) at bind.hpp:393\n       11: boost::_bi::bind_t<void, boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>, boost::_bi::list3<boost::_bi::value<data_block_manager_t::gc_writer_t*>, boost::_bi::value<data_block_manager_t::gc_write_t*>, boost::_bi::value<unsigned long> > >::operator()() at bind_template.hpp:21\n       12: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>, boost::_bi::list3<boost::_bi::value<data_block_manager_t::gc_writer_t*>, boost::_bi::value<data_block_manager_t::gc_write_t*>, boost::_bi::value<unsigned long> > > >::run_action() at callable_action.hpp:28\n       13: callable_action_wrapper_t::run() at runtime_utils.cc:43\n       14: coro_t::run() at coroutines.cc:197\n       15: coro_t* coro_t::spawn_later_ordered<boost::_bi::bind_t<void, boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>, boost::_bi::list3<boost::_bi::value<data_block_manager_t::gc_writer_t*>, boost::_bi::value<data_block_manager_t::gc_write_t*>, boost::_bi::value<unsigned long> > > >(boost::_bi::bind_t<void, boost::_mfi::mf2<void, data_block_manager_t::gc_writer_t, data_block_manager_t::gc_write_t*, unsigned long>, boost::_bi::list3<boost::_bi::value<data_block_manager_t::gc_writer_t*>, boost::_bi::value<data_block_manager_t::gc_write_t*>, boost::_bi::value<unsigned long> > > const&) at coroutines.hpp:68\n       16: data_block_manager_t::gc_writer_t::gc_writer_t(data_block_manager_t::gc_write_t*, unsigned long, data_block_manager_t*) at data_block_manager.cc:918\n       17: data_block_manager_t::run_gc() at data_block_manager.cc:1185\n       18: data_block_manager_t::gc_read_callback_t::on_io_complete() at data_block_manager.hpp:138\n       19: std::_Mem_fn<void (linux_iocallback_t::*)()>::operator()(linux_iocallback_t*) const at functional:551\n       20: void std::_Bind<std::_Mem_fn<void (linux_iocallback_t::*)()> (linux_iocallback_t*)>::__call_c<void, , 0>(std::tuple<>&&, std::_Index_tuple<0>) const at functional:1156\n       21: void std::_Bind<std::_Mem_fn<void (linux_iocallback_t::*)()> (linux_iocallback_t*)>::operator()<, void>() const at functional:1220\n       22: thread_doer_t<std::_Bind<std::_Mem_fn<void (linux_iocallback_t::*)()> (linux_iocallback_t*)> >::do_perform_job() at do_on_thread.hpp:37\n       23: thread_doer_t<std::_Bind<std::_Mem_fn<void (linux_iocallback_t::*)()> (linux_iocallback_t*)> >::on_thread_switch() at do_on_thread.hpp:54\n       24: linux_message_hub_t::on_event(int) at message_hub.cc:154\n       25: epoll_event_queue_t::run() at epoll.cc:115\n       26: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:159\n       27: /lib/x86_64-linux-gnu/libpthread.so.0(+0x7e9a) [0x7fbda0623e9a] at 0x7fbda0623e9a (/lib/x86_64-linux-gnu/libpthread.so.0)\n       28: clone+0x6d at 0x7fbda03503fd (/lib/x86_64-linux-gnu/libc.so.6)\nerror: Exiting.\nTrace/breakpoint trap (core dumped)\n```\n\nI did something like this:\n- Started two nodes. Created a table and inserted some data (140K empty documents)\n- Set the number of replicas to 2\n- Shut down the secondary. Deleted its data directory.\n- Started up a new node with a fresh data directory. Marked the missing node as dead in the cluster. Backfilling would start immediately to make the new node a secondary (remember: the replica count of the table is still set to 2).\n- Waited a minute or so. The fresh node crashed.\n\nI might actually have done something slightly different, because I can't reproduce it right now. I also had a compilation job running in the background, so there was some disk and CPU activity.\n"
  , issueState = "closed"
  , issueId = Id 28140635
  , issueComments = 10
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2014 (-03) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 53
          , milestoneClosedIssues = 203
          , milestoneDescription = Just ""
          , milestoneTitle = "1.12"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/53"
          , milestoneCreatedAt = 2013 (-11) (-19) 09 : 47 : 10 UTC
          , milestoneState = "closed"
          }
  }