IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-12) 02 : 32 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/101106311"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3700#issuecomment-101106311"
  , issueCommentCreatedAt = 2015 (-05) (-12) 02 : 32 : 26 UTC
  , issueCommentBody =
      "@coffeemug -- You're right, and apparently we noticed this before (https://github.com/rethinkdb/rethinkdb/issues/2061) but it wasn't settled for the obvious reason.  It looks like we're currently inconsistent: `filter` and `merge` have the behavior I described (I think), but `map` doesn't.  (So `r.table('test').filter(true)` works but `r.table('test').map(true)` doesn't.)\r\n\r\nI would be OK with either changing `map` to behave like `filter` and changing `forEach` to be a special case (since it's the only stream term that can have writes in it), or with changing `forEach` and `filter` to be like `map` and having `merge` be a special case (since clearly `r.table('test').merge(OBJ)` should work)."
  , issueCommentId = 101106311
  }