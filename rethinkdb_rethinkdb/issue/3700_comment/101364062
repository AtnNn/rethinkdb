IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-12) 17 : 48 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/101364062"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3700#issuecomment-101364062"
  , issueCommentCreatedAt = 2015 (-05) (-12) 17 : 48 : 54 UTC
  , issueCommentBody =
      "> Because the semantics aren't clear -- do we evaluate `t.count()` once, or once per row?\r\n\r\nI still don't understand why it matters, so I wonder if I'm missing something.\r\n\r\nThe way I see it is: If you're ok with it being evaluates once per row, then evaluating this only once overall seems to give at least the same guarantees but at a better performance.\r\nThe mapping function cannot do any writes, hence you have no way of guaranteeing that the `count` would see any particular changes that could happen throughout the `map` anyway as far as I can tell.\r\n\r\nIf you need it to be evaluated exactly once (e.g. you require it to remain constant for the whole `map`), then evaluating it once is obviously the right thing to do."
  , issueCommentId = 101364062
  }