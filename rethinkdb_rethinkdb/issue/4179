Issue
  { issueClosedAt = Just 2015 (-05) (-04) 21 : 59 : 47 UTC
  , issueUpdatedAt = 2015 (-05) (-04) 23 : 22 : 04 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4179/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4179"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4179
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 667283
        , simpleUserLogin = N "simonratner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/667283?v=3"
        , simpleUserUrl = "https://api.github.com/users/simonratner"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "return_changes suppresses \"changes\" in result for unchanged documents"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4179"
  , issueCreatedAt = 2015 (-05) (-04) 21 : 52 : 18 UTC
  , issueBody =
      Just
        "For a conditional update query:\r\n```js\r\nr.table(table).get(id).update(function(doc) {\r\n  return r.branch(\r\n    some_predicate_on_doc,\r\n    some_expression_of_doc,\r\n    null\r\n  )\r\n}, {returnChanges: true})\r\n```\r\nthe goal is to atomically apply an update only if the predicate is satisfied. The result of the operation is used to update the local model of the data with new values without doing another read. \r\n\r\nAs of 2.0, the query no longer returns changes if nothing has changed (perhaps #3697), however it is still useful to update the local model with the most up-to-date state of the document. With concurrent writes, the client does not know what the state of the document is at the time of executing the query, so it is left to perform another read after receiving an {unchanged: ...} result. That seems wasteful, considering we just paid for reading the document.\r\n\r\nThe behaviour is also inconsistent with errors, leading to the following workaround, which does return the state of the document at the time of the query:\r\n```js\r\nr.table(table).get(id).update(function(doc) {\r\n  return r.branch(\r\n    some_predicate_on_doc,\r\n    some_expression_of_doc,\r\n    r.error('unchanged')\r\n  )\r\n}, {returnChanges: true})\r\n```"
  , issueState = "closed"
  , issueId = Id 73137333
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }