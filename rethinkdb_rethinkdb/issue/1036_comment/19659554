IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 02 : 47 : 12 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19659554"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1036#issuecomment-19659554"
  , issueCommentCreatedAt = 2013 (-06) (-19) 02 : 47 : 12 UTC
  , issueCommentBody =
      "It just seems really confusing to me to call has_fields on a sequence and\r\nthen try to do something with the result and get an error that says \"the\r\nobject doesn't have the field you just called has fields with\".\r\nOn Jun 18, 2013 7:39 PM, \"Michael Lucy\" <notifications@github.com> wrote:\r\n\r\n> I think it would be really confusing to have this behave differently from\r\n> pluck and friends. It would also make with_fields not do what you want,\r\n> since with_fields is just has_fields followed by pluck.\r\n>\r\n> Note that has_fields doesn't strip out non-object non-array elements from\r\n> the sequence, so it wouldn't solve your problems in any case. Its role is\r\n> to take a sequence of objects and return a sequence of objects, not to take\r\n> a sequence of arbitrary types and return a sequence of objects with all\r\n> other types excluded. Making it recurse into subsequences makes more sense\r\n> in that context than making it error, at least to me.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1036#issuecomment-19659329>\r\n> .\r\n>"
  , issueCommentId = 19659554
  }