IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-25) 17 : 31 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/53296322"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2954#issuecomment-53296322"
  , issueCommentCreatedAt = 2014 (-08) (-25) 17 : 31 : 05 UTC
  , issueCommentBody =
      "One thing I can think of is that the first query returns `nth(0)` for each ID, whereas the second query returns everything. If a secondary index is dense, the first query might potentially return a lot fewer elements than the second one.\r\n\r\nCould you try running the following query? What's the performance on that?\r\n\r\n```javascript\r\nr.expr([\r\n  \"38c2340fd0312913\",\r\n  [... 23 IDs ...],\r\n  \"772cc45fa0bf8c12\"\r\n])\r\n.concatMap(function(var_14) {\r\n    return r.db('lm')\r\n      .table(\"contents\")\r\n      .getAll(var_14, { index: 'revision_id' })\r\n})\r\n```"
  , issueCommentId = 53296322
  }