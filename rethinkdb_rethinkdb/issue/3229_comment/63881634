IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-20) 21 : 19 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/63881634"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3229#issuecomment-63881634"
  , issueCommentCreatedAt = 2014 (-11) (-20) 21 : 19 : 35 UTC
  , issueCommentBody =
      "@danielmewes, your \"third option\" presents a lot of redundant information, and I think that's confusing. Also, I think there's value in following the conventions that programmers are already used to for showing diffs (showing added and removed parts in green and red).\r\n\r\nTypically, when the user increases the number of shards, I would expect most of the shards to stay the same but some new shards to be added; and if the user decreases the number of shards, I would expect most of the shards to stay the same but some shards to disappear. So I think the web UI should try to figure out which of the old shards correspond to which of the new shards, and then diff the matching shards, while showing completely-new or completely-removed shards in green or red. In most cases this will be the clearest thing for the user.\r\n\r\nI think that the `reconfigure` vs `rebalance` distinction should be presented in the same way in both the web UI and in ReQL. In particular, I think that when the web UI shows the shard balancing statistics, it should check if they seem unbalanced; and if so, it should display a \"Rebalance\" button. Other than that it should never call `rebalance()`, I think."
  , issueCommentId = 63881634
  }