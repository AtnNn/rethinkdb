Issue
  { issueClosedAt = Just 2015 (-08) (-18) 01 : 46 : 32 UTC
  , issueUpdatedAt = 2015 (-08) (-18) 07 : 04 : 49 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4697/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4697"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4697
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 49754
        , simpleUserLogin = N "kureikain"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/49754?v=3"
        , simpleUserUrl = "https://api.github.com/users/kureikain"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Adding a `count()` on an `eqJoin` stream makes it very slow"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4697"
  , issueCreatedAt = 2015 (-08) (-15) 06 : 24 : 47 UTC
  , issueBody =
      Just
        "Assume I have this schema:\n\n```\ncompounds_foods: compound_id (~662,448 documents)\ncompounds_flavors: compound_id, flavor_id(~11,136 documents)\n```\n\nThis query run very fast and return `STREAM` what explains why it is fast, I think\n\n```\nr.db(\"foodb\").table(\"compounds_foods\")\n  .eqJoin('compound_id', r.db('foodb').table('compounds_flavors'), {index: 'compound_id'})\n```\n\nThen out of curiousity, I tried to add  a `count` on it to count how many result I have:\n\n```\nr.db(\"foodb\").table(\"compounds_foods\")\n  .eqJoin('compound_id', r.db('foodb').table('compounds_flavors'), {index: 'compound_id'})\n .count()\n```\n\nAnd it never finish on my machine Macbook Pro 2014, core i5 16GB RAM.\n\n```\nRqlRuntimeError: HTTP ReQL query timed out after 300 seconds in:\nr.db(\"foodb\").table(\"compounds_foods\").eqJoin(\"compound_id\", r.db(\"foodb\").table(\"compounds_flavors\"), {index: \"compound_id\"}).count()\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^`^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\nIs this some kind of bug or I'm doing it wrong?\n\nEventually, I think it has better way to do this kind of thing. However, this example is trivial and I think counting a stream should be possible?\n"
  , issueState = "closed"
  , issueId = Id 101147183
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }