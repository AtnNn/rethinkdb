IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-10) 21 : 46 : 36 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/37238736"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2054#issuecomment-37238736"
  , issueCommentCreatedAt = 2014 (-03) (-10) 21 : 46 : 36 UTC
  , issueCommentBody =
      "Warning inside the description of a function if you are after a group (at the same level) is available in branch `michel_2054_embedded_warning`.\r\n\r\nYou need to update the docs to see it working.\r\n```\r\nmichel@newton:~/rethinkdb/next/rethinkdb$ git diff docs/rql/reql_docs.json\r\ndiff --git a/docs/rql/reql_docs.json b/docs/rql/reql_docs.json\r\nindex 4428cf1..38f22a4 100644\r\n--- a/docs/rql/reql_docs.json\r\n+++ b/docs/rql/reql_docs.json\r\n@@ -731,6 +731,48 @@\r\n     \"example\": \"<p><strong>Example:</strong> Using a predefined reduction we can easily find the average strength of members of each weight class.</p>\\n<p><co\r\n     \"name\": \"groupBy\"\r\n   }, \r\n+  \"api/javascript/group/\": {\r\n+    \"body\": \"sequence.group(...) ...\", \r\n+    \"description\": \"<p>Blablabla</p>\", \r\n+    \"url\": \"filter\", \r\n+    \"io\": [\r\n+      [\r\n+        \"sequence\", \r\n+        \"sequence\"\r\n+      ], \r\n+      [\r\n+        \"stream\", \r\n+        \"stream\"\r\n+      ], \r\n+      [\r\n+        \"array\", \r\n+        \"array\"\r\n+      ]\r\n+    ], \r\n+    \"example\": \"<p><strong>Example:</strong> Blabla</p>\", \r\n+    \"name\": \"group\"\r\n+  }, \r\n+  \"api/javascript/ungroup/\": {\r\n+    \"body\": \"sequence.ungroup(...) ...\", \r\n+    \"description\": \"<p>Blablabla</p>\", \r\n+    \"url\": \"filter\", \r\n+    \"io\": [\r\n+      [\r\n+        \"sequence\", \r\n+        \"sequence\"\r\n+      ], \r\n+      [\r\n+        \"stream\", \r\n+        \"stream\"\r\n+      ], \r\n+      [\r\n+        \"array\", \r\n+        \"array\"\r\n+      ]\r\n+    ], \r\n+    \"example\": \"<p><strong>Example:</strong> Blabla</p>\", \r\n+    \"name\": \"ungroup\"\r\n+  }, \r\n   \"api/javascript/filter/\": {\r\n     \"body\": \"sequence.filter(predicate[, {default: false}]) &rarr; selectionstream.filter(predicate[, {default: false}]) &rarr; streamarray.filter(predicate[,\r\n     \"description\": \"<p>Get all the documents for which the given predicate is true.</p>\\n<p><code>filter</code> can be called on a sequence, selection, or a f\r\n@@ -1794,4 +1836,4 @@\r\n     \"example\": \"<p><strong>Example:</strong> Return the users born on the 24th of any month.</p>\\n<p><code>r.table(\\\"users\\\").filter(\\n    r.row(\\\"birthdate\\\"\r\n     \"name\": \"day\"\r\n   }\r\n-}\r\n\\ No newline at end of file\r\n+}\r\n```"
  , issueCommentId = 37238736
  }