IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-18) 17 : 23 : 31 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/56072861"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2720#issuecomment-56072861"
  , issueCommentCreatedAt = 2014 (-09) (-18) 17 : 23 : 31 UTC
  , issueCommentBody =
      "Here's my proposal:\r\nhttps://gist.github.com/neumino/47b6fc616d9e884757a5\r\n\r\n\r\nHere are the main reasons behind the proposal:\r\n- Joined documents can be stored in a field\r\n- If only one document is expected, we return it as an object, not an array with one document\r\n- We can overwrite a whole object to handle a many to many relations in a nice way.\r\n- We can have nested joined. The `compose` option can look heavy, but it's from my point of view an order magnitude better than asking users to enter/exit scopes.\r\n\r\n\r\nWhat it doesn't handle\r\n- For a many to many relation on a table with itself, people have to store the relation twice if they want a bi-directional link. They cannot store an array of two ids, and use a multi index.\r\nI couldn't come up with a nice syntax, but if someone can, it could be nice."
  , issueCommentId = 56072861
  }