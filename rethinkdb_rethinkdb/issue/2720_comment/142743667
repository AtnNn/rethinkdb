IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-23) 21 : 59 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/142743667"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2720#issuecomment-142743667"
  , issueCommentCreatedAt = 2015 (-09) (-23) 21 : 59 : 43 UTC
  , issueCommentBody =
      "@marshall007 That's an interesting idea. Judging from our experience with `group` and `ungroup`, I think we should try to avoid this pattern though. The problem is that it's not immediately obvious what `ungroup` / `unjoin` do, since they don't change the result themselves. Instead they change how subsequent operations work. So this adds implicit state to the query, which can be hard to grasp for unexperienced users.\r\n\r\nI think I'd prefer an explicit callback probably."
  , issueCommentId = 142743667
  }