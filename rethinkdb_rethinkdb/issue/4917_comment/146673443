IssueComment
  { issueCommentUpdatedAt = 2015 (-10) (-08) 20 : 14 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/146673443"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4917#issuecomment-146673443"
  , issueCommentCreatedAt = 2015 (-10) (-08) 20 : 14 : 43 UTC
  , issueCommentBody =
      "@danielmewes -- My theory about why Valgrind didn't catch the error is that I think the object we moved out of was stored on the stack, and that GCC knew enough about the semantics of `std::move` to know it could re-use the space for something else, but the space was never freed and reallocated or anything (since it was on the stack) so Valgrind couldn't catch it.\r\n\r\n@larkost -- the best change to the test system we could make to catch bugs like this in the future would be to test the compiled release binaries on the platforms they're built for.  Our tests reliably reproduced this bug on the Ubuntu 14 build, but not on Newton."
  , issueCommentId = 146673443
  }