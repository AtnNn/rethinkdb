Issue
  { issueClosedAt = Just 2015 (-05) (-12) 21 : 02 : 06 UTC
  , issueUpdatedAt = 2015 (-05) (-12) 21 : 07 : 50 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4217/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4217"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4217
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 713456
        , simpleUserLogin = N "pgrm"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/713456?v=3"
        , simpleUserUrl = "https://api.github.com/users/pgrm"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Sort dates and times with millisecond precision."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4217"
  , issueCreatedAt = 2015 (-05) (-12) 10 : 19 : 46 UTC
  , issueBody =
      Just
        "Hi, sometimes I'm inserting several data sets within the same second. I'd afterwards again like to get them in the same order as they've been inserted, is that planned, or is it not really possible to implement?\n\nIn any case, is there a best-practice workaround for that for now? Out of the top of my head, I could think of just storing the raw `Time.now.to_f` and handling all date/time conversions in the applications which would access the db. But this seems like a bit of overhead on the application development part, and if somewhere someone in some library forgets to convert it to UTC, it will be screwed up. So maybe someone had figured it out already?\n\nThx, Peter\n"
  , issueState = "closed"
  , issueId = Id 75549779
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }