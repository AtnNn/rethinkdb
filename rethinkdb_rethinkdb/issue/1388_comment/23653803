IssueComment
  { issueCommentUpdatedAt = 2013 (-09) (-02) 11 : 03 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/23653803"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1388#issuecomment-23653803"
  , issueCommentCreatedAt = 2013 (-09) (-02) 11 : 03 : 19 UTC
  , issueCommentBody =
      "We shouldn't make it possible to send queries that take forever and then have no way to interrupt them.  That would be like making there be no way to kill a unix process, we'd have a big \"bring down the system with a bad query\" button.  The only way to fix things at that point would be to kill the parser node.\r\n\r\nClosing a connection shouldn't return until all queries have finished executing.\r\n\r\nThis only requires user-visible changes in the Javascript driver.  The Javascript driver's `close` method should take a callback (possibly optional), where omitting the callback and calling `.close()` should have the same background behavior (of waiting for all running noreply queries to finish before closing the TCP connection).  If you exited the process after `.close` without waiting for the callback then you'd be in trouble.  (It would also might be a nice-to-have for Javascript developers in general, if they want to close a connection but wait for pending queries.)\r\n\r\nNoreply is not a normal feature to use and people using it (just the ones that use Javascript) should have to apply special knowledge about closing the connection safely.\r\n"
  , issueCommentId = 23653803
  }