IssueComment
  { issueCommentUpdatedAt = 2013 (-09) (-03) 01 : 19 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/23685072"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1388#issuecomment-23685072"
  , issueCommentCreatedAt = 2013 (-09) (-03) 01 : 19 : 45 UTC
  , issueCommentBody =
      "I think in a production database it's a pretty reasonable expectation that the database will never let you get in a situation where you have a runaway job and no way to kill it. @mlucy it seems like not only does your proposal do that it seems like it makes it likely you'll do that by default. These cases might be rare but you can get so completely screwed by a runaway job that I think we need to make the API reflect this. We don't ever want to have to tell someone \"you need to take down your database to fix this problem.\" I think the best solution here would be to add a `sync` method which makes sure noreply writes have completed and call this by default in the `close` method. I'm really really unease with giving people a way to create runaway jobs even if it's rare."
  , issueCommentId = 23685072
  }