Issue
  { issueClosedAt = Just 2013 (-05) (-15) 22 : 08 : 44 UTC
  , issueUpdatedAt = 2013 (-05) (-20) 22 : 44 : 14 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/796/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/796"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 796
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crash when running traffic to a table while resharding: Assertion failed: [region_is_superset(region, write.get_region())]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/796"
  , issueCreatedAt = 2013 (-05) (-14) 00 : 01 : 23 UTC
  , issueBody =
      Just
        "Was running the python stress client with the following parameters:\n\n```\n./stress.py --host newton:59435 --host newton:59436 --host newton:59437 --add-sindex simple --add-sindex constant --add-sindex long --timeout 2000 --workload 1/0/0/0\n```\n\nStarted the cluster, started the stress client, then resharded the table a few times.  Walked away for a few minutes, and when I came back one of the servers had crashed with:\n\n``` c\nVersion: rethinkdb 1.4.5-1380-ge661f8 (debug) (GCC 4.6.1)\nerror: Error in ../src/clustering/immediate_consistency/query/master_access.cc at line 101:\nerror: Assertion failed: [region_is_superset(region, write.get_region())] \nerror: Backtrace:\nerror: Mon May 13 15:43:08 2013\n\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\n       3: format_backtrace(bool) at backtrace.cc:197\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:71\n       5: master_access_t<rdb_protocol_t>::write(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*) at master_access.cc:101\n       6: void cluster_namespace_interface_t<rdb_protocol_t>::perform_immediate_op<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t, rdb_protocol_t::write_response_t>(void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*) at namespace_interface.cc:156\n       7: boost::_mfi::mf7<void, cluster_namespace_interface_t<rdb_protocol_t>, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*>::operator()(cluster_namespace_interface_t<rdb_protocol_t>*, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*) const at mem_fn_template.hpp:845\n       8: void boost::_bi::list8<boost::_bi::value<cluster_namespace_interface_t<rdb_protocol_t>*>, boost::_bi::value<void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*)>, boost::_bi::value<boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*>, boost::_bi::value<std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*>, boost::_bi::value<std::vector<std::string, std::allocator<std::string> >*>, boost::_bi::value<order_token_t>, boost::arg<1>, boost::_bi::value<signal_t*> >::operator()<boost::_mfi::mf7<void, cluster_namespace_interface_t<rdb_protocol_t>, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*>, boost::_bi::list1<int&> >(boost::_bi::type<void>, boost::_mfi::mf7<void, cluster_namespace_interface_t<rdb_protocol_t>, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*> const&, boost::_bi::list1<int&>&, int) const at bind.hpp:752\n       9: void boost::_bi::bind_t<void, boost::_mfi::mf7<void, cluster_namespace_interface_t<rdb_protocol_t>, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*>, boost::_bi::list8<boost::_bi::value<cluster_namespace_interface_t<rdb_protocol_t>*>, boost::_bi::value<void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*)>, boost::_bi::value<boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*>, boost::_bi::value<std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*>, boost::_bi::value<std::vector<std::string, std::allocator<std::string> >*>, boost::_bi::value<order_token_t>, boost::arg<1>, boost::_bi::value<signal_t*> > >::operator()<int>(int&) const at bind_template.hpp:39\n       10: pmap_runner_one_arg_t<boost::_bi::bind_t<void, boost::_mfi::mf7<void, cluster_namespace_interface_t<rdb_protocol_t>, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*>, boost::_bi::list8<boost::_bi::value<cluster_namespace_interface_t<rdb_protocol_t>*>, boost::_bi::value<void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*)>, boost::_bi::value<boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*>, boost::_bi::value<std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*>, boost::_bi::value<std::vector<std::string, std::allocator<std::string> >*>, boost::_bi::value<order_token_t>, boost::arg<1>, boost::_bi::value<signal_t*> > >, int>::operator()() at pmap.hpp:20\n       11: callable_action_instance_t<pmap_runner_one_arg_t<boost::_bi::bind_t<void, boost::_mfi::mf7<void, cluster_namespace_interface_t<rdb_protocol_t>, void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*), boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*, std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*, std::vector<std::string, std::allocator<std::string> >*, order_token_t, int, signal_t*>, boost::_bi::list8<boost::_bi::value<cluster_namespace_interface_t<rdb_protocol_t>*>, boost::_bi::value<void (master_access_t<rdb_protocol_t>::*)(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, order_token_t, fifo_enforcer_sink_t::exit_write_t*, signal_t*)>, boost::_bi::value<boost::ptr_vector<cluster_namespace_interface_t<rdb_protocol_t>::immediate_op_info_t<rdb_protocol_t::write_t, fifo_enforcer_sink_t::exit_write_t>, boost::heap_clone_allocator, std::allocator<void*> >*>, boost::_bi::value<std::vector<rdb_protocol_t::write_response_t, std::allocator<rdb_protocol_t::write_response_t> >*>, boost::_bi::value<std::vector<std::string, std::allocator<std::string> >*>, boost::_bi::value<order_token_t>, boost::arg<1>, boost::_bi::value<signal_t*> > >, int> >::run_action() at runtime_utils.hpp:58\n       12: callable_action_wrapper_t::run() at runtime_utils.cc:67\n       13: coro_t::run() at coroutines.cc:178\n```\n\nThe table had approximately 13k rows and 5 shards on a cluster of 3 machines when the crash was observed.\n"
  , issueState = "closed"
  , issueId = Id 14287965
  , issueComments = 10
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-05) (-15) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 8
          , milestoneClosedIssues = 183
          , milestoneDescription =
              Just "Issues that are absolutely necessary for 1.5."
          , milestoneTitle = "1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/8"
          , milestoneCreatedAt = 2013 (-03) (-20) 02 : 06 : 44 UTC
          , milestoneState = "closed"
          }
  }