IssueComment
  { issueCommentUpdatedAt = 2013 (-09) (-06) 01 : 44 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/23914020"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1403#issuecomment-23914020"
  , issueCommentCreatedAt = 2013 (-09) (-06) 01 : 44 : 29 UTC
  , issueCommentBody =
      "Here are my thoughts on rapidjson and yajl:\r\n\r\nrapidjson's bug list is concerning.  For example, it literally only prints 6 significant digits when printing doubles; this isn't an edge case, it's policy.  (This will break our times API.)  We could fix this ourselves, but it doesn't inspire confidence in the code.  yajl has a handful of concerning issues too, but they're all in the tree parsing, which we don't plan to use.\r\n\r\nYajl seems to be more stable; rapidjson hasn't hit its 1.0 release yet.  (On the other hand, yajl hasn't seen a release in like a year.  (On the other other hand, a year without anyone opening serious bugs related to the SAX-style parser is a pretty good track record.))\r\n\r\nrapidjson also doesn't seem to have documentation -- just a half-completed wiki, and literally no documentation on the SAX-style API, which is what I think we'd want to use.  yajl's documentation is skimpy but complete.\r\n\r\nrapidjson is much faster (like, a factor of 5).  It's also header-only, which is really convenient.\r\n\r\nYajl is slightly larger -- 3.7k compared to 2.7k for rapidjson.  I think this is a wash.\r\n\r\nI like yajl's code a lot better.  rapidjson is highly-templatized C++ with a lot of speed hacks, while yajl made me happy.\r\n\r\nI think that of the two, I would prefer yajl.\r\n\r\nAnother option is JsonCPP.  People like it, and it inspires mild confidence (although I can't find an issue tracker for it), but it seems heavier-weight and doesn't offer SAX-style parsing.\r\n"
  , issueCommentId = 23914020
  }