IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-01) 23 : 30 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/107746551"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4308#issuecomment-107746551"
  , issueCommentCreatedAt = 2015 (-06) (-01) 23 : 30 : 29 UTC
  , issueCommentBody =
      "I just stumbled across [`node-re2`](https://github.com/uhop/node-re2) which allows you to construct RE2 expressions by passing in a native `RegExp`. If you look at his [implementation (link)](https://github.com/uhop/node-re2/blob/master/lib/new.cc#L26-L91) it looks like the only cases he handles are translating `\\u` and `\\c` to `\\x`. Assuming these are the only cases we need to handle and RE2 on the server will just bomb out on any unsupported syntax (ex. backreferences as @deontologician  pointed out) I think we can handle these two translations transparently and call it a day."
  , issueCommentId = 107746551
  }