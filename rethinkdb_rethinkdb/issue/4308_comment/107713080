IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-01) 21 : 09 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/107713080"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4308#issuecomment-107713080"
  , issueCommentCreatedAt = 2015 (-06) (-01) 21 : 09 : 03 UTC
  , issueCommentBody =
      "Thanks for the idea and for submitting a pull request for this @marshall007 .\r\n\r\nI'm quite sceptical about the interface because of the different syntax though. If native regular expressions are accepted, I think users will assume that `r.match` also interprets them in the same way as the native environment does. And it sounds like that might not always be the case.\r\n\r\nIf we can make reasonably sure that we will only ever *reject* an otherwise valid regexp but never yield a *different* result I would be fine with this though."
  , issueCommentId = 107713080
  }