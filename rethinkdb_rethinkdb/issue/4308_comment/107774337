IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-02) 02 : 21 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/107774337"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4308#issuecomment-107774337"
  , issueCommentCreatedAt = 2015 (-06) (-02) 02 : 21 : 46 UTC
  , issueCommentBody =
      "@marshall007 \r\n> @danielmewes so you're saying when the user passes in a native regex containing syntax that is unsupported in RE2 we somehow detect that and throw? That sounds tricky to implement on the client without just hard-coding in a bunch of explicit checks for known conflicts. Did you have any thoughts on how we might go about this?\r\n\r\nI don't have any great ideas, but mostly because I don't know much about the differences between RE2 and standard JS regexes.\r\nAssuming `node-re2` is reasonably complete and those are the only types of rewriting that we need to do, that doesn't sound too bad."
  , issueCommentId = 107774337
  }