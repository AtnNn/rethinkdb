IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-01) 22 : 22 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/107734672"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4308#issuecomment-107734672"
  , issueCommentCreatedAt = 2015 (-06) (-01) 22 : 22 : 23 UTC
  , issueCommentBody =
      "> If we can make reasonably sure that we will only ever reject an otherwise valid regexp but never yield a different result I would be fine with this though.\r\n\r\n@danielmewes so you're saying when the user passes in a native regex containing syntax that is unsupported in RE2 we somehow detect that and throw? That sounds tricky to implement on the client without just hard-coding in a bunch of explicit checks for known conflicts. Did you have any thoughts on how we might go about this?"
  , issueCommentId = 107734672
  }