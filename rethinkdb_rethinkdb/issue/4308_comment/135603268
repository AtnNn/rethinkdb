IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-28) 01 : 58 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135603268"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4308#issuecomment-135603268"
  , issueCommentCreatedAt = 2015 (-08) (-28) 01 : 58 : 40 UTC
  , issueCommentBody =
      "Ok, so it turns out that backreferences are actually a type (1) case. When I first saw `SyntaxError: Octal literals are not allowed in strict mode.` I assumed it was RE2 complaining about unsupported syntax, but as mentioned above, it's really coming from JS.\r\n\r\nWhat's interesting is that you'd only ever encounter this exception when running in the data explorer due to how the query gets `eval`'d.\r\n\r\nThis means we would definitely need to detect backreferences and throw an error like @deontologician suggested. Currently, (and assuming you're not using the data explorer) backreferences get passed through and interpreted as octal literal by RE2."
  , issueCommentId = 135603268
  }