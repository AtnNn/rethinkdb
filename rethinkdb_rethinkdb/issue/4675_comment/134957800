IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-26) 11 : 37 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 26637
        , simpleUserLogin = N "soplakanets"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/26637?v=3"
        , simpleUserUrl = "https://api.github.com/users/soplakanets"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/134957800"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4675#issuecomment-134957800"
  , issueCommentCreatedAt = 2015 (-08) (-26) 11 : 37 : 03 UTC
  , issueCommentBody =
      "I just had a similar issue with running `r.db('db').table('table').delete()`, effectively deleting all data from a large collection (2M+ records). This time the error is different, but still had a server crash. Here is all the info from logfile:\r\n\r\n```\r\n2015-08-26T07:33:33.876239129 84846.890462s error: Error in src/rdb_protocol/lazy_json.cc at line 22:\r\n2015-08-26T07:33:33.877062396 84846.891285s error: Guarantee failed: [res == archive_result_t::SUCCESS] Deserialization of rdb va\r\nlue failed with error archive_result_t::RANGE_ERROR.\r\n2015-08-26T07:33:33.877088609 84846.891311s error: Backtrace:\r\n2015-08-26T07:33:34.412469472 84847.426696s error: Wed Aug 26 07:33:33 2015\\n\\n1: backtrace_t::backtrace_t() at ??:?\\n2: format_b\r\nacktrace(bool) at ??:?\\n3: report_fatal_error(char const*, int, char const*, ...) at ??:?\\n4: get_data(rdb_value_t const*, buf_pa\r\nrent_t) at ??:?\\n5: lazy_json_t::get() const at ??:?\\n6: rget_cb_t::handle_pair(scoped_key_value_t&&, concurrent_traversal_fifo_e\r\nnforcer_signal_t) at ??:?\\n7: concurrent_traversal_adapter_t::handle_pair_coro(scoped_key_value_t*, semaphore_acq_t*, fifo_enforc\r\ner_write_token_t, auto_drainer_t::lock_t) at ??:?\\n8: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (concurrent_traversal_adapter_t::*)(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> (concurrent_traversal_adapter_t*, scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> >::run_action() at ??:?\\n9: coro_t::run() at ??:?\r\n2015-08-26T07:33:34.412617835 84847.426840s error: Exiting.\r\n```"
  , issueCommentId = 134957800
  }