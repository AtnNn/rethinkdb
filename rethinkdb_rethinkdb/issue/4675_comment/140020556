IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-14) 09 : 49 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1188497
        , simpleUserLogin = N "Bacto"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1188497?v=3"
        , simpleUserUrl = "https://api.github.com/users/Bacto"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/140020556"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4675#issuecomment-140020556"
  , issueCommentCreatedAt = 2015 (-09) (-14) 09 : 49 : 17 UTC
  , issueCommentBody =
      "Hi guys,\r\n\r\nFirst I would like to thank you for the amazing work you do on RethinkDB! I love it!\r\n\r\nUnfortunately I have RethinkDB 2.1.3 and I have a similar bug.\r\n\r\nI have a cluster of 2 servers but the table I have a problem with is only on one server.\r\nWhen I try to delete all the datas (~2M documents) of this table, the server crash.\r\nThere is no other access on this table during the crash.\r\n\r\n```\r\nr.db('test').table('maxMindBlocksIPv4').delete()\r\n```\r\n\r\n```\r\n2015-09-13T15:28:19.198159460 197.522587s error: Error in src/arch/runtime/thread_pool.cc at line 359:\r\n2015-09-13T15:28:19.264949298 197.589377s error: Segmentation fault from reading the address 0x7f018563ff76.\r\n2015-09-13T15:28:19.302892953 197.627320s error: Backtrace:\r\n2015-09-13T15:28:20.187061917 198.511491s error: Sun Sep 13 15:28:19 2015\\n\\n1: backtrace_t::backtrace_t() at ??:?\\n2: format_backtrace(bool) at ??:?\\n3: report_fatal_error(char const*, int, char const*, ...) at ??:?\\n4: linux_thread_pool_t::fatal_signal_handler(int, siginfo_t*, void*) at ??:?\\n5: /lib/x86_64-linux-gnu/libpthread.so.0(+0x10340) [0x7f02eea29340] at 0x7f02eea29340 (/lib/x86_64-linux-gnu/libpthread.so.0)\\n6: /lib/x86_64-linux-gnu/libc.so.6(+0x1524d4) [0x7f02ee7a54d4] at 0x7f02ee7a54d4 (/lib/x86_64-linux-gnu/libc.so.6)\\n7: leaf::garbage_collect(value_sizer_t*, leaf_node_t*, int, int*, boost::optional<int>) at ??:?\\n8: leaf::move_elements(value_sizer_t*, leaf_node_t*, int, int, int, leaf_node_t*, int, int, std::vector<void const*, std::allocator<void const*> >*) at ??:?\\n9: leaf::level(value_sizer_t*, int, leaf_node_t*, leaf_node_t*, btree_key_t*, std::vector<void const*, std::allocator<void const*> >*) at ??:?\\n10: check_and_handle_underfull(value_sizer_t*, buf_lock_t*, buf_lock_t*, superblock_t*, btree_key_t const*, value_deleter_t const*) at ??:?\\n11: apply_keyvalue_change(value_sizer_t*, keyvalue_location_t*, btree_key_t const*, repli_timestamp_t, value_deleter_t const*, key_modification_callback_t*, delete_mode_t) at ??:?\\n12: kv_location_delete(keyvalue_location_t*, store_key_t const&, repli_timestamp_t, deletion_context_t const*, delete_mode_t, rdb_modification_info_t*) at ??:?\\n13: rdb_replace_and_return_superblock(btree_loc_info_t const&, btree_point_replacer_t const*, deletion_context_t const*, promise_t<superblock_t*>*, rdb_modification_info_t*, profile::trace_t*) at ??:?\\n14: do_a_replace_from_batched_replace(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*) at ??:?\\n15: std::_Function_handler<void (), std::_Bind<void (*(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t, btree_loc_info_t, one_replace_t, ql::configured_limits_t, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*))(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*)> >::_M_invoke(std::_Any_data const&) at ??:?\\n16: coro_pool_t<std::function<void ()> >::worker_run(std::function<void ()>, auto_drainer_t::lock_t) at ??:?\\n17: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)> >::run_action() at ??:?\\n18: coro_t::run() at ??:?\r\n2015-09-13T15:28:20.248535860 198.572963s error: Exiting.\r\n```\r\n\r\nAn other example:\r\n```\r\n2015-09-13T15:50:39.321047629 1298.095524s error: Error in src/buffer_cache/alt.cc at line 718:\r\n2015-09-13T15:50:39.360596908 1298.135073s error: Guarantee failed: [ret != repli_timestamp_t::invalid]\r\n2015-09-13T15:50:39.398113181 1298.172589s error: Backtrace:\r\n2015-09-13T15:50:40.017122232 1298.791599s error: Sun Sep 13 15:50:39 2015\\n\\n1: backtrace_t::backtrace_t() at ??:?\\n2: format_backtrace(bool) at ??:?\\n3: report_fatal_error(char const*, int, char const*, ...) at ??:?\\n4: buf_lock_t::get_recency() const at ??:?\\n5: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\\n6: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\\n7: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\\n8: btree_depth_first_traversal(counted_t<counted_buf_lock_and_read_t>, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, btree_key_t const*, btree_key_t const*, signal_t*) at ??:?\\n9: btree_depth_first_traversal(superblock_t*, key_range_t const&, depth_first_traversal_callback_t*, access_t, direction_t, release_superblock_t, signal_t*) at ??:?\\n10: btree_concurrent_traversal(superblock_t*, key_range_t const&, concurrent_traversal_callback_t*, direction_t, release_superblock_t) at ??:?\\n11: rdb_rget_slice(btree_slice_t*, key_range_t const&, superblock_t*, ql::env_t*, ql::batchspec_t const&, std::vector<boost::variant<ql::map_wire_func_t, ql::group_wire_func_t, ql::filter_wire_func_t, ql::concatmap_wire_func_t, ql::distinct_wire_func_t, ql::zip_wire_func_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, std::allocator<boost::variant<ql::map_wire_func_t, ql::group_wire_func_t, ql::filter_wire_func_t, ql::concatmap_wire_func_t, ql::distinct_wire_func_t, ql::zip_wire_func_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > > const&, boost::optional<boost::variant<ql::count_wire_func_t, ql::sum_wire_func_t, ql::avg_wire_func_t, ql::min_wire_func_t, ql::max_wire_func_t, ql::reduce_wire_func_t, ql::limit_read_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > const&, sorting_t, rget_read_response_t*, release_superblock_t) at ??:?\\n12: do_read(ql::env_t*, store_t*, btree_slice_t*, real_superblock_t*, rget_read_t const&, rget_read_response_t*, release_superblock_t) at ??:?\\n13: rdb_read_visitor_t::operator()(rget_read_t const&) at ??:?\\n14: store_t::protocol_read(read_t const&, read_response_t*, real_superblock_t*, signal_t*) at ??:?\\n15: store_t::read(read_t const&, read_response_t*, read_token_t*, signal_t*) at ??:?\\n16: replica_t::do_read(read_t const&, state_timestamp_t, signal_t*, read_response_t*) at ??:?\\n17: primary_dispatcher_t::read(read_t const&, fifo_enforcer_sink_t::exit_read_t*, order_token_t, signal_t*, read_response_t*) at ??:?\\n18: primary_execution_t::on_read(read_t const&, fifo_enforcer_sink_t::exit_read_t*, order_token_t, signal_t*, read_response_t*, admin_err_t*) at ??:?\\n19: primary_query_server_t::client_t::perform_request(boost::variant<primary_query_bcard_t::read_request_t, primary_query_bcard_t::write_request_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const&, signal_t*) at ??:?\\n20: multi_client_server_t<boost::variant<primary_query_bcard_t::read_request_t, primary_query_bcard_t::write_request_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, primary_query_server_t*, primary_query_server_t::client_t>::client_t::on_request(signal_t*, boost::variant<primary_query_bcard_t::read_request_t, primary_query_bcard_t::write_request_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const&) at ??:?\\n21: mailbox_t<void (boost::variant<primary_query_bcard_t::read_request_t, primary_query_bcard_t::write_request_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>)>::read_impl_t::read(read_stream_t*, signal_t*) at ??:?\\n22: /usr/bin/rethinkdb() [0x944a02] at 0x944a02 ()\\n23: coro_t::run() at ??:?\r\n2015-09-13T15:50:40.069366756 1298.843842s error: Exiting.\r\n```\r\n\r\nr.db('test').table('maxMindBlocksIPv4').config():\r\n```\r\n{\r\n\"db\":  \"test\" ,\r\n\"durability\":  \"hard\" ,\r\n\"id\":  \"5f369b90-ab69-4b8e-b2e1-a8d4209477c8\" ,\r\n\"indexes\": [\r\n\"toDelete\"\r\n] ,\r\n\"name\":  \"maxMindBlocksIPv4\" ,\r\n\"primary_key\":  \"id\" ,\r\n\"shards\": [\r\n{\r\n\"nonvoting_replicas\": [ ],\r\n\"primary_replica\":  \"s1\" ,\r\n\"replicas\": [\r\n\"s1\"\r\n]\r\n}\r\n] ,\r\n\"write_acks\":  \"majority\"\r\n}\r\n```\r\n\r\nrethinkdb --version\r\n```\r\nrethinkdb 2.1.3~0trusty (GCC 4.8.2)\r\n```\r\n\r\nI run the server on Linux 3.16.3, Ubuntu 14.04.1 and had install RethinkDB from deb packages.\r\n\r\nIf you need more informations or a copy of the table, just let me know.\r\n\r\nThanks,\r\nAdrien"
  , issueCommentId = 140020556
  }