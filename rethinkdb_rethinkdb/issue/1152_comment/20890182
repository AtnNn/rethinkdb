IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-12) 17 : 11 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20890182"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1152#issuecomment-20890182"
  , issueCommentCreatedAt = 2013 (-07) (-12) 17 : 11 : 38 UTC
  , issueCommentBody =
      "One more thing that would be really nice if we update `eqJoin` would be to enforce that we find just one match on the right sequence (`hasOne` relation).\r\n\r\nIf I do an `eqJoin` on the primary id, then that's cool, but if I use a secondary index, I somehow have no guarantee that I'll just get one document back.\r\n\r\nI think I talk at some point with @jdoliner and he told me that it would be hard to enforce unique values in the secondary index, so if we can have a flag in `eqJoin` to throw in case more than one match is found, it would be really nice.\r\n\r\nNow I have to use an inner query and a `r.branch` (two if I want an outerJoin behavior), which is not really pretty.\r\n"
  , issueCommentId = 20890182
  }