Issue
  { issueClosedAt = Just 2015 (-11) (-17) 01 : 23 : 01 UTC
  , issueUpdatedAt = 2015 (-11) (-17) 21 : 19 : 43 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5043/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5043"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Python"
          , labelName = "Python"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 5043
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1048079
        , simpleUserLogin = N "danielnelson"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1048079?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielnelson"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "ConnectionInstance._reader() Task was destroyed but it is pending"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5043"
  , issueCreatedAt = 2015 (-11) (-06) 00 : 02 : 37 UTC
  , issueBody =
      Just
        "The code below produces an warning from asyncio.\r\n```\r\n$ cat test.py\r\n#!/usr/bin/env python\r\nimport asyncio\r\nimport rethinkdb as r\r\n\r\nasync def stuff():\r\n    conn = await r.connect()\r\n    await conn.close()\r\n\r\nr.set_loop_type(\"asyncio\")\r\nloop = asyncio.get_event_loop()\r\ntask = loop.create_task(stuff())\r\nloop.run_until_complete(task)\r\n$ python test.py\r\nTask was destroyed but it is pending!\r\ntask: <Task pending coro=<ConnectionInstance._reader() running at lib/python3.5/site-packages/rethinkdb/net_asyncio.py:218> wait_for=<Future finished result=None>>\r\n```\r\n\r\nIf I run another cycle of the loop by adding a second call to `run_until_complete`, then there is no warning.  Perhaps `ConnectionInstance.close()` should yield from its `self._reader_task` before returning?\r\n"
  , issueState = "closed"
  , issueId = Id 115404281
  , issueComments = 10
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-11) (-17) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 111
          , milestoneClosedIssues = 10
          , milestoneDescription = Just ""
          , milestoneTitle = "2.2.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/111"
          , milestoneCreatedAt = 2015 (-11) (-16) 22 : 50 : 00 UTC
          , milestoneState = "closed"
          }
  }