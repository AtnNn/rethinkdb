IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-09) 23 : 15 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/17695782"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/715#issuecomment-17695782"
  , issueCommentCreatedAt = 2013 (-05) (-09) 23 : 15 : 55 UTC
  , issueCommentBody =
      "This seems like a question of client behavior more than server behavior.  The server should obviously take a boolean.\r\n\r\nThe Ruby client has to look at the value of `noreply` in its option hash and decide whether to wait for a response.  So it follows the Ruby convention as to what means true and what means false (it would be **very** confusing otherwise).  It then turns this into a bool and sends the bool to the server, because the server shouldn't be encoding Ruby semantics -- I would guess that Python and JS have different rules about what means false.\r\n\r\nWe could be more strict here and require that users pass a boolean, but this would be irritating because it's fairly common to use `nil` to mean `don't do this` or `false` or `doesn't exist` and Ruby users would have to be casting it to a bool themselves if they're programatically generating the value of `noreply` in the option hash."
  , issueCommentId = 17695782
  }