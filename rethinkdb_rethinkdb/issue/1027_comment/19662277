IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 04 : 19 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 34433
        , simpleUserLogin = N "fuwaneko"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/34433?v=3"
        , simpleUserUrl = "https://api.github.com/users/fuwaneko"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19662277"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1027#issuecomment-19662277"
  , issueCommentCreatedAt = 2013 (-06) (-19) 04 : 19 : 34 UTC
  , issueCommentBody =
      "@Raynos Of course binary dependencies has some problems. But it all depends on what you want. As we say in Russia: do you want a taxi or do you want to go for a ride? Meaning it really does not matter what you use as long as it gives you what you want. For small apps it's okay to use current driver with pure JS driver. For our app it's not and we are fine with what you said: compiling on every dev's machine and in production environment. It's not that hard to do in this case (really, it's not!) and we still get what we want: performance.\r\n\r\n> In most situations the serialization to and from the database is going to be insignificant compared to the latency, network and server-side querying costs.\r\n\r\nI don't think so. Our app boosted it's performance after I switched to my modification of the driver. It clearly was a problem with slow serialization. If you have a bottleneck somewhere it's still a bottleneck and you will have to do something with it sooner o later. It would be very awful to find out that what seemed small and insignificant at the beginning turned out to be a huge problem when you scale and when you don't have time to solve it.\r\n\r\nAnd as I said already it's probably impossible to make pure JS protobuf fast.\r\n\r\n> Having the ability to remove the binary dependency and still having the node driver work is a win though\r\n\r\nThat's what we have now. We're just talking about very-very bad pure JS driver performance (so bad it's visible even w/o profiler as your app eats 100% CPU time under small load), and for now only possible solution is binary dependency. Maybe we're talking about different scale, as I said for *really* small projects current driver is ok."
  , issueCommentId = 19662277
  }