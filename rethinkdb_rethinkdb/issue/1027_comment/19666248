IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 07 : 00 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19666248"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1027#issuecomment-19666248"
  , issueCommentCreatedAt = 2013 (-06) (-19) 07 : 00 : 45 UTC
  , issueCommentBody =
      "> We're just talking about very-very bad pure JS driver performance (so bad it's visible even w/o profiler as your app eats 100% CPU time under small load)\r\n\r\nTo be fair, this doesn't have anything at all to do with javascript, it's just that the native javascript protocol buffer serializer uses an O(N^2) algorithm. A good native javascript protobuf serializer may be slower than C++, but it will still be orders of magnitude faster than the naive implementation.\r\n\r\nI'll discuss the options with @wmrowan face-to-face, but so far it looks like the best option (meaning satisfied customers and can be shipped quickly) is to have the JS driver support two separate protobuf backends (one for browser, one fast one for node)."
  , issueCommentId = 19666248
  }