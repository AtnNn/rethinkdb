IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 17 : 36 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19700152"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1027#issuecomment-19700152"
  , issueCommentCreatedAt = 2013 (-06) (-19) 17 : 36 : 43 UTC
  , issueCommentBody =
      "> a pure JS library that could work in both environments would be almost as fast as a native extension\r\n\r\n@fuwaneko I think that quote was taken out of context. I was saying that this would be true in an ideal world but that it isn't very likely to be the case in the real one. Still, with enough effort, I don't see a reason why a pure JS library couldn't get close to the speed of a native version. From what I can tell though the pure JS protobuf libs out there are not even feature complete, let alone highly optimized.\r\n\r\nFor now it'll probably be easiest to support two separate backends. I like what you did with the JS protobuf wrapper. The quickest solution to this issue would probably be to augment the current driver with that as an optional backend for those who don't mind compiling it and need the extra speed. It would mean delaying the removal of closure until we find an appropriate alternative pure JS lib but would get the speedy backend into the hands of users more quickly."
  , issueCommentId = 19700152
  }