IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-15) 19 : 18 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55643496"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2678#issuecomment-55643496"
  , issueCommentCreatedAt = 2014 (-09) (-15) 19 : 18 : 25 UTC
  , issueCommentBody =
      "I don't see any reason why this wouldn't work well with auto-failover.\r\n\r\nWriting to a table never causes a vector clock conflict. In `next`, vector clock conflicts are only relevant when writing to the semilattice metadata. In `reql_admin`, vector clocks have been removed completely.\r\n\r\nThe only difference between `immediate` writes and `quorum` writes is when the server sends an acknowledgement to the client. For an `immediate` write, it responds as soon as the write is stored on disk in at least one server. For `quorum` writes, it responds when the write is stored on disk in the majority of servers. Other than that, the two types of writes use exactly the same code path."
  , issueCommentId = 55643496
  }