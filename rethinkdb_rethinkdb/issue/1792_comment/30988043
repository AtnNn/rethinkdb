IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-20) 04 : 19 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/30988043"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1792#issuecomment-30988043"
  , issueCommentCreatedAt = 2013 (-12) (-20) 04 : 19 : 01 UTC
  , issueCommentBody =
      "You're right that this currently isn't possible (or at least isn't easy) in RethinkDB. This will eventually be fixed, but there is a really good reason for the way things are right now.\r\n\r\nDesigning an automatically managed sharding/replication system is notoriously difficult. There is no perfect system that will work 100% of the time without human intervention. So we decided to design a lower level system that will do sharding and replication on command, and expose a simple way of using it to users.\r\n\r\nNow that this system is in place (and getting more mature in preparation for the LTS release) we'll soon be in a position to write a higher level component to automate some of these operations. There are multiple ways to do it -- for example, we can offer settings on a database level, or let an administrator set general metrics (i.e. shard a table if some conditions are met, etc.) However, this functionality is likely six months away (or more).\r\n\r\nIn the meantime, you can shard and replicate programmatically by using `rethinkdb admin`. You can write scripts to perform sharding and replication operations when certain conditions are met. We don't make it easy (for example, there is currently no well documented monitoring API -- see #1392), but it can be done with some effort.\r\n\r\nThis is bubbling up against high end use cases, and unfortunately Rethink isn't quite ready for that. If I had to guess, I'd say this will be bulletproof about a year from now.\r\n\r\nMoving to backlog."
  , issueCommentId = 30988043
  }