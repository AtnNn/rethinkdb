IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-18) 21 : 08 : 31 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/40844687"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2274#issuecomment-40844687"
  , issueCommentCreatedAt = 2014 (-04) (-18) 21 : 08 : 31 UTC
  , issueCommentBody =
      "There's only one serializer thread per table, but 8 cache threads. It is unlikely that just one of the caches of a single table gets most of the memory assigned by the cache balancer (unless DoS or a highly uneven key access distribution).\r\n\r\nGenerally, allocating memory on the cache's thread is good because that's where it is accessed from most often. So it will be faster than simply switching the allocation strategy to \"interleaved\" (where memory will be evenly allocated from all NUMA nodes round robin or something similar). The advantage of using the interleaved strategy is that we won't have problems with corner cases such as unevenly distributed cache sizes.\r\n\r\n@srh: Is jemalloc supposed to use less memory in general? Or does it actually do something about the problem of a single NUMA node running out of RAM while others have plenty free?"
  , issueCommentId = 40844687
  }