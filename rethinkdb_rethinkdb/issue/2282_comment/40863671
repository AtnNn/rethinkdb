IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-19) 08 : 05 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 297060
        , simpleUserLogin = N "nviennot"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/297060?v=3"
        , simpleUserUrl = "https://api.github.com/users/nviennot"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/40863671"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/2282#issuecomment-40863671"
  , issueCommentCreatedAt = 2014 (-04) (-19) 08 : 05 : 17 UTC
  , issueCommentBody =
      "Hurm. I'm reading a bit about to_json/as_json and rails 4.1\r\n\r\nhttps://github.com/ohler55/oj#rails\r\nhttps://github.com/rails/rails/pull/12183\r\n\r\nI'm not sure what's going on. The whole json thing appears to be a shitshow. Maybe @chancancode could give us some insights and tell us what's the best approach.\r\nApparently, Rails 4.1 stopped using multi_json, but it's still doing some funky stuff.\r\nAlso sidekiq also removed its dependency from multi_json: https://github.com/mperham/sidekiq/issues/1070#issuecomment-21499453\r\n\r\nOkay, so stay away from multi_json :) keep using the pure json lib.\r\n\r\nAlso, this sort of hacks: https://github.com/rethinkdb/rethinkdb/blob/next/drivers/ruby/lib/shim.rb#L67-L83 is not a good idea. 1) It's not thread safe 2) bad performance: this invalidates ruby's method cache."
  , issueCommentId = 40863671
  }