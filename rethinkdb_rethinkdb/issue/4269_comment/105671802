IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-26) 21 : 37 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/105671802"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/4269#issuecomment-105671802"
  , issueCommentCreatedAt = 2015 (-05) (-26) 21 : 37 : 19 UTC
  , issueCommentBody =
      "It definitely is \"most cases\". The vast majority of functions have free variables. And most functions in a query use reql. But functions passed to r.js can neither have free variables nor can they use ReQL.\r\n\r\nI believe the small convenience this adds does not outweigh the complexity that it adds to the API and its documentation. It can instead easily be implemented elsewhere as a one-liner.\r\n\r\nFunctions passed to ReQL already have semantics and restrictions that are hard to understand. This change introduces another type of function that can be used in ReQL, but with very different restrictions.\r\n\r\nRethinkDB error messages are not good enough to help debug errors that could be caused by the misuse of this feature."
  , issueCommentId = 105671802
  }