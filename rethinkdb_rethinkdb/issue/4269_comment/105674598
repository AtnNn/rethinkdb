IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-26) 21 : 43 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/105674598"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/4269#issuecomment-105674598"
  , issueCommentCreatedAt = 2015 (-05) (-26) 21 : 43 : 18 UTC
  , issueCommentBody =
      "I agree with @AtnNn. For example, with our native functions -> reql trick one can write:\r\n```js\r\nvar x = 1;\r\nr.table(...)(\"score\").map(function(y) { return x + y; })...\r\n```\r\nBut this won't work for a function passed to `r.js()`. I think this is likely to be very confusing.\r\n\r\nAlso, there are already enough people confused about how our query evaluation works, because it looks like it's being executed client-side but it's actually being executed server-side. Let's not make it worse by adding something else that looks like it's being executed client side but is actually being executed server-side, but with different semantics and corner cases."
  , issueCommentId = 105674598
  }