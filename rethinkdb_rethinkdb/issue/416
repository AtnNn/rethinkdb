Issue
  { issueClosedAt = Just 2015 (-10) (-20) 19 : 35 : 48 UTC
  , issueUpdatedAt = 2015 (-11) (-10) 02 : 01 : 29 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/416/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/416"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Python"
          , labelName = "Python"
          }
      , IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:hygiene"
          , labelName = "tp:hygiene"
          }
      ]
  , issueNumber = 416
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 7431361
          , simpleUserLogin = N "larkost"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/7431361?v=3"
          , simpleUserUrl = "https://api.github.com/users/larkost"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Bring python driver up to python standards"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/416"
  , issueCreatedAt = 2013 (-03) (-07) 01 : 09 : 05 UTC
  , issueBody =
      Just
        "The new python driver has several things that look very strange to me as a python programmer. The following things in particular:\r\n\r\n- There's no documentation, this means that the standard python methods of calling `help(...)` don't work at all and repl's such as BPython don't offer any help.\r\n\r\n- it leaks a lot of its internal structures on import. We have a pretty common pattern in it that we have a class to represent an AST node and then a function which instantiates that class. It's very confusing to see both `r.db` and `r.DB` especially since neither has any documentation. This is also bad because it doubles the number of things in the module which gives you more to scan through. It also shows a number of things that have no meaning to a user such as `p` and `T`.\r\n\r\n- Operators `all` and `any` are only present as the classes `Any` and `All` this is inconsistent because you call `branch` as `r.branch` but `any` as `r.Any`. I also suspect this isn't reflected in our docs and is incongruous with the other drivers.\r\n\r\n- Many of the objects aren't Thread safe. I'm not 100% sure what python programmer expectations are on this but the way we break when connections and functions are passed between threads is going to be very confusing. \r\n\r\n@timmaxw would you mind also taking a look at this code. It's in the branch ql-refactor in drivers/python2."
  , issueState = "closed"
  , issueId = Id 11741616
  , issueComments = 14
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 64
          , milestoneClosedIssues = 228
          , milestoneDescription =
              Just
                "These issues are no longer relevant to the current version of RethinkDB"
          , milestoneTitle = "outdated"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/64"
          , milestoneCreatedAt = 2014 (-03) (-28) 00 : 17 : 40 UTC
          , milestoneState = "closed"
          }
  }