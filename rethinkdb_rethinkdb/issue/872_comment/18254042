IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-22) 02 : 30 : 31 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18254042"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/872#issuecomment-18254042"
  , issueCommentCreatedAt = 2013 (-05) (-22) 02 : 30 : 31 UTC
  , issueCommentBody =
      "I'm less sure of this, but we may also wish to introduce an optional argument `ignore_nulls` which works as follows:\r\n```ruby\r\n> r({:a => 1, :b => nil}).merge({:a => nil}, :ignore_nulls => false)\r\n{:a => nil. :b => nil}\r\n> r({:a => 1. :b => nil}).merge({:a => nil}, :ignore_nulls => true)\r\n{:a => 1, :b => nil}\r\n```\r\n\r\nIt's debatable what this should default to.  I think it should default to the same thing in `merge` and `update`, and in `update` it's extremely useful to be able to update an object to `NULL`.  On the other hand, we're moving to treating `NULL` the same as non-existence in many other places.  I'm curious what other people think about this."
  , issueCommentId = 18254042
  }