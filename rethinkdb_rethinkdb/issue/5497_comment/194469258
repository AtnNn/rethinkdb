IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-09) 19 : 33 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 8995502
        , simpleUserLogin = N "sinfex"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/8995502?v=3"
        , simpleUserUrl = "https://api.github.com/users/sinfex"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/194469258"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5497#issuecomment-194469258"
  , issueCommentCreatedAt = 2016 (-03) (-09) 19 : 32 : 53 UTC
  , issueCommentBody =
      "@danielmewes this is cited from OrientDB: http://orientdb.com/docs/2.0/orientdb.wiki/Tutorial-Record-ID.html\r\n\r\nThey deal with it in a simple fashion: the record IDs are in the form `#<cluster-id>:<cluster-position>`.\r\n\r\nI'm not sure about the limitations; in fact, it's the only way to access records directly without defining a separate property+index. The only thing I ran into is that if you expose these IDs to the outside world and manually move the records to another cluster (they have a [MOVE VERTEX](http://orientdb.com/docs/2.1/SQL-Move-Vertex.html) command for sharding purposes), you should know that the old RIDs will no longer be accessible. "
  , issueCommentId = 194469258
  }