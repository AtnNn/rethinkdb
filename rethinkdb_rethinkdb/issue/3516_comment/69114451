IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-07) 23 : 55 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/69114451"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3516#issuecomment-69114451"
  , issueCommentCreatedAt = 2015 (-01) (-07) 23 : 55 : 17 UTC
  , issueCommentBody =
      "After compiling with TCMalloc instead of Jemalloc for testing, I got this a while after restarting the servers:\r\n```\r\nwarn: Received invalid clustering header from (unknown), closing connection -- something might be connecting to the wrong port.\r\nerror: Error in src/rpc/connectivity/cluster.cc at line 117:\r\nerror: Guarantee failed: [!is_loopback()] Attempted to kill connection to myself.\r\nerror: Backtrace:\r\nerror: Wed Jan  7 15:38:39 2015\r\n       \r\n       1: backtrace_t::backtrace_t() at backtrace.cc:203\r\n       2: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at basic_string.h:269\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at basic_string.h:287\r\n       5: connectivity_cluster_t::connection_t::kill_connection() at cluster.cc:117\r\n       6: mailbox_manager_t::mailbox_read_coroutine(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, threadnum_t, unsigned long, std::vector<char, std::allocator<char> >*, long, mailbox_manager_t::force_yield_t) at mailbox.cc:286\r\n       7: ./rethinkdb() [0x75d748] at 0x75d748 ()\r\n       8: coro_t::run() at coroutines.cc:206\r\nerror: Exiting.\r\n```\r\n\r\nIn my experience this guarantee gets triggered if the server sends itself a (local) cluster message that fails to deserialize."
  , issueCommentId = 69114451
  }