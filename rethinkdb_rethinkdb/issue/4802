Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-08) (-03) 04 : 29 : 14 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4802/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4802"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Java"
          , labelName = "Java"
          }
      , IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 4802
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 501740
        , simpleUserLogin = N "hepin1989"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/501740?v=3"
        , simpleUserUrl = "https://api.github.com/users/hepin1989"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "suggestion:Using netty for the java driver's io layer or abstract it."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4802"
  , issueCreatedAt = 2015 (-09) (-07) 01 : 27 : 26 UTC
  , issueBody =
      Just
        "Hi,I just noticed that the inprogress java driver is java8 only and using NIO directly,I have a suggestion for it.\r\n- At least support java7(I am on java8,but not all of us I think)\r\n- Using Netty for the I/O or making I/O layer abstract for extension.\r\n\r\nI suggest using Netty for the I/O layer cause both grpc,redission ,mongo-java-driver and others postgres-async etc is using it,so It seems like a right way,it plus some other feature:\r\n- Could using epoll for the linux\r\n- Pooling support,both the Channel and the ByteBuf\r\n- Abstract away the I/O\r\n- Better thread model\r\n- Back-pressure supported\r\n- Zero copy supported for both composited ByteBuf and file transport\r\n\r\nI think that by making use of Netty,the java driver could achieve more and have more time to optimize the user API and leveraging the Netty's optimization. \r\n\r\nI still suggest that first we go a simple way,later we change the I/O layer with fully async by netty,then we could just adding pooling and RS support etc.\r\n\r\nThanks for finally put this on table and make it come true. \r\n@deontologician "
  , issueState = "open"
  , issueId = Id 105129862
  , issueComments = 12
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }