IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-20) 00 : 32 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/186466435"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5429#issuecomment-186466435"
  , issueCommentCreatedAt = 2016 (-02) (-20) 00 : 32 : 11 UTC
  , issueCommentBody =
      "Hey @danielmewes! Thanks for the super quick response - yes, I realize that building a strategy that works best in all failure scenarios is a bit of unicorn hunt. I just wanted to document this use case as one situation where the decider could better optimize the backfill process. It's not much of a proposal, just something to reference in the future :)"
  , issueCommentId = 186466435
  }