IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-16) 21 : 47 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/70327809"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3020#issuecomment-70327809"
  , issueCommentCreatedAt = 2015 (-01) (-16) 21 : 47 : 53 UTC
  , issueCommentBody =
      "Just reproduced this with the shard fuzzer, so it still exists in the codebase.  Here is an updated backtrace:\r\n\r\n```c\r\nVersion: rethinkdb 1.15.2-1743-gb2034c (debug) (GCC 4.6.3)\r\nerror: Error in ../src/clustering/administration/tables/split_points.cc at line 72:\r\nerror: Guarantee failed: [split_points->at(i) >= split_points->at(i-1)]\r\nerror: Backtrace:\r\nerror: Fri Jan 16 13:44:56 2015\r\n\r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:203\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n       4: format_backtrace(bool) at backtrace.cc:198\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6: /home/ssd2/grey/rethinkdb/build/debug_system/rethinkdb() [0x1b75e94] at 0x1b75e94 ()\r\n       7: calculate_split_points_with_distribution(std::map<store_key_t, long, std::less<store_key_t>, std::allocator<std::pair<store_key_t const, long> > > const&, unsigned long, table_shard_scheme_t*, std::string*) at split_points.cc:157\r\n       8: calculate_split_points_intelligently(uuid_u, real_reql_cluster_interface_t*, unsigned long, table_shard_scheme_t const&, signal_t*, table_shard_scheme_t*, std::string*) at split_points.cc:234\r\n       9: real_reql_cluster_interface_t::reconfigure_internal(cluster_semilattice_metadata_t*, counted_t<ql::db_t const> const&, uuid_u const&, name_string_t const&, table_generate_config_params_t const&, bool, signal_t*, ql::datum_t*, std::string*) at real_reql_cluster_interface.cc:709\r\n       10: real_reql_cluster_interface_t::table_reconfigure(counted_t<ql::db_t const>, name_string_t const&, table_generate_config_params_t const&, bool, signal_t*, ql::datum_t*, std::string*) at real_reql_cluster_interface.cc:790\r\n       11: artificial_reql_cluster_interface_t::table_reconfigure(counted_t<ql::db_t const>, name_string_t const&, table_generate_config_params_t const&, bool, signal_t*, ql::datum_t*, std::string*) at artificial_reql_cluster_interface.cc:235\r\n       12: ql::reconfigure_term_t::eval_impl_on_table_or_db(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t, counted_t<ql::db_t const> const&, boost::optional<name_string_t> const&) const at db_table.cc:493\r\n       13: ql::table_or_db_meta_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at db_table.cc:366\r\n       14: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:217\r\n       15: ql::runtime_term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:438\r\n       16: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, ip_and_port_t const&, Response*) at term.cc:271\r\n       17: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*, ip_and_port_t const&) at query_server.cc:61\r\n       18: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) at protob.cc:315\r\n       19: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.cc:277\r\n       20: std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(query_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:551\r\n       21: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0, 1, 2>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\r\n       22: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&&&) at functional:1206\r\n       23: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1780\r\n       24: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2162\r\n       25: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:930\r\n```"
  , issueCommentId = 70327809
  }