IssueComment
  { issueCommentUpdatedAt = 2012 (-11) (-21) 05 : 06 : 37 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/10585729"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/101#issuecomment-10585729"
  , issueCommentCreatedAt = 2012 (-11) (-21) 05 : 06 : 37 UTC
  , issueCommentBody =
      "So this is definitely not the only way to call js on an object. The way to do it right now is:\r\n\r\n    let([\"var\", obj], js('...'))\r\n\r\nThis is a bit unwieldy because you have to do a let but once we have a true lambda term that this js can compile to we could say something like:\r\n\r\n    r.js('...').call(obj)\r\n\r\nor we could overload the `()` operator in languages that allow it (I know python does) and then you can say:\r\n\r\n    r.js('...')(obj)\r\n\r\nwhich seems really nice to me."
  , issueCommentId = 10585729
  }