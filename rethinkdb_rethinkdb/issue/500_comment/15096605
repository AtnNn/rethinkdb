IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-19) 04 : 11 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15096605"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/500#issuecomment-15096605"
  , issueCommentCreatedAt = 2013 (-03) (-19) 04 : 11 : 48 UTC
  , issueCommentBody =
      "Hi @mfenniak !\r\n\r\nI think we probably have out-of dat documentation on our site somewhere.  Could you link us to the page you're working from?\r\n\r\nAt the top of the most recent protobuf file (http://github.com/rethinkdb/rethinkdb/blob/next/src/rdb_protocol/ql2.proto), we explain how to do this in the first paragraph of `THE HIGH-LEVEL VIEW`:\r\n```c\r\n// Process: First send the magic number for the version of the protobuf you're \r\n// targetting (in the [Version] enum).  This should **NOT** be sent as a       \r\n// protobuf; just send the little-endian 32-bit integer over the wire raw.     \r\n// Next, send [Query] protobufs and wait for [Response] protobufs with the same\r\n// token.  You can see an example exchange below in **EXAMPLE**.               \r\n```"
  , issueCommentId = 15096605
  }