IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-15) 00 : 09 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/70018216"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/334#issuecomment-70018216"
  , issueCommentCreatedAt = 2015 (-01) (-15) 00 : 09 : 07 UTC
  , issueCommentBody =
      "I don't object strongly to `union_map`, but it's worth noting that while currently `union` concatenates streams, we've never explicitly *promised* that, and it would be more efficient in a lot of cases to intersperse elements from the different streams, so I could imagine a future in which `union` means \"give me the elements from all of these streams in whatever way is most efficient\" rather than \"concatenate these streams\".\r\n\r\nIf we decide to commit to the current concatenation semantics for `union`, then `union_map` seems fine to me, and might be more obvious to people."
  , issueCommentId = 70018216
  }