Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-01) (-02) 19 : 30 : 46 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3485/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3485"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 3485
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Allow predicate objects to contain lambdas"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3485"
  , issueCreatedAt = 2015 (-01) (-01) 23 : 50 : 08 UTC
  , issueBody =
      Just
        "For terms like `filter`, `update`, etc it would be nice if you could specify a callback which gets evaluated with `(value, row)` as its arguments. For example:\r\n\r\n```js\r\nr.table('foo').filter({\r\n  bar: function (value, row) {\r\n    // value === row('bar')\r\n    return value.ne('baz');\r\n  },\r\n  other: false\r\n})\r\n```\r\n\r\nAfter support for lambdas is in place, certain RQL terms (like `r.ne()`) could support being partially applied, so the example above would then look like this:\r\n\r\n```js\r\nr.table('foo').filter({\r\n  bar: r.ne('baz'),\r\n  other: false\r\n})\r\n```"
  , issueState = "open"
  , issueId = Id 53232067
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }