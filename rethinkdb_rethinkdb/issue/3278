Issue
  { issueClosedAt = Just 2014 (-11) (-18) 03 : 00 : 16 UTC
  , issueUpdatedAt = 2015 (-01) (-23) 21 : 50 : 41 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3278/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3278"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 3278
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Queries run immediately after r.table_wait() may fail"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3278"
  , issueCreatedAt = 2014 (-11) (-01) 02 : 53 : 10 UTC
  , issueBody =
      Just
        "In some of my integration tests, I have code like this:\n\n``` python\nr.table(\"foo\").reconfigure(...).run(conn)\nr.table_wait(\"foo\").run(conn)\nr.table(\"foo\").blah_blah_blah().run(conn)\n```\n\nThe third query often fails with a message about the table not being ready yet. I've written a stronger version of the `integration.table_wait` test (https://github.com/rethinkdb/rethinkdb/blob/tim/table-wait/test/interface/table_wait.py) which reproduces this bug about half of the time.\n\nI speculate that this is a race condition involving metadata propagation. If I add a `time.sleep(1)` after the call to `r.table_wait()`, then it consistently works.\n"
  , issueState = "closed"
  , issueId = Id 47479055
  , issueComments = 11
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }