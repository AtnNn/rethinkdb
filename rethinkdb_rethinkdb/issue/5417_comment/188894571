IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-25) 20 : 29 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 478118
        , simpleUserLogin = N "bchavez"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/478118?v=3"
        , simpleUserUrl = "https://api.github.com/users/bchavez"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/188894571"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/5417#issuecomment-188894571"
  , issueCommentCreatedAt = 2016 (-02) (-25) 17 : 35 : 07 UTC
  , issueCommentBody =
      "A bit of caution of the bug here https://github.com/rethinkdb/rethinkdb/issues/5448\r\n\r\nAlso, I'm not sure how safe it is in Java for the executor thread to `.close` on itself since the pump can call `.close` (on exception) then `.close():exec.awaitTermination(60, TimeUnit.SECONDS)`? Would the pump await on itself for termination? I dunno about this, seems a bit twisty for me.\r\n\r\nI've a certain fondness for https://github.com/rethinkdb/rethinkdb/issues/5380 and pushing all the awaiter mechanics down a lower level into `SocketWrapper` (or renamed to something else) like the C#/.NET driver. Just my feeling when *connection mechanics* (awaiter stuffs) are at a lower level, there is a **clearer** *separation of concerns* between a logical connection object and the underlying connection mechanics."
  , issueCommentId = 188894571
  }