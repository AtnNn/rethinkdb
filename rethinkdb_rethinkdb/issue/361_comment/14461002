IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-05) 19 : 46 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/14461002"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/361#issuecomment-14461002"
  , issueCommentCreatedAt = 2013 (-03) (-05) 19 : 46 : 35 UTC
  , issueCommentBody =
      "It took me a second to figure out what you meant by \"our current implementation doesn't return what you say it does\" but then I realized that you were referring to the fact that the we use a floating point value rather than an integer in the output.\r\n\r\nI feel like I've addressed this point elsewhere but it doesn't hurt to say it again. RQL doesn't currently support integers so it's either return a RQL number (interpreted by Python as a floating point number since that's what it is) or give some other kind of message. Since a user might want to do something with the return value though (say run a series of table creation queries and sum up the total number created) the former approach is clearly better.\r\n\r\nOur other options are even worse. Special case table creation in the Python driver to coerce it's return value to an integer? Automatically coerce all number results with a 0 fractional component to integers? No thank you.\r\n\r\n"
  , issueCommentId = 14461002
  }