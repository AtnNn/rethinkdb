IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-15) 23 : 58 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16418707"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/666#issuecomment-16418707"
  , issueCommentCreatedAt = 2013 (-04) (-15) 23 : 58 : 15 UTC
  , issueCommentBody =
      "Here's a real backtrace:\r\n```\r\ninfo: Creating directory /home/ssd0/mlucy/rethinkdb/build/release/rethinkdb_data\r\ninfo: Creating a default database for your convenience. (This is because you ran 'rethinkdb' without 'create', 'serve', or '--join', and the directory '/home/ssd0/mlucy/rethinkdb/build/release/rethinkdb_data' did not already exist.)\r\ninfo: Running rethinkdb 1.4.3-686-g4f6170 (GCC 4.6.1)...\r\ninfo: Running on Linux 3.0.0-13-server x86_64\r\ninfo: Loading data from directory /home/ssd0/mlucy/rethinkdb/build/release/rethinkdb_data\r\ninfo: Listening for intracluster connections on port 61615\r\ninfo: Listening for client driver connections on port 60615\r\ninfo: Listening for administrative HTTP connections on port 40680\r\ninfo: Listening on addresses: 127.0.0.1, 127.0.1.1, 192.168.0.7, 192.168.1.7\r\ninfo: Server ready\r\nVersion: rethinkdb 1.4.3-686-g4f6170 (GCC 4.6.1)\r\nerror: Error in ../src/concurrency/fifo_enforcer.hpp at line 223:\r\nerror: illegal to destroy fifo_enforcer_sink_t while outstanding exit_write_t objects exist\r\nerror: Backtrace:\r\nVersion: rethinkdb 1.4.3-686-g4f6170 (GCC 4.6.1)\r\nerror: Error in ../src/concurrency/fifo_enforcer.hpp at line 223:\r\nerror: illegal to destroy fifo_enforcer_sink_t while outstanding exit_write_t objects exist\r\nerror: Backtrace:\r\nerror: Mon Apr 15 16:56:03 2013\r\n       \r\n       1: format_backtrace(bool) at backtrace.cc:196\r\n       2: report_fatal_error(char const*, int, char const*, ...) at errors.cc:71\r\n       3: fifo_enforcer_sink_t::exit_write_t::on_early_shutdown() at fifo_enforcer.hpp:222\r\n       4: fifo_enforcer_sink_t::~fifo_enforcer_sink_t() at fifo_enforcer.cc:204\r\n       5: rdb_batched_replace(std::vector<std::pair<long, rdb_protocol_t::point_replace_t>, std::allocator<std::pair<long, rdb_protocol_t::point_replace_t> > > const&, btree_slice_t*, repli_timestamp_t, mc_transaction_t*, scoped_ptr_t<superblock_t>*, ql::env_t*, rdb_prot\\\r\nocol_t::batched_replaces_response_t*, rdb_modification_report_cb_t*) at scoped.hpp:32\r\n       6: rdb_write_visitor_t::operator()(rdb_protocol_t::batched_replaces_t const&) at protocol.cc:1110\r\n       7: rdb_protocol_t::store_t::protocol_write(rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, transition_timestamp_t, btree_slice_t*, mc_transaction_t*, scoped_ptr_t<superblock_t>*, write_token_pair_t*, signal_t*) at variant.hpp:858\r\n       8: btree_store_t<rdb_protocol_t>::write(region_map_t<rdb_protocol_t, binary_blob_t> const&, rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, transition_timestamp_t, order_token_t, write_token_pair_t*, signal_t*) at scoped.hpp:30\r\n       9: store_subview_t<rdb_protocol_t>::write(region_map_t<rdb_protocol_t, binary_blob_t> const&, rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, transition_timestamp_t, order_token_t, write_token_pair_t*, signal_t*) at protocol_api.hpp:558\r\n       10: store_subview_t<rdb_protocol_t>::write(region_map_t<rdb_protocol_t, binary_blob_t> const&, rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, transition_timestamp_t, order_token_t, write_token_pair_t*, signal_t*) at protocol_api.hpp:558\r\n       11: listener_t<rdb_protocol_t>::perform_writeread(rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, auto_drainer_t::lock_t) at stl_vector.h:350\r\n       12: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf6<void, listener_t<rdb_protocol_t>, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, \\\r\nauto_drainer_t::lock_t>, boost::_bi::list7<boost::_bi::value<listener_t<rdb_protocol_t>*>, boost::_bi::value<rdb_protocol_t::write_t>, boost::_bi::value<transition_timestamp_t>, boost::_bi::value<order_token_t>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi:\\\r\n:value<mailbox_addr_t<void (rdb_protocol_t::write_response_t)> >, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at mem_fn_template.hpp:732\r\n       13: coro_t::run() at coroutines.cc:186\r\nerror: Exiting.\r\ntrace/breakpoint trap\r\n```\r\n\r\nHow to reproduce in next:\r\n* Start server.\r\n* Start 30 ruby processes each inserting 1000 elements at a time in an infinite loop.\r\n* Wait about 60 seconds.\r\n* Go to data explorer, click on the table view (the one that reports how many writes/second are occuring for that table).\r\n* Kill all 30 ruby processes.\r\n* Wait."
  , issueCommentId = 16418707
  }