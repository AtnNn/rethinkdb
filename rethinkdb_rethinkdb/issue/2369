Issue
  { issueClosedAt = Just 2014 (-05) (-07) 18 : 53 : 01 UTC
  , issueUpdatedAt = 2014 (-05) (-07) 22 : 16 : 02 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2369/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2369"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2369
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 122435
        , simpleUserLogin = N "tsouza"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/122435?v=3"
        , simpleUserUrl = "https://api.github.com/users/tsouza"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Feature Request: filter returning single row selection"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2369"
  , issueCreatedAt = 2014 (-05) (-07) 13 : 16 : 41 UTC
  , issueBody =
      Just
        "Hello,\n\nI couldn't find any feasible solution to this, so I'm opening a feature request.\n\nMany ReQL functions operates on \"singleSelection\", and, as far as I know, only \"get\" returns this type of data. But what if one needs to lookup for a single document based on a predicate that include primary key among other values? So I suggest:\n\n```\ntable.filterOne(predicate) \8594 singleRowSelection\n```\n\nOf course, the filter could potentially return more then one document, in this case, the first one should be used. (An 'options' argument could define a sorting config)\n\nSo, one could do:\n\n``` javascript\nr.filterOne({ id: 1, status: \"ACTIVE\" }).update({\n    list: r.row(\"list\").setInsert(\"value\")\n})\n```\n\nInstead of:\n\n``` javascript\nr.get(1).update(function(x) {\n    return r.branch(\n        x(\"status\").eq(\"ACTIVE\"),\n        { list: x(\"list\").setInsert(\"value\") },\n        {});\n});\n```\n\nOr maybe, someone could enlight me with a better solution.\n"
  , issueState = "closed"
  , issueId = Id 32983841
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }