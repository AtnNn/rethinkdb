Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-03) (-23) 18 : 28 : 56 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3747/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3747"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 3747
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "RQL: .pluck() and .without() should be able to use a function as a param"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3747"
  , issueCreatedAt = 2015 (-02) (-07) 04 : 23 : 16 UTC
  , issueBody =
      Just
        "There are several cases where I conditionally exclude properties from an object, or where I store an embedded collection as an object, indexed by IDs. For example, one might want to only show public info:\n\n``` js\nr.attr({\n    phone: {\n        number: '555-123-1234',\n        public: false\n    },\n    email: {\n        address: 'john@example.com',\n        public: false\n    },\n    name: {\n        first: 'John',\n        last: 'Doe',\n        public: true\n    }\n}).without(function(info){\n    return info('public');\n});\n\n// should return\n{\n    name: {\n        first: 'John',\n        last: 'Doe',\n        public: true\n    }\n}\n```\n\nWe can already do that using `coerceTo`, but the above is far more readable:\n\n``` js\n.coerceTo('array').filter(function(kv){\n    return kv.nth(1)('public');\n}).coerceTo('object');\n```\n"
  , issueState = "open"
  , issueId = Id 56896893
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }