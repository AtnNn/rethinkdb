IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-27) 23 : 01 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/71746978"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3675#issuecomment-71746978"
  , issueCommentCreatedAt = 2015 (-01) (-27) 23 : 01 : 18 UTC
  , issueCommentBody =
      "So, in Java, a common way to do this is a type like `HashMap<String, Object>`. So you could define it as `HashMap<Object,Object>` but no json libraries do it that way, and json handling code doesn't expect arbitrary stuff in the key. If you have a JSON type, and libraries for interacting with that type in your language, you're not anticipating weird keys because the JSON spec requires the keys to be strings.\r\n\r\nI agree it's a slightly nicer interface in Ruby, and that it's unlikely you'll mutate the key, but as json is the common denominator, I think it should make sense as a json document."
  , issueCommentId = 71746978
  }