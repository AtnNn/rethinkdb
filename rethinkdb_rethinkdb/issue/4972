Issue
  { issueClosedAt = Just 2015 (-10) (-26) 22 : 50 : 19 UTC
  , issueUpdatedAt = 2015 (-10) (-26) 22 : 50 : 34 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4972/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4972"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fbda04"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/st:review"
          , labelName = "st:review"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4972
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Segmentation fault in `table_fuzzer.py` when killing/reviving servers"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4972"
  , issueCreatedAt = 2015 (-10) (-20) 23 : 33 : 07 UTC
  , issueBody =
      Just
        "I was testing the new `--kill` option for `table_fuzzer.py`, and ran into this crash with the command line `table_fuzzer.py --servers 7 --threads 48 --changefeeds --kill`\r\n\r\n```cpp\r\nError in ../src/arch/runtime/thread_pool.cc at line 359:\r\nSegmentation fault from reading the address (nil).\r\nBacktrace:\r\nTue Oct 20 16:00:50 2015\r\n\r\n1 [0x1d1fbf8]: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n2 [0x19085c1]: backtrace_t::backtrace_t() at backtrace.cc:203\r\n3 [0x1908c2f]: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n4 [0x190850f]: format_backtrace(bool) at backtrace.cc:198\r\n5 [0x18fc3ce]: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n6 [0x172eac8]: linux_thread_pool_t::fatal_signal_handler(int, siginfo*, void*) at thread_pool.cc:359\r\n7 [0x7fa66d524cb0]: /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa66d524cb0] at 0x7fa66d524cb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n8 [0x18aeb9e]: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x18aeb9e] at 0x18aeb9e ()\r\n9 [0x18ae346]: mailbox_manager_t::on_local_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, std::vector<char, std::allocator<char> >&&) at mailbox.cc:218\r\n10 [0x183daa4]: connectivity_cluster_t::send_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, unsigned char, cluster_send_message_write_callback_t*) at cluster.cc:1343\r\n11 [0x18adda6]: send(mailbox_manager_t*, raw_mailbox_t::address_t, mailbox_write_callback_t*) at mailbox.cc:129\r\n12 [0x1b11a4f]: void send<ql::changefeed::stamped_msg_t>(mailbox_manager_t*, mailbox_t<void (ql::changefeed::stamped_msg_t)>::address_t, ql::changefeed::stamped_msg_t const&) at typed.hpp:207\r\n13 [0x1af6094]: ql::changefeed::server_t::send_all(ql::changefeed::msg_t const&, store_key_t const&, rwlock_in_line_t*, auto_drainer_t::lock_t const&) at changefeed.cc:536\r\n14 [0x1a0469c]: rdb_modification_report_cb_t::on_mod_report(rdb_modification_report_t const&, bool, new_mutex_in_line_t*, rwlock_in_line_t*) at btree.cc:1335\r\n15 [0x19fed42]: do_a_replace_from_batched_replace(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*) at btree.cc:366\r\n16 [0x1a18e39]: void std::_Bind<void (*(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t, btree_loc_info_t, one_replace_t, ql::configured_limits_t, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*))(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*)>::__call<void, , 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11>) at functional:1146\r\n17 [0x1a15392]: void std::_Bind<void (*(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t, btree_loc_info_t, one_replace_t, ql::configured_limits_t, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*))(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*)>::operator()<, void>() at functional:1206\r\n18 [0x1a11a98]: std::_Function_handler<void (), std::_Bind<void (*(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t, btree_loc_info_t, one_replace_t, ql::configured_limits_t, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*))(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*)> >::_M_invoke(std::_Any_data const&) at functional:1780\r\n19 [0x1718380]: std::function<void ()>::operator()() const at functional:2162\r\n20 [0x19fee74]: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x19fee74] at 0x19fee74 ()\r\n21 [0x1a14e7b]: coro_pool_t<std::function<void ()> >::worker_run(std::function<void ()>, auto_drainer_t::lock_t) at coro_pool.hpp:68\r\n22 [0x1a2242a]: std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)>::operator()(coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t) const at functional:551\r\n23 [0x1a21e7d]: void std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)>::__call<void, , 0, 1, 2>(std::tuple<>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\r\n24 [0x1a21ce8]: void std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n25 [0x1a21bde]: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n26 [0x1729928]: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n27 [0x1731b2f]: coro_t::run() at coroutines.cc:207\r\n28 [0x1a15161]: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)>&&) at coroutines.hpp:59\r\n29 [0x1a116c9]: coro_pool_t<std::function<void ()> >::on_source_availability_changed() at coro_pool.hpp:86\r\n30 [0x1739ef5]: availability_control_t::set_available(bool) at passive_producer.hpp:66\r\n31 [0x1a0dd64]: unlimited_fifo_queue_t<std::function<void ()>, std::list<std::function<void ()>, std::allocator<std::function<void ()> > > >::push(std::function<void ()> const&) at unlimited_fifo.hpp:49\r\n32 [0x19ff283]: rdb_batched_replace(btree_info_t const&, scoped_ptr_t<real_superblock_t>*, std::vector<store_key_t, std::allocator<store_key_t> > const&, btree_batched_replacer_t const*, rdb_modification_report_cb_t*, ql::configured_limits_t, profile::sampler_t*, profile::trace_t*) at btree.cc:427\r\n33 [0x1c5aae8]: rdb_write_visitor_t::operator()(batched_insert_t const&) at store.cc:691\r\n```"
  , issueState = "closed"
  , issueId = Id 112481562
  , issueComments = 10
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-11) (-11) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 92
          , milestoneClosedIssues = 84
          , milestoneDescription = Just ""
          , milestoneTitle = "2.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/92"
          , milestoneCreatedAt = 2015 (-02) (-03) 22 : 18 : 37 UTC
          , milestoneState = "closed"
          }
  }