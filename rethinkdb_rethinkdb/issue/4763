Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 39 : 22 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4763/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4763"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4763
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 127315
        , simpleUserLogin = N "kulbirsaini"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/127315?v=3"
        , simpleUserUrl = "https://api.github.com/users/kulbirsaini"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Rethinkdb database/table/index creation inconsistencies"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4763"
  , issueCreatedAt = 2015 (-08) (-25) 05 : 08 : 10 UTC
  , issueBody =
      Just
        "This is my current setup\r\n* Linux Mint 17 with Linux 3.13.0-37 x64\r\n* Rethinkdb 2.1.1~0trusty (GCC 4.8.2) (Upgraded from 2.0 to 2.1 and then to 2.1.1 right after the respective release)\r\n* Two clustered rethinkdb instances on the same machine\r\n* Rethinkdbdash latest\r\n* SSD as storage\r\n\r\nWith 2.0, I didn't have many issues. There were at times issues with index creation when I created many of them using Promise.map. Not all indexes were created even when all the promises were resolved. This still persists. As a temp fix, I have set concurrency to 1 for Promise.map and it's been working fine. Also, this is a known issue #4694 which has been fixed. I have not tested it yet.\r\n\r\nI switch from official rethinkdb driver to rethinkdbdash. I ran into some issues and pulled the rethinkdbdash repo to run some tests. To my surprise, after running the tests a few times, it left over 100+ databases which I had to remove using a script. At this point, this may look like totally unrelated but you'll notice how this becomes relevant at a later stage. Rethinkdbdash issue in question is [here](https://github.com/neumino/rethinkdbdash/issues/141).\r\n\r\nAfter upgrading to 2.1, I tried to rename a table (290K documents) from ABC to XYZ in one of my databases. I was under an impression that table renaming should happen fairly quickly. So, I switched to terminal and ran tests for one of my projects which ensures that the table XYZ exists and if it doesn't, it'll simply create it. This resulted in #2860. I tried to understand but I am not sure how having two tables with same name (though different uuids) actually helps and why we shouldn't have stricter rules to avoid table name collisions. I was OK with this issue as I was playing around in the dev environment and it didn't bother me much. So, I just removed those two tables and ignored things.\r\n\r\nWhile searching for an ORM for rethinkdb, I found thinky [thinky](https://github.com/neumino/thinky) and quickly incorporated it in my project. Now, thinky was responsible for creating database/tables/indexes etc. I was no longer using my own script to take care of the same. At this point, I again ran into the issue #4694. I was again stuck. So, I took indexing part out of thinky models and brought back my custom script which created indexes in series (concurrency=1). At that instant, I had my custom script to ensure database/tables/indexes existence and I have thinky models which takes care of creation of database/tables (but not indexes). This results in a race condition. And I got stuck big time and this time I don't even know how to get out of it. I start hacking around by moving thinky model initializations to different places so that they are always invoked after my custom scripts are done with creating required tables and indexes. This works fine for the dev env, but test cases fail because they have model requires at all different places and it's going to be a pain to fix it at all the places. During this entire process, I must have ran my tests for 20-30 times may be.\r\n\r\nNow, I go over to my admin console and it's reporting an issue. One of the tables in a totally different database (I didn't touch that db for more than a week now) is marked unavailable and reason shown is that no replicas are available. That table had 2 shards and 4 replicas (2 per shard). I have not restarted/killed/stopped any of the rethinkdb instances this whole time and none of them crashed either. I am running the instances using the rethinkdb command and not via upstart/init, so there is no chance of those getting killed and auto-restarted by upstart either. This is a totally crazy scenario now. Why would rethinkdb lose a table in another database while I was messing around with other databases. This takes me back to [one of the comments](https://github.com/neumino/rethinkdbdash/issues/141#issuecomment-133624853) by @neumino that if you create/delete too many dbs/tables, rethinkdb may not handle it well. I am not sure if that is the reason or something else went wrong. Again, since this was just a temp development thing I was working on, I ignored and just removed the database.\r\n\r\nNow, I refresh the admin console and there is something weird again. The cluster list show 3 databases and 2 tables while top right corner, it shows 15/15 tables ready. See the attached screenshot.\r\n\r\n![Tables in the cluster](https://cloud.githubusercontent.com/assets/127315/9459091/d26ba7ec-4b14-11e5-8a6a-4e15372502ff.png)\r\n\r\nAlso, my dashboard does not work anymore and it doesn't even have an error to display for more. I have tried to restart both rethinkdb instances but it still show there is some error but it doesn't know what that error is. Clicking refresh doesn't help either. And as you can see, rethinkdb is not reporting any issues either as it says *No issues*.\r\n\r\n![Dashboard](https://cloud.githubusercontent.com/assets/127315/9459040/da5e6922-4b13-11e5-8795-4ac34fda1d3c.png)\r\n\r\nI have tried to provide as much info as I have but I might have missed some obvious things. Feel free to reach out to me for more info if required."
  , issueState = "open"
  , issueId = Id 102949718
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }