Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-07) (-14) 19 : 19 : 24 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5953/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5953"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5953
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 8921895
        , simpleUserLogin = N "ha1331"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/8921895?v=3"
        , simpleUserUrl = "https://api.github.com/users/ha1331"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "read_mode optarg for changes()"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5953"
  , issueCreatedAt = 2016 (-07) (-14) 18 : 04 : 25 UTC
  , issueBody =
      Just
        "Not sure, but I suspect there might be valid use cases for this. I'm not the expert on these matters, but doesn't  this: \"Note that changefeeds will ignore the read_mode flag, and will always behave as if it is set to single.\" mean that user might end up getting a notification for a change that in case of something going wrong, might not be persisting? If that is the case, I think it's reasonable to think that there are use cases where one might want changes to behave in a similar way as the rest of the application if the user has defined read_mode for non-changes() queries."
  , issueState = "open"
  , issueId = Id 165622529
  , issueComments = 0
  , issueMilestone = Nothing
  }