Issue
  { issueClosedAt = Just 2014 (-07) (-01) 18 : 15 : 11 UTC
  , issueUpdatedAt = 2014 (-07) (-03) 07 : 21 : 31 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2597/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2597"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2597
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 233103
        , simpleUserLogin = N "nickpoorman"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/233103?v=3"
        , simpleUserUrl = "https://api.github.com/users/nickpoorman"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Batch Insert of 10 objects SLOW"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2597"
  , issueCreatedAt = 2014 (-06) (-25) 16 : 56 : 37 UTC
  , issueBody =
      Just
        "I'm currently experiencing very slow batch inserts of 10 objects, each with a single property, of which has 20k properties.\r\n\r\nI've set the table to use soft durability, --as well as including the option in the query.\r\n\r\nAs you can see below, this is taking about 12 seconds. Setting to hard durability takes about the same amount of time.\r\n\r\n*Instead of 10 inserts, my actual data I have to work with is more on the side of 500 inserts, which seems to hang forever.*\r\n\r\n**I should note that decreasing the number of embedded properties seems to significantly change the insertion time. ie. from 20000 to say 1000**\r\n\r\nEnvironment:\r\n\r\nSingle rethinkdb server setup with `brew`\r\n(All running locally)\r\n* OS X 10.9.3\r\n* Processor: 3.7 GHz Quad-Core Intel Xeon E5\r\n* Memory: 32 GB 1867 MHz DDR3\r\n* HD: 250GB Apple SSD\r\n* node.js --version: v0.11.13    --(same results with 0.10.29)\r\n* rethinkdb --version: rethinkdb 1.13.0 (CLANG 5.1 (clang-503.0.40))\r\n* rethinkdb driver version: 1.13.0-1\r\n\r\n\r\n\r\nThis is the code I'm using to test it:\r\n\r\n``` js\r\nvar r = require('rethinkdb');\r\nvar p = r.connect({\r\n  host: 'localhost',\r\n  port: 28015,\r\n  db: 'ml'\r\n});\r\np.then(function(conn) {\r\n  console.log(\"generating fake data\");\r\n  var fakeData = [];\r\n  var fakeObj;\r\n  for (var i = 9; i >= 0; i--) {\r\n    fakeObj = {\r\n      compounds: {}\r\n    };\r\n    for (var j = 20000; j >= 0; j--) {\r\n      var charge = (i % 2 ? 'p' : 'n');\r\n      var time = Date.now();\r\n      var mz = Math.random();\r\n      var key = charge + ':' + mz + ':' + time;\r\n      fakeObj.compounds[key] = Math.random();\r\n    };\r\n    fakeData.push(fakeObj);\r\n  };\r\n  console.log(\"done generating fake data\");\r\n  console.log(\"number of items: %s\", fakeData.length);\r\n  var hrstart = process.hrtime();\r\n  r.table('samples').insert(fakeData).run(conn, {durability: 'soft'}).then(function(res) {\r\n    var hrend = process.hrtime(hrstart);\r\n    console.log(\"Execution time (hr): %ds %dms\", hrend[0], hrend[1]/1000000);\r\n    console.log(\"did the insert: \", res);\r\n  }, function(error) {\r\n    console.log('insert error: ', error);\r\n  });\r\n\r\n}).error(function(error) {\r\n  console.log(\"error connecting: \", error);\r\n})\r\n```\r\n\r\nThe output:\r\n\r\n```\r\ngenerating fake data\r\ndone generating fake data\r\nnumber of items: 10\r\nExecution time (hr): 12s 780.31937ms\r\ndid the insert:  { deleted: 0,\r\n  errors: 0,\r\n  generated_keys: \r\n   [ '3b567a30-f245-45df-b743-78834acfb9bd',\r\n     'd31fe16a-0b6e-4dd7-aec1-9430f12f6680',\r\n     '8639c415-e96d-44cf-a483-f7df22918451',\r\n     '589ce124-9692-42f0-a642-b598aa0eff01',\r\n     '97cf0bfb-c9b3-43be-8df5-544685bda1f2',\r\n     '3397ba86-b537-4014-98f5-09538b4fe952',\r\n     '55172342-371c-43e6-b507-896a83553d1d',\r\n     '474b77e9-6261-4638-8e71-c1bb11cf2442',\r\n     '8c32405e-bb26-4230-a01b-63f67cd33b22',\r\n     '31864a24-65f2-45d6-bc24-badf86f586b4' ],\r\n  inserted: 10,\r\n  replaced: 0,\r\n  skipped: 0,\r\n  unchanged: 0 }\r\n```\r\n\r\n\r\nThe output for 20 items:\r\n\r\n```\r\ngenerating fake data\r\ndone generating fake data\r\nnumber of items: 20\r\nExecution time (hr): 24s 659.366787ms\r\ndid the insert:  { deleted: 0,\r\n  errors: 0,\r\n  generated_keys: \r\n   [ 'aa4292ea-85f4-4044-8d0f-20eb222f0aab',\r\n     '1782ee4a-b5b4-4e57-800e-a71226038acb',\r\n     '4a215c28-3a4b-4728-b669-56e90272d3cc',\r\n     'fcf58830-6558-4f73-91df-7978d86b7e22',\r\n     '5fa021bb-0dc3-435d-ac5a-0aa8f7d1a6a2',\r\n     'fc59a085-0bda-4131-a4fc-af0147491cb6',\r\n     '76abd655-1bb7-4c40-95d1-fd72c90c0eab',\r\n     '08e8d39e-e647-4ce7-806a-7508cef58589',\r\n     '6758c779-4e18-474a-af1d-0587a2539365',\r\n     'd03567c3-ec12-472f-8912-e0cfb77f9643',\r\n     'b0c8797b-4aef-4d5b-8168-f8426c3d7e57',\r\n     '91a5adbb-e1a4-4c1a-bf56-ae200740141d',\r\n     '08563fb3-43dc-46ec-a134-cd0fbe12980e',\r\n     'bee98a58-8e2d-43cd-9e01-e428a66eee80',\r\n     'eeaa942f-8195-40ff-83e2-f267dbe39c0f',\r\n     '316ca430-991d-4518-a8b0-6e0413897caf',\r\n     '8db1cdff-1256-432b-88e9-db0d310ccf5c',\r\n     'ecf45156-1c5e-4e52-abe2-91204b7ad93e',\r\n     'c74d33a8-c0f2-4359-a4e5-ab04b2ed1890',\r\n     'a3e27f01-6b93-4cdb-bdbd-5d724411fa60' ],\r\n  inserted: 20,\r\n  replaced: 0,\r\n  skipped: 0,\r\n  unchanged: 0 }\r\n```"
  , issueState = "closed"
  , issueId = Id 36501228
  , issueComments = 13
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 73
          , milestoneClosedIssues = 21
          , milestoneDescription = Nothing
          , milestoneTitle = "1.13.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/73"
          , milestoneCreatedAt = 2014 (-06) (-25) 21 : 49 : 24 UTC
          , milestoneState = "closed"
          }
  }