Issue
  { issueClosedAt = Just 2015 (-11) (-10) 09 : 15 : 19 UTC
  , issueUpdatedAt = 2015 (-11) (-10) 09 : 15 : 19 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4343/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4343"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:performance"
          , labelName = "tp:performance"
          }
      ]
  , issueNumber = 4343
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Make streams not be terribly inefficient on sharded tables"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4343"
  , issueCreatedAt = 2015 (-06) (-04) 18 : 08 : 38 UTC
  , issueBody =
      Just
        "Consider the query `r.table(\"t\").update({a: \"foo\"})` on a sharded table \"t\".\n\nCurrently we request one batch of keys from each shard. Then we discard all but the one that is lowest in the key space. Then we send out updates to only that first shard.\nWe then repeat this until no keys are left to be processed in the first shard, and a similar thing happens for the remaining shards.\n\nThis has two problems:\na) It wastes a lot of resources on the shards because the same batch is requested and then discarded over and over.\nb) It makes the query slower because each batch of updates only goes to a single shard, rather than being spread across multiple shards (this was noticed by @ha1331).\n\nThe first part of the problem I think applies to all kinds of sorted and unsorted streams in RethinkDB, not just to writes.\n\nAssigning @mlucy \n"
  , issueState = "closed"
  , issueId = Id 85210943
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-11) (-11) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 92
          , milestoneClosedIssues = 84
          , milestoneDescription = Just ""
          , milestoneTitle = "2.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/92"
          , milestoneCreatedAt = 2015 (-02) (-03) 22 : 18 : 37 UTC
          , milestoneState = "closed"
          }
  }