IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-30) 21 : 43 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/117353810"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4257#issuecomment-117353810"
  , issueCommentCreatedAt = 2015 (-06) (-30) 21 : 43 : 17 UTC
  , issueCommentBody =
      "As @AtnNn explained to me, the thing that triggers this in our code is the comparison of two `boost::optional`s in an `EXPECT_EQ` macro. `EXPECT_EQ` tries to format the values of its arguments in case of an error, for which it uses the `operator<<` overload that isn't properly generated in this case.\r\n\r\nFor 2.1.0, we're going to work around this by splitting the `EXPECT_EQ` into one that compares whether the optional has a value, and a second one that checks the values themselves if they exist.\r\nThis work-around is in code review 3034."
  , issueCommentId = 117353810
  }