IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-16) 03 : 20 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16424561"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/663#issuecomment-16424561"
  , issueCommentCreatedAt = 2013 (-04) (-16) 03 : 19 : 31 UTC
  , issueCommentBody =
      "> Fields whose value is undefined are treated as if they don't exist.\r\n\r\nI feel like this could be confusing. If I saw a query `row.update({ foo: undefined })`, I'd expect it to change `foo` to `undefined` in the db, or remove `foo` from the document altogether. The last thing I'd expect is for this query to do absolutely nothing.\r\n\r\nWe could change the protobuf to actually support `undefined`, but I think that's a bad direction personally. It's more work, it doesn't play well with other drivers, and it requires thinking through many edge cases.\r\n\r\nI'd prefer fixing the actual problem at hand. Why don't we add a better error message for *this* specific issue (people passing `undefined` as values to the literal dict)? It would fix the immediate problem that 90% of people are likely to run into, wouldn't be very much work, and would allow us to sidestep most of the tricky issues. If we discover more issues related to undefined, we could add better error messages there as needed. I think this is a better option than doing a more fundamental redesign or an auditing pass for better error messages in general.\r\n\r\nTL;DR: less is more."
  , issueCommentId = 16424561
  }