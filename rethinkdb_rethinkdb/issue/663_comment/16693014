IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-19) 22 : 25 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16693014"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/663#issuecomment-16693014"
  , issueCommentCreatedAt = 2013 (-04) (-19) 22 : 25 : 48 UTC
  , issueCommentBody =
      "@taybin is `DEL_ATTR` an operation or a value (akin to `undefined` in JS)?\r\n\r\nAs a value`DEL_ATTR` would mean wading back into the treacherous waters of supporting a third kind of non-existence in RQL, a `NULL` with yet different semantics and different again from fields that simply don't exist. I think we've discussed this before and would really like to avoid this extra complication.\r\n\r\nAs an operation, I'm having trouble seeing how `DEL_ATTR` would different from `without` or how it could be made more efficient. Could you elaborate?\r\n\r\n\r\nPersonally, I agree with @coffeemug that the right way to close this issue is to provide a better error message when an `undefined` value sneaks it's way into a query. It's simpler and is probably what people want in most situations. While it clashes with JavaScript's model for undefined fields, we always need to consider how potential new RQL features fit into other supported or potentially supported languages. JavaScript's model is pretty unique and would feel more out of place in almost every other language we support than erroring on `undefined` is in JS."
  , issueCommentId = 16693014
  }