Issue
  { issueClosedAt = Just 2014 (-03) (-08) 02 : 20 : 58 UTC
  , issueUpdatedAt = 2014 (-03) (-08) 02 : 22 : 02 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2053/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2053"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2053
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 258437
          , simpleUserLogin = N "srh"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/258437?v=3"
          , simpleUserUrl = "https://api.github.com/users/srh"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "btree merge and level operations do not update recency timestamps properly"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2053"
  , issueCreatedAt = 2014 (-03) (-04) 00 : 08 : 52 UTC
  , issueBody =
      Just
        "Merge and level operations, namely, the function `check_and_handle_underfull`, has a bug when multiple shards share the same btree.  The consequence of this bug is that if you add a key-range shard, add a replica, disconnect the replica, then do some insertions and deletions, and then bring the replica back up, the replica could miss some changes.\r\n\r\nIn merging or leveling, a subtree (or value) with a *later* timestamp could be made the child of a subtree with an *earlier* timestamp.  We need to be able to manually set the timestamp of the node we are merging or leveling children into, to be the maximum of the current write operation's timestamp and the timestamps of all its subtrees (or values).\r\n\r\nThis also invalidates the alt cache's assumption that transactions carry recency timestamps and that you can tell what your acquisition's recency timestamp would be before you have exclusive access to the block.  This means we'll need some rejiggering, which will probably actually simplify things, once we get page_t's not requiring a full page load."
  , issueState = "closed"
  , issueId = Id 28669238
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2014 (-03) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 53
          , milestoneClosedIssues = 203
          , milestoneDescription = Just ""
          , milestoneTitle = "1.12"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/53"
          , milestoneCreatedAt = 2013 (-11) (-19) 09 : 47 : 10 UTC
          , milestoneState = "closed"
          }
  }