IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-13) 03 : 40 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/156313933"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5081#issuecomment-156313933"
  , issueCommentCreatedAt = 2015 (-11) (-13) 03 : 40 : 04 UTC
  , issueCommentBody =
      "Thanks for reporting this @lijialing888, and sorry you had to run into this.\r\nI was able to reproduce the issue and can confirm that it's still an issue in RethinkDB 2.2.0.\r\nInterestingly, I can only get the crash with descending ordering on the index, not with ascending ordering.\r\n\r\nTo reproduce, I used the following queries:\r\n```js\r\nr.tableCreate('t1')\r\nr.table('t1').indexCreate('t')\r\nr.table('t1').insert({t: r.now()})\r\nr.table('t1').insert({t: r.now()})\r\nr.table('t1').orderBy({index: r.desc(\"t\")}).limit(1).changes()\r\n// While the changefeed is active:\r\nr.table('t1').insert({t: r.now()})\r\nr.table('t1').insert({t: r.now()})\r\n```\r\n\r\nThe exact number of documents you need to insert before / after starting the changefeed might vary a bit.\r\n\r\nBacktrace from 2.2.0:\r\n```\r\nerror: Thu Nov 12 19:38:53 2015\r\n       \r\n       1 [0xafd133]: format_backtrace(bool) at 0xafd133 (rethinkdb)\r\n       2 [0xd9f134]: report_fatal_error(char const*, int, char const*, ...) at 0xd9f134 (rethinkdb)\r\n       3 [0xa09a53]: linux_thread_pool_t::fatal_signal_handler(int, siginfo*, void*) at 0xa09a53 (rethinkdb)\r\n       4 [0x7fe7c5acf340]: /lib/x86_64-linux-gnu/libpthread.so.0(+0x10340) [0x7fe7c5acf340] at 0x7fe7c5acf340 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       5 [0xa72790]: shared_buf_t::size() const at 0xa72790 (rethinkdb)\r\n       6 [0x99bb63]: ql::datum_get_array_size(shared_buf_ref_t<char> const&) at 0x99bb63 (rethinkdb)\r\n       7 [0x93e5f0]: ql::datum_t::obj_size() const at 0x93e5f0 (rethinkdb)\r\n       8 [0x93e9e2]: rethinkdb() [0x93e9e2] at 0x93e9e2 ()\r\n       9 [0x93eba0]: ql::datum_t::is_ptype() const at 0x93eba0 (rethinkdb)\r\n       10 [0x943a02]: ql::datum_t::cmp_unchecked_stack(ql::datum_t const&) const at 0x943a02 (rethinkdb)\r\n       11 [0x94428e]: ql::datum_t::cmp(ql::datum_t const&) const at 0x94428e (rethinkdb)\r\n       12 [0x8f7107]: ql::changefeed::limit_order_t::subop(std::string const&, std::pair<ql::datum_t, ql::datum_t> const&, std::string const&, std::pair<ql::datum_t, ql::datum_t> const&) const at 0x8f7107 (rethinkdb)\r\n       13 [0x8f4300]: rethinkdb() [0x8f4300] at 0x8f4300 ()\r\n       14 [0x90d9fc]: ql::changefeed::index_queue_t<std::string, ql::datum_t, ql::datum_t, ql::changefeed::limit_order_t>::erase(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<ql::datum_t, ql::datum_t> > >) at 0x90d9fc (rethinkdb)\r\n       15 [0x9015dd]: ql::changefeed::limit_manager_t::commit(rwlock_in_line_t*, boost::variant<ql::changefeed::primary_ref_t, ql::changefeed::sindex_ref_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const&) at 0x9015dd (rethinkdb)\r\n       16 [0x8173b3]: rethinkdb() [0x8173b3] at 0x8173b3 ()\r\n       17 [0x8ff9b8]: ql::changefeed::server_t::foreach_limit(boost::optional<std::string> const&, store_key_t const*, std::function<void (rwlock_in_line_t*, rwlock_in_line_t*, rwlock_in_line_t*, ql::changefeed::limit_manager_t*)>, auto_drainer_t::lock_t const&) at 0x8ff9b8 (rethinkdb)\r\n       18 [0x81b823]: rdb_update_single_sindex(store_t*, store_t::sindex_access_t const*, deletion_context_t const*, rdb_modification_report_t const*, unsigned long*, auto_drainer_t::lock_t, cond_t*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*) at 0x81b823 (rethinkdb)\r\n       19 [0x823f77]: callable_action_instance_t<std::_Bind<void (*(store_t*, store_t::sindex_access_t*, deletion_context_t const*, rdb_modification_report_t const*, unsigned long*, auto_drainer_t::lock_t, cond_t*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*))(store_t*, store_t::sindex_access_t const*, deletion_context_t const*, rdb_modification_report_t const*, unsigned long*, auto_drainer_t::lock_t, cond_t*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*, std::vector<std::pair<ql::datum_t, boost::optional<unsigned long> >, std::allocator<std::pair<ql::datum_t, boost::optional<unsigned long> > > >*)> >::run_action() at 0x823f77 (rethinkdb)\r\n       20 [0xa0b28e]: coro_t::run() at 0xa0b28e (rethinkdb)\r\n```"
  , issueCommentId = 156313933
  }