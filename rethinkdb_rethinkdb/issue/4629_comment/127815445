IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-05) 01 : 43 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/127815445"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4629#issuecomment-127815445"
  , issueCommentCreatedAt = 2015 (-08) (-05) 01 : 43 : 59 UTC
  , issueCommentBody =
      "Independently of relating different branches for the same region to each other, `[branch_id, counter]` has the general problem of not being monotonically increasing per connection. If different writes hit different shards, they will have different `branch_id`s with no useful relation to each other.\r\n\r\n@slava what are the guarantees that you actually need with respect to the IDs being monotonically increasing? Does this have to hold on a per-primary-key basis or on a per-connection basis? E.g. if you write to two different documents A and B, is it important that you can figure out from the returned IDs which one was sent first? Or is it enough to have that guarantee if you submit two writes to the same document?"
  , issueCommentId = 127815445
  }