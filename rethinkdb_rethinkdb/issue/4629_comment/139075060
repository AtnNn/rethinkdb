IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-09) 23 : 49 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/139075060"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4629#issuecomment-139075060"
  , issueCommentCreatedAt = 2015 (-09) (-09) 23 : 49 : 17 UTC
  , issueCommentBody =
      ">* Are we going to send the `write_id` with every changefeed notification, or as a separate `state` document?\r\n* Should we require timestamp information in the changefeeds to be enabled explicitly or do we always want them to be there? I think at least if they go in their own `state` documents, they should be optional.\r\n\r\nI think we should appropriate the `includeStates` optarg for this. When it's false, the user would never see the timestamps; when it's true, it would be a part of the `state` document (e.g.: `{state: 'timestamp', write_timestamp: foo}`).\r\n\r\nThis seems much cleaner to me, and wouldn't require changing the interface very much.\r\n\r\n> * What should the field be called? I think `write_timestamp` might be a better name?\r\n\r\n:+1: for `write_timestamp`\r\n\r\n> Should we provide a comparison function for timestamp arrays in the clients? If yes, how should it be called? Maybe the timestamp array itself should be a ReQL pseudo-type, that gets deserialized to a custom class instance with a method for comparing them?\r\n\r\nI think since it's a fairly advanced feature, for the first release I'd document how the timestamps are to be compared and let the users do it themselves. If there is a lot of demand for baked in comparison code, we can add it later, but I don't think it's necessary for v1 of this."
  , issueCommentId = 139075060
  }