IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-05) 20 : 22 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/128136233"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4629#issuecomment-128136233"
  , issueCommentCreatedAt = 2015 (-08) (-05) 20 : 22 : 56 UTC
  , issueCommentBody =
      "Thanks @Slava for chiming in.\r\n\r\n> Yes, I think this is exactly my understanding. The monotonically increasing IDs help to see a squashed change and compare it to the ones application is waiting for.\r\n\r\nOk that makes sense. That sounds like the IDs need to be monotonically increasing per primary key then, which suggests that we could indeed use the replication `counter` assigned by the shard's primary (possibly together with the branch ID)."
  , issueCommentId = 128136233
  }