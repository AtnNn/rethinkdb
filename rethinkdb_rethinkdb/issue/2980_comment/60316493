IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-23) 22 : 02 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60316493"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2980#issuecomment-60316493"
  , issueCommentCreatedAt = 2014 (-10) (-23) 22 : 01 : 47 UTC
  , issueCommentBody =
      "Under heavy load it can take over a second per table. That's unacceptable, especially because it's important that `rethinkdb.table_status` be available during reconfigurations, when the database is busy rebalancing. So we can't put the field in `rethinkdb.table_status`.\r\n\r\nHere are some alternatives:\r\n* Add a new pseudo-table `rethinkdb.table_num_docs` specifically for this purpose. But people expect reading from a table to be fast, so this might be a bad idea.\r\n* Add a new ReQL command called `r.table().distribution()` or something similar. It would return an array of document counts, one for each shard.\r\n* Put the document counts in `r.table().info()`. Maybe we could add an optarg to enable or disable them.\r\n* Keep it in `rethinkdb.table_status`, but cache the document counts instead of recomputing on request. The web UI probably needs the first batch to be fast, so we would have to initialize the cache at startup. We'd also have to think about how often to refresh the cache. I think it would be difficult to get this right.\r\n\r\n/cc @coffeemug @danielmewes"
  , issueCommentId = 60316493
  }