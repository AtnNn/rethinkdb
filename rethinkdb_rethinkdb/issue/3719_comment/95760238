IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-24) 00 : 34 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/95760238"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3719#issuecomment-95760238"
  , issueCommentCreatedAt = 2015 (-04) (-24) 00 : 17 : 15 UTC
  , issueCommentBody =
      "I don't want to veer too far off course here but another option would be kind of a mix of what @coffeemug suggested and option (1) from @danielmewes comment. To have an optarg called `exclude` or `omit` with the following options:\r\n\r\n- `inserted` - drop rows with no `old_val`\r\n- `deleted` - drop rows with no `new_val`\r\n- `unchanged` - drop rows that didn't change\r\n- `replaced` - drop rows that changed (not sure why you'd want this, I just added it for completion)\r\n- `false (default)` - traditional changefeed behavior i.e. option (1) or what @coffeemug suggested\r\n\r\nI think this supports all mentioned use-cases and then some including the `changes(include_all=True, omit='deleted')['new_val]` for either side.\r\n\r\n**[edit]:** to clarify my last point, you wouldn't have to do `.filter(r.row.ne(null))`."
  , issueCommentId = 95760238
  }