IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-04) 00 : 13 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/72765022"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3719#issuecomment-72765022"
  , issueCommentCreatedAt = 2015 (-02) (-04) 00 : 13 : 26 UTC
  , issueCommentBody =
      "I really don't like that, personally.\r\n* It's much less discoverable than an optarg to changes.\r\n* It doesn't make much sense in the context of our type system.\r\n  - Why does a stream send diffs of the set and an array send the whole set?\r\n  - Why can I only call `changes` on arrays produced by this one query?  (We currently have the rule that you can call `changes` on all selections and some streams in 2.0.)\r\n* It's more work to implement (partially because of the above point about it not really lining up with our type system -- there's currently no place to attach changefeed information to datum arrays).\r\n\r\n---\r\n\r\nI think we should just add an optarg to changes.  I think it should work on `.orderby.limit.changes`, `.between.changes`, and `.get_all.changes`, with the caveat that if you use it with `between` or `get_all` we limit the size of the result set to the array size limit (which we already do for `.orderby.limit`)."
  , issueCommentId = 72765022
  }