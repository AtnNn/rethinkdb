IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-07) 02 : 29 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73345772"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3719#issuecomment-73345772"
  , issueCommentCreatedAt = 2015 (-02) (-07) 02 : 29 : 29 UTC
  , issueCommentBody =
      "@marshall007 Hmm I can see that the `{old_val: [], new_val: []}` format makes it more difficult to diff in cases where values are added or removed to/from the result set.\r\nI still like the this format better because it avoids pairs of `old_val` and `new_val` that have the same value.\r\n\r\nWhen you talk about the sparse array, do you mean the `[{old_val: ..., new_val: ...}, {old_val: ..., new_val: ...}, ...]` syntax? I actually don't think it's a huge problem if some of the vale will be `null`.\r\nIn the `{old_val: [...], new_val: [...]}` case the arrays would never be sparse in any sense I can think of, would it?"
  , issueCommentId = 73345772
  }