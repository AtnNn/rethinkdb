IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-04) 23 : 06 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/25736071"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1380#issuecomment-25736071"
  , issueCommentCreatedAt = 2013 (-10) (-04) 23 : 06 : 29 UTC
  , issueCommentBody =
      "In debug mode, I triggered a \"Assertion failed: [cglobals->coro_count < 10000] Too many coroutines allocated on this thread. This is problem due to a misuse of the coroutines\" while trying to reproduce the crash.\r\n\r\nThat could be completely unrelated though.\r\n\r\n```\r\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:150\r\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:68\r\n       5: coro_t::coro_t() at coroutines.cc:134\r\n       6: coro_t::get_coro() at coroutines.cc:356\r\n       7: coro_t* coro_t::get_and_init_coro<boost::_bi::bind_t<void, boost::_mfi::mf3<void, mailbox_manager_t, threadnum_t, unsigned long, string_read_stream_t*>, boost::_bi::list4<boost::_bi::value<mailbox_manager_t*>, boost::_bi::value<threadnum_t>, boost::_bi::value<unsigned long>, boost::_bi::value<string_read_stream_t*> > > >(boost::_bi::bind_t<void, boost::_mfi::mf3<void, mailbox_manager_t, threadnum_t, unsigned long, string_read_stream_t*>, boost::_bi::list4<boost::_bi::value<mailbox_manager_t*>, boost::_bi::value<threadnum_t>, boost::_bi::value<unsigned long>, boost::_bi::value<string_read_stream_t*> > > const&) at coroutines.hpp:126\r\n       8: void coro_t::spawn_now_dangerously<boost::_bi::bind_t<void, boost::_mfi::mf3<void, mailbox_manager_t, threadnum_t, unsigned long, string_read_stream_t*>, boost::_bi::list4<boost::_bi::value<mailbox_manager_t*>, boost::_bi::value<threadnum_t>, boost::_bi::value<unsigned long>, boost::_bi::value<string_read_stream_t*> > > >(boost::_bi::bind_t<void, boost::_mfi::mf3<void, mailbox_manager_t, threadnum_t, unsigned long, string_read_stream_t*>, boost::_bi::list4<boost::_bi::value<mailbox_manager_t*>, boost::_bi::value<threadnum_t>, boost::_bi::value<unsigned long>, boost::_bi::value<string_read_stream_t*> > > const&) at coroutines.hpp:32\r\n       9: mailbox_manager_t::on_message(peer_id_t, string_read_stream_t*) at mailbox.cc:125\r\n       10: message_multiplexer_t::run_t::on_message(peer_id_t, string_read_stream_t*) at multiplexer.cc:35\r\n       11: connectivity_cluster_t::run_t::handle(keepalive_tcp_conn_stream_t*, boost::optional<peer_id_t>, boost::optional<peer_address_t>, auto_drainer_t::lock_t, bool*) at cluster.cc:792\r\n       12: connectivity_cluster_t::run_t::connect_to_peer(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, semaphore_t*) at cluster.cc:244\r\n...\r\n```\r\n"
  , issueCommentId = 25736071
  }