IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-21) 16 : 30 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 622337
        , simpleUserLogin = N "joaojeronimo"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/622337?v=3"
        , simpleUserUrl = "https://api.github.com/users/joaojeronimo"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/94860113"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/4080#issuecomment-94860113"
  , issueCommentCreatedAt = 2015 (-04) (-21) 16 : 23 : 50 UTC
  , issueCommentBody =
      "Yes I think having the `ssl` hash be the same as the `options` hash used in `tls.connect` would be cleaner on the implementation (nothing else there to do, plus you support every option that tls.connect supports, which should be every possible option anyone would need), more idiomatic and node people would be a lot more familiar with how to use it.\r\n\r\nAlso allow the `ssl` parameter to be just `true`, in case the client wants ssl but the server is using a certificate with a valid verified chain and there is no need to specify certificates on the client."
  , issueCommentId = 94860113
  }