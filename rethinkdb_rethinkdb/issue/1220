Issue
  { issueClosedAt = Just 2013 (-08) (-01) 06 : 45 : 54 UTC
  , issueUpdatedAt = 2013 (-08) (-01) 06 : 45 : 54 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1220/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1220"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 1220
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Assertion failure in protob_server_t, [subscriptions.empty()]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1220"
  , issueCreatedAt = 2013 (-08) (-01) 05 : 11 : 28 UTC
  , issueBody =
      Just
        "Looks like this is an old problem that only shows up now that we have proper interruption in our js jobs:\n\n``` c\nVersion: rethinkdb 1.7.3-492-gcfefee-dirty (debug) (GCC 4.6.3)\nerror: Error in ../src/concurrency/pubsub.hpp at line 81:\nerror: Assertion failed: [subscriptions.empty()] \nerror: Backtrace:\nerror: Wed Jul 31 22:07:34 2013\n\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\n       3: format_backtrace(bool) at backtrace.cc:197\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:68\n       5: publisher_t<signal_t::subscription_t*>::~publisher_t() at pubsub.hpp:81\n       6: publisher_controller_t<signal_t::subscription_t*>::~publisher_controller_t() at pubsub.hpp:100\n       7: signal_t::~signal_t() at signal.hpp:85\n       8: wait_any_t::~wait_any_t() at wait_any.cc:17\n       9: protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.tcc:195\n       10: boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>::operator()(protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at mem_fn_template.hpp:280\n       11: void boost::_bi::list3<boost::_bi::value<protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list1<scoped_ptr_t<linux_tcp_conn_descriptor_t>&> >(boost::_bi::type<void>, boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>&, boost::_bi::list1<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&, int) at bind.hpp:392\n       12: void boost::_bi::bind_t<void, boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t> >(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at bind_template.hpp:33\n       13: boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > >, void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&>::invoke(boost::detail::function::function_buffer&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at function_template.hpp:154\n       14: boost::function1<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at function_template.hpp:761\n       15: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:798\n       16: boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at mem_fn_template.hpp:166\n       17: void boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> >::operator()<boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>&, boost::_bi::list0&, int) at bind.hpp:314\n       18: boost::_bi::bind_t<void, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> > >::operator()() at bind_template.hpp:21\n       19: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> > > >::run_action() at callable_action.hpp:28\n       20: callable_action_wrapper_t::run() at runtime_utils.cc:67\n       21: coro_t::run() at coroutines.cc:178\n```\n\nSince this is just showing up now after the extproc refactor, I think it's safe to assume that the interruptor is still being held by the js_runner_t or some member thereof.\n"
  , issueState = "closed"
  , issueId = Id 17491055
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-08) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 40
          , milestoneClosedIssues = 96
          , milestoneDescription = Just ""
          , milestoneTitle = "1.8"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/40"
          , milestoneCreatedAt = 2013 (-06) (-29) 01 : 55 : 11 UTC
          , milestoneState = "closed"
          }
  }