IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-29) 22 : 39 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/53937813"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2981#issuecomment-53937813"
  , issueCommentCreatedAt = 2014 (-08) (-29) 22 : 39 : 55 UTC
  , issueCommentBody =
      "It needs to be possible for the user to call `reconfigure()` even when the table is not available for reads. But we can't calculate a new distribution when the table is not available. If the number of shards is the same or decreased, then computing the new shard boundaries from the old shard boundaries is a good fallback. But this doesn't work well when the number of shard is increased.\r\n\r\nChanging the shard boundaries is an expensive operation that causes loss of availability. However, calling the current implementation of `reconfigure()` without changing shard boundaries is in many cases a very cheap operation. For example, if you call `reconfigure()` after losing a single machine and the table has enough replicas, I think you will get availability back almost immediately. So I'm reluctant to force the user to change the shard boundaries unnecessarily."
  , issueCommentId = 53937813
  }