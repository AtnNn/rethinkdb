IssueComment
  { issueCommentUpdatedAt = 2012 (-11) (-29) 21 : 29 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/10867240"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/65#issuecomment-10867240"
  , issueCommentCreatedAt = 2012 (-11) (-29) 21 : 29 : 18 UTC
  , issueCommentBody =
      "Alright so this seems to stem from some false assumptions. Basically what happens is when we access a variable in an `access_t` we expect the value to either be none (at either layer) and have the signal pulsed. Or to have a real value and not have the signal pulsed. This isn't the case if the value goes away and the comes back. In this issue we were disconnecting from the host and then reconnecting and getting a new value. This was leading to having a value but not a pulsed signal. I think that the correct thing to do in this case is that once the value is lost the access_t doesn't accept updates to it. Basically once the signal is pulsed it's invalidated and a new one will need to be constructed.\r\n\r\nI'm going to whip up a pull request with this @timmaxw would you mind reviewing?"
  , issueCommentId = 10867240
  }