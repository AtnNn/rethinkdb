IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-03) 19 : 31 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/57844040"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3029#issuecomment-57844040"
  , issueCommentCreatedAt = 2014 (-10) (-03) 19 : 31 : 58 UTC
  , issueCommentBody =
      "@gchpaco Fair enough.\r\nOut of curiosity: What did the domain structure look like that gave rise to this?\r\nI can see such a structure popping up for example if you have different subdivisions in your network, and each of them duplicates some piece of equipment. For example there could be `printer.london.company.com` as well as `printer.newyork.company.com` if the company has two offices.\r\n\r\nI'm not sure how frequent such a setup will be for RethinkDB clusters. I expect that it's rather rare, but I might be wrong.\r\n\r\nSo we could either\r\n* Only use the first part of the domain. Pro: Looks nice and short, probably what you want in a small network. Con: If there are multiple RethinkDB servers with the same first part in their domain name, they will only be distinguished by the random addition that we add to the name. That's not very user-friendly (though users could still override the default names of course).\r\n* Use the full FQDN. Pro: Always unique (unless you have different root zones on different machines in the cluster) Con: Looks ugly and leads to long server names\r\n\r\nIn either case, we should make sure that RethinkDB behaves the same on Linux and OS X."
  , issueCommentId = 57844040
  }