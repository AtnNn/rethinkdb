IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-18) 22 : 25 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/63557236"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3349#issuecomment-63557236"
  , issueCommentCreatedAt = 2014 (-11) (-18) 22 : 25 : 59 UTC
  , issueCommentBody =
      "For what it's worth, I would write this `table.map(r.range()){|doc, position| doc.merge({'position': position})}` right now.\r\n\r\nMaking `merge` variadic in the sense you describe would be a little bit tricky, because it's already variadic, it's just that it's only polymorphic on the first argument:\r\n```rb\r\nirb(main):536:0> r.expr([{}, {c: 3}]).merge({a: 1}, {b: 2}).run\r\n[{\"a\"=>1, \"b\"=>2}, {\"a\"=>1, \"b\"=>2, \"c\"=>3}]\r\n```\r\n\r\nTagging as `RQL_proposal` and placing in subsequent."
  , issueCommentId = 63557236
  }