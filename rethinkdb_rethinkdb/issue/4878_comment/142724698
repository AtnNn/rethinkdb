IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-23) 20 : 51 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/142724698"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4878#issuecomment-142724698"
  , issueCommentCreatedAt = 2015 (-09) (-23) 20 : 51 : 42 UTC
  , issueCommentBody =
      "@weshoke -- is this reproducible?\r\n\r\nI think I see how this might happen, actually.  We have an `auto_drainer_t` on a class `subscription_t` that has some pure virtual functions.  So when we acquire a lock on that drainer, it stops the base class from being destructed, but not the subclasses.  I think we need to have the drainer on each of the most-derived classes instead, and access it with a virtual function."
  , issueCommentId = 142724698
  }