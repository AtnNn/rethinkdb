IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-20) 22 : 17 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/158541709"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5122#issuecomment-158541709"
  , issueCommentCreatedAt = 2015 (-11) (-20) 22 : 17 : 50 UTC
  , issueCommentBody =
      "You can almost get that by doing the following:\r\n```\r\nvar dbs = [{name: ...}, {name: ...}, ...];\r\nvar tables = [{name: ..., db: ...}, {name: ..., db: ...}, ...];\r\nr.db('rethinkdb').table('db_config').insert(dbs);\r\nr.db('rethinkdb').table('table_config').insert(tables);\r\n```\r\n\r\nIt's not quite the same as a single `configure` command, but should work for copying the database and table configuration from one machine to another. Though it is missing index definitions.\r\n\r\nWe could also add a \"metadata only\" mode for `rethinkdb dump` / `rethinkdb restore` maybe, that only clones the table structure and secondary indexes but doesn't copy the actual data.\r\n\r\nI'll mark this as a ReQL_proposal, and we'll discuss it for one of the upcoming releases.\r\nI can definitely see the utility in having a single \"structure definition\" document that you can pass to a `configure` command (we should probably find a different name, because it's very close to `reconfigure` otherwise, which might be confusing)."
  , issueCommentId = 158541709
  }