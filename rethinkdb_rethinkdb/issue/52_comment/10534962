IssueComment
  { issueCommentUpdatedAt = 2012 (-11) (-19) 22 : 52 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/10534962"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/52#issuecomment-10534962"
  , issueCommentCreatedAt = 2012 (-11) (-19) 22 : 52 : 26 UTC
  , issueCommentBody =
      "@coffeemug I disagree. Maybe RethinkDB will have support for authentication in a couple years and thereby handle passwords. Having code around that writes random pieces of memory to disk strikes me as really bad. This specific behavior will sure enough be forgotten eventually, and can have really bad side effects in the future (like writing unencrypted passwords to disk). Whatever, not really a bug for now...\r\n\r\nI'll pull-request a patch that makes sure that blocks once allocated, will be persisted no matter whether initialized or not. This should actually be done in the buf_lock_t constructor, not in the mc_inner_buf_t::allocate method, where I had put the fix before..."
  , issueCommentId = 10534962
  }