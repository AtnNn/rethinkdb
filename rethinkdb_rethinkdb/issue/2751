Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-08) (-11) 20 : 50 : 27 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2751/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2751"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02d7e1"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:reql"
          , labelName = "cp:reql"
          }
      ]
  , issueNumber = 2751
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1621758
        , simpleUserLogin = N "Morhaus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1621758?v=3"
        , simpleUserUrl = "https://api.github.com/users/Morhaus"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Recursive queries"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2751"
  , issueCreatedAt = 2014 (-07) (-24) 19 : 30 : 05 UTC
  , issueBody =
      Just
        "It would be really useful to be able to execute recursive queries.\n\nFor instance, to recursively populate a node tree, something that I believe is not currently possible in ReQL:\n\n```\nvar getChildren = r.query('getChildren', function(query) {\n  return query.merge(function(node) {\n      r.object('children', r.table('node').getAll(node('id'), {index: 'parentId'}).doQuery('getChildren')),\n  });\n});\n\nr.table('node').get(1).doQuery(getChildren);\n```\n"
  , issueState = "open"
  , issueId = Id 38665665
  , issueComments = 22
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }