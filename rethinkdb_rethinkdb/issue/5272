Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 59 : 38 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5272/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5272"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5272
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Truncate long queries when printing exceptions?"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5272"
  , issueCreatedAt = 2016 (-01) (-08) 17 : 01 : 43 UTC
  , issueBody =
      Just
        "At least in Python, we print the full query as well as the frame highlighting (e.g. `     ^^^^^^   `) when printing a ReQL exception. For queries that are big, such as batch `insert` queries, the output can become so long that the actual error message is easily lost (e.g. https://github.com/rethinkdb/rethinkdb/issues/5263 ).\r\n\r\nWe should consider doing one of these things:\r\n\r\n1. Be smart about printing user data in queries, and truncate it if it becomes too long. I think in practice it would be enough to apply this heuristic only for `insert`, `update`, `replace` and `r.expr` terms.\r\n2. Truncate the query printout to a fixed length, no matter what makes the query so long. This has the disadvantage that it might discard important information that a user needs to debug an issue in their application if they work with very long queries.\r\n3. Leave things as they are. Users can use pagination through `less` etc. if an error is too long to fit onto the screen."
  , issueState = "open"
  , issueId = Id 125649807
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }