IssueComment
  { issueCommentUpdatedAt = 2015 (-10) (-27) 19 : 15 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/151614678"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5014#issuecomment-151614678"
  , issueCommentCreatedAt = 2015 (-10) (-27) 19 : 15 : 07 UTC
  , issueCommentBody =
      "Some points against trying to use ast-translation:\r\n1. We often need to produce multiple versions of the same test to check that different text that all produce the same ast all work.\r\n2. Our testing base serves as a repository of coed examples of how the commands work in different languages. Using ast-translation produces no examples, defeating this purpose. I agree that our auto-translation of some things partially defeats this, but the translation for Java is far more different that what we have had before.\r\n3. It is significantly tougher to back-track test failures, since we are not going through a computer-generated intermediary.\r\n\r\nSo the TL;DR version is I don't think we should be using ast-translation in the testing system.\r\n\r\nI would much rather have a tool to auto-translate (ast is a perfectly good approach here) the text, and put that in the polyglot files. I have been playing with this idea for some time, but don't quite have all the kinks worked out yet."
  , issueCommentId = 151614678
  }