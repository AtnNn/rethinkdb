IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-03) 20 : 35 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20443330"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1114#issuecomment-20443330"
  , issueCommentCreatedAt = 2013 (-07) (-03) 20 : 35 : 10 UTC
  , issueCommentBody =
      "My first instinct is that we should seriously limit the amount of work we do on this (at the very least I think we should be extremely careful about introducing these types of features). There are many, *many* existing monitoring tools, and some of them are extremely good and are very widely adopted. If we start introducing these features ourselves, we have to make sure they offer something to people that's better/more convenient than what they can get with existing tools, and I suspect that would be very difficult to do and would involve very non-trivial amount of work.\r\n\r\nI think a good solution here might be to introduce an issue that pops up when a node in the cluster has a significantly higher latency than the average latency in the cluster. This will automatically take care of a whole class of issues (disk performance, network issues, hardware failures, etc.) without having to reimplement existing monitoring tools. It would help people monitor the cluster, would involve relatively little work, and wouldn't take us too far into the monitoring tools rabbit hole.\r\n\r\nAlso, I think we should wait to do this until we get more information about the problems people encounter when operating RethinkDB. So I'd try and wait to schedule this until we finish low-hanging ReQL issues and performance/scalability issues."
  , issueCommentId = 20443330
  }