IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-17) 19 : 54 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/67382523"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3449#issuecomment-67382523"
  , issueCommentCreatedAt = 2014 (-12) (-17) 19 : 53 : 50 UTC
  , issueCommentBody =
      "Thanks for chiming in @srh. At this point we already have a fix for the specific issue, without removing the reverse iterator.\r\n\r\nIndeed we do the `increment()` on the left and/or right bounds in `key_range_t::key_range_t(...)` to make the left bound open or the right bound closed if that's requested. We also do stuff like that it in a couple of other places, which seem to be unrelated to this issue though as far as I can see.\r\nIn the case of this bug the issue was not due to the boundary twiddling. The backwards iteration code in `btree_depth_first_traversal()` was just doing the opposite of what was right in terms of openness/closedness.\r\n\r\n\r\nAlso, I meant to post this here, but somehow ended up posting in the wrong issue (#3444):\r\nThe fix is up in CR 2400 by @mlucy ."
  , issueCommentId = 67382523
  }