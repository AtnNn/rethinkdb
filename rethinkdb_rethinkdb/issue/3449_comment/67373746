IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-17) 19 : 00 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/67373746"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3449#issuecomment-67373746"
  , issueCommentCreatedAt = 2014 (-12) (-17) 19 : 00 : 43 UTC
  , issueCommentBody =
      "It might not be a horrible idea to cherry-pick the changes that rip out the leaf node reverse_iterator entirely (which then walk the forwards iterator backwards).\r\n\r\nAlso beware that somewhere, at some place in the code, there is some sort of heinous range endpoint twiddling.  I forget where, but it's someplace where we \"increment\" or \"decrement\" btree leaf keys in order to get rid of bounds and just have a clopen range or maybe closed on the right side and open on the left end.  I forget.  It could have happened above or below this part of the code (maybe it had something to do with the fact that internal node keys are less than values to the right of them and greater-than-or-equal-to the values on the left of them).  So just be wary of that.  Some mistake regarding that logic could have also been what triggered this bug."
  , issueCommentId = 67373746
  }