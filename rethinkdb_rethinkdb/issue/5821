Issue
  { issueClosedAt = Just 2016 (-06) (-03) 00 : 32 : 15 UTC
  , issueUpdatedAt = 2016 (-06) (-03) 00 : 32 : 21 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5821/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5821"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02d7e1"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:reql"
          , labelName = "cp:reql"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 5821
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1126819
        , simpleUserLogin = N "meenie"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1126819?v=3"
        , simpleUserUrl = "https://api.github.com/users/meenie"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "r.and(r.args()) inconsistencies in 2.3"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5821"
  , issueCreatedAt = 2016 (-06) (-02) 21 : 36 : 09 UTC
  , issueBody =
      Just
        "I'm getting some inconsistencies when using `r.args()` with `r.and()`.  Here is some reproducible code:\n\n``` javascript\nconst data = [\n  {\n    \"sub_doc\":[\n      {\n        \"sub_field_id\": 1\n      },\n      {\n        \"sub_field_id\":2,\n        \"text\":\"some text\"\n      }\n    ],\n  }\n];\n\nr.expr(data)\n  .filter(row =>\n    row('sub_doc').contains(doc => {\n      const firstCond = doc('sub_field_id').eq(2);\n      const secondCond = doc('text').match(`(?i)TEXT`);\n\n      return r.and(r.args([firstCond, secondCond]));\n      //return r.and(firstCond, secondCond)\n      // This does work, though.  Which I assumed was analogous to r.args()\n      //return r.and.apply(null, [firstCond, secondCond])\n    })\n  )\n```\n\nThis should return the supplied data, but does not.  If you uncomment the second return and comment out the first, it will work.\n\nIf you add something like `\"text\": \"whatever\"` as a sibling to `\"sub_field_id\": 1`, both statements will work.  Also, note that if you change both conditions to the constant `true`, it will work in either form of the data.\n"
  , issueState = "closed"
  , issueId = Id 158245393
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 175
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }