IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-28) 19 : 53 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/71903415"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3296#issuecomment-71903415"
  , issueCommentCreatedAt = 2015 (-01) (-28) 19 : 53 : 41 UTC
  , issueCommentBody =
      "Despite a certain potential to expose new bugs, I'm scheduling this for 2.0.\r\n\r\nThe reason is that having multiple changefeeds open on the same connection (as discussed in https://github.com/rethinkdb/rethinkdb/issues/3298 and https://github.com/rethinkdb/rethinkdb/issues/3678 ) isn't practicable without this change.\r\n\r\nWe should be conservative about when to enable this feature. I suggest two restrictions to this on the server side:\r\n- only ever process one request at a time per request token. Make sure that per token, we send back responses in the same order in which the requests arrived. This avoids a whole bunch of potential race conditions (e.g. what if some cursor implementation sends two `CONTINUE` requests? what if it sends a `CONTINUE` and then a `STOP` before receiving the response to the `CONTINUE`?).\r\n- Increase the protocol version magic. Only enable concurrent query execution for drivers that send the new magic. That way we can be sure not to break any existing (third party) drivers that are not prepared to handle parallel query execution."
  , issueCommentId = 71903415
  }