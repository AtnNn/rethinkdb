IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-22) 23 : 04 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18313912"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/867#issuecomment-18313912"
  , issueCommentCreatedAt = 2013 (-05) (-22) 23 : 04 : 46 UTC
  , issueCommentBody =
      "So I think it's a bit weird to have `match` return a `bool` when no function is specified and then return the results of that function when there is a function specified. What if instead we had 2 functions: `is_match` which returns true if there's a match and false otherwise. And `match` which returns the groups. This has the added benefit that syntax gets a bit shorter for some common operations. Suppose I just wanted to extract a number from within some `<` `>`s. It would just be:\r\n\r\n```Ruby\r\nstring.match(\"<\\(\\d*\\)>\")[1]\r\n```\r\n\r\ninstead of\r\n\r\n```Ruby\r\nstring.match(\"<\\(\\d*\\)>\") {|x| x[1]}\r\n```"
  , issueCommentId = 18313912
  }