IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-23) 00 : 44 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18317299"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/867#issuecomment-18317299"
  , issueCommentCreatedAt = 2013 (-05) (-23) 00 : 44 : 51 UTC
  , issueCommentBody =
      "We want a bool-returning version so that people can write:\r\n```\r\ntable.filter {|row| row[:name].match(/.../)}\r\n```\r\n\r\n---\r\n\r\nI mean the regular expressions offered by `<regex.h>`.  I believe that they use `[:digit:]` instead of `\\d`.  I wouldn't be incredibly opposed to integrating with RE2, but it would be more work.  (We already have a `scoped_regex_t` class that wraps `<regex.h>`.)\r\n\r\n---\r\n\r\n@srh -- just to be clear, do you find the original syntax I proposed where `match` without a block returns a bool confusing?"
  , issueCommentId = 18317299
  }