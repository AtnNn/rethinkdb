IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-23) 20 : 23 : 49 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18369263"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/867#issuecomment-18369263"
  , issueCommentCreatedAt = 2013 (-05) (-23) 20 : 23 : 49 UTC
  , issueCommentBody =
      "I'm strongly opposed to having `filter` treat `nil` and `false` as false and everything else as true without changing `branch`, `all`, and `any` to work the same way.  I think we really really really don't want to mix strict and promiscuous standards for truthiness.\r\n\r\nThat said, I wouldn't be too opposed to moving to a promiscuous model everywhere (although we'd have to think about it for a bit).\r\n\r\n---\r\n\r\n@jdoliner -- it's really hard to do much of anything in our query language without anonymous functions.  I think we might just have to bite the bullet and say that people have to know how to use them to use RQL.  Anecdotally, everyone I've helped with a problem has understood anonymous functions in the language they're using (or at least understood them well enough that that wasn't the bottleneck).\r\n\r\n---\r\n\r\nAlso, as a procedural point, I know that private conversations are inevitably going to happen but it would be really nice if people could summarize the points on github afterward.  Historically our RQL discussions have tended to degenerate into private silos, which was a really bad dynamic."
  , issueCommentId = 18369263
  }