IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-24) 07 : 48 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18391063"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/867#issuecomment-18391063"
  , issueCommentCreatedAt = 2013 (-05) (-24) 07 : 48 : 06 UTC
  , issueCommentBody =
      "I have some thoughts that might help you decide:\r\n\r\n* I'm all in for promiscuous truthiness, but I think it requires a bit of thought/time to implement (since things might be easy to miss). This is probably not an option for 1.6 since we're on a short timeline and need `match` now.\r\n* I would like to avoid introducing beginners to `lambda`, but I think it's totally ok in more advanced operations. In a db context, getting the groups from a regex match is an advanced operation.\r\n* While I prefer `match` to return the groups, I think passing an optional lambda is a bit ugly, but will do fine.\r\n* We can also ship without allowing the user to get the groups (until we get promiscuous truthiness done). It would be fine for now too, I think (thought I'd prefer an optional lambda to this).\r\n* :+1: on RE2"
  , issueCommentId = 18391063
  }