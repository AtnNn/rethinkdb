IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-07) 19 : 14 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1328749
        , simpleUserLogin = N "tstrimple"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1328749?v=3"
        , simpleUserUrl = "https://api.github.com/users/tstrimple"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/90703794"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2355#issuecomment-90703794"
  , issueCommentCreatedAt = 2015 (-04) (-07) 19 : 14 : 39 UTC
  , issueCommentBody =
      "It would be better, but still not ideal. The issue then becomes having\nto update two parts of your code base when adding a table / collection.\nOne section where you define all the tables you use and have the\ncreation logic, and then there are the places where you actually use\nsaid tables. I really like the ability to just say\ndb.collection('something').insert(data) and not have to worry about\nmaking sure 'something' is defined in a startup script which manages the\nactual creation. Implicit table creation doesn't sound like a major\nissue to most people, but it adds just enough friction to keep me on\nMongo for non-critical and prototype applications. When moving beyond\nthe prototype phase, or if I need to scale to more significant use,\nimplicit table creation takes a backseat to other features.\n\n\nOn Tue, Apr 7, 2015, at 02:04 PM, Slava Akhmechet wrote:\n> @tstrimple[1] -- if you could just call table_create and db_create\n> without worrying about handling errors, would that be as good? I.e. if\n> these methods didn't throw and instead returned something like {\n> created: 0 }, would the experience be as pleasant?\n\n\n> \8212 Reply to this email directly or view it on GitHub[2].\n\n>\n\n\n\nLinks:\n\n  1. https://github.com/tstrimple\n  2. https://github.com/rethinkdb/rethinkdb/issues/2355#issuecomment-90699454\n"
  , issueCommentId = 90703794
  }