Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-07) 18 : 28 : 49 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4872/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4872"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4872
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crash during table fuzzing: `Guarantee failed: [pair.second] key for entry_t already exists`"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4872"
  , issueCreatedAt = 2015 (-09) (-22) 01 : 58 : 09 UTC
  , issueBody =
      Just
        "I ran the table fuzzer on `next` with `table_fuzzer.py --servers 8 --threads 64`, and encountered the following crash nearly 15 minutes in:\r\n\r\n```cpp\r\n2015-09-21T18:50:41.379555345 878.291227s error: Error in ../src/concurrency/watchable_map.tcc at line 98:\r\n2015-09-21T18:50:41.382459262 878.294131s error: Guarantee failed: [pair.second] key for entry_t already exists\r\n2015-09-21T18:50:41.383270370 878.294942s error: Backtrace:\r\n2015-09-21T18:50:42.216942404 879.128615s error: Mon Sep 21 18:50:41 2015\r\n\r\n1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n2: backtrace_t::backtrace_t() at backtrace.cc:203\r\n3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n4: format_backtrace(bool) at backtrace.cc:198\r\n5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n6: watchable_map_var_t<std::pair<uuid_u, uuid_u>, contract_ack_t>::entry_t::entry_t(watchable_map_var_t<std::pair<uuid_u, uuid_u>, contract_ack_t>*, std::pair<uuid_u, uuid_u> const&, contract_ack_t const&) at watchable_map.tcc:98\r\n7: minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>::on_update(signal_t*, peer_id_t const&, uuid_u const&, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> > const&, boost::optional<contract_ack_t> const&) at minidir.tcc:89\r\n8: std::_Mem_fn<void (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>::*)(signal_t*, peer_id_t const&, uuid_u const&, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> > const&, boost::optional<contract_ack_t> const&)>::operator()(minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>*, signal_t*, peer_id_t const&, uuid_u const&, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> > const&, boost::optional<contract_ack_t> const&) const at functional:551\r\n9: void std::_Bind<std::_Mem_fn<void (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>::*)(signal_t*, peer_id_t const&, uuid_u const&, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> > const&, boost::optional<contract_ack_t> const&)> (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>)>::__call<void, signal_t*&&, peer_id_t&&, uuid_u&&, fifo_enforcer_write_token_t&&, bool&&, boost::optional<std::pair<uuid_u, uuid_u> >&&, boost::optional<contract_ack_t>&&, 0, 1, 2, 3, 4, 5, 6, 7>(std::tuple<signal_t*&&, peer_id_t&&, uuid_u&&, fifo_enforcer_write_token_t&&, bool&&, boost::optional<std::pair<uuid_u, uuid_u> >&&, boost::optional<contract_ack_t>&&>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6, 7>) at functional:1147\r\n10: void std::_Bind<std::_Mem_fn<void (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>::*)(signal_t*, peer_id_t const&, uuid_u const&, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> > const&, boost::optional<contract_ack_t> const&)> (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>)>::operator()<signal_t*, peer_id_t, uuid_u, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> >, boost::optional<contract_ack_t>, void>(signal_t*&&, peer_id_t&&, uuid_u&&, fifo_enforcer_write_token_t&&, bool&&, boost::optional<std::pair<uuid_u, uuid_u> >&&, boost::optional<contract_ack_t>&&) at functional:1206\r\n11: std::_Function_handler<void (signal_t*, peer_id_t, uuid_u, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> >, boost::optional<contract_ack_t>), std::_Bind<std::_Mem_fn<void (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>::*)(signal_t*, peer_id_t const&, uuid_u const&, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> > const&, boost::optional<contract_ack_t> const&)> (minidir_read_manager_t<std::pair<uuid_u, uuid_u>, contract_ack_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>, std::_Placeholder<6>, std::_Placeholder<7>)> >::_M_invoke(std::_Any_data const&, signal_t*, peer_id_t, uuid_u, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> >, boost::optional<contract_ack_t>) at functional:1780\r\n12: std::function<void (signal_t*, peer_id_t, uuid_u, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> >, boost::optional<contract_ack_t>)>::operator()(signal_t*, peer_id_t, uuid_u, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> >, boost::optional<contract_ack_t>) const at functional:2161\r\n13: mailbox_t<void (peer_id_t, uuid_u, fifo_enforcer_write_token_t, bool, boost::optional<std::pair<uuid_u, uuid_u> >, boost::optional<contract_ack_t>)>::read_impl_t::read(read_stream_t*, signal_t*) at typed.hpp:603\r\n14: mailbox_manager_t::mailbox_read_coroutine(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, threadnum_t, unsigned long, std::vector<char, std::allocator<char> >*, long, mailbox_manager_t::force_yield_t) at mailbox.cc:277\r\n15: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x1872733] at 0x1872733 ()\r\n16: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x187326e] at 0x187326e ()\r\n17: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n18: coro_t::run() at coroutines.cc:207\r\n...\r\n```\r\n\r\nI don't think this code has been changed since 2.1, so I'd assume it still exists in the `v2.1.x` branch."
  , issueState = "open"
  , issueId = Id 107631980
  , issueComments = 9
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 54
          , milestoneNumber = 119
          , milestoneClosedIssues = 8
          , milestoneDescription = Nothing
          , milestoneTitle = "2.3.x"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/119"
          , milestoneCreatedAt = 2016 (-04) (-06) 18 : 05 : 18 UTC
          , milestoneState = "open"
          }
  }