Issue
  { issueClosedAt = Just 2015 (-08) (-24) 23 : 54 : 15 UTC
  , issueUpdatedAt = 2015 (-08) (-24) 23 : 54 : 15 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4736/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4736"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4736
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 167416
          , simpleUserLogin = N "VeXocide"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/167416?v=3"
          , simpleUserUrl = "https://api.github.com/users/VeXocide"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crash during table fuzzing: Guarantee failed: [val.has()]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4736"
  , issueCreatedAt = 2015 (-08) (-21) 07 : 50 : 52 UTC
  , issueBody =
      Just
        "Implemented a new table fuzzer to attempt to weed out any v2.1.x bugs we haven't found yet, got the following crash.  This test did not use any changefeeds, but did use multiple client threads.\n\n```\n2015-08-21T00:41:56.982640554 16.384082s error: Error in ../src/rdb_protocol/datum.cc at line 1896:\n2015-08-21T00:41:56.983683027 16.385124s error: Guarantee failed: [val.has()]\n2015-08-21T00:41:56.984502630 16.385944s error: Backtrace:\n2015-08-21T00:42:02.139539142 21.540985s error: Fri Aug 21 00:41:56 2015\n\n1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:100\n2: backtrace_t::backtrace_t() at backtrace.cc:203\n3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\n4: format_backtrace(bool) at backtrace.cc:198\n5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\n6: ql::datum_object_builder_t::add(datum_string_t const&, ql::datum_t) at datum.cc:1896\n7: ql::datum_object_builder_t::add(char const*, ql::datum_t) at datum.cc:1904\n8: make_replacement_pair(ql::datum_t, ql::datum_t) at table_common.cc:17\n9: real_reql_cluster_interface_t::reconfigure_internal(counted_t<ql::db_t const> const&, uuid_u const&, table_generate_config_params_t const&, bool, signal_t*, ql::datum_t*) at real_reql_cluster_interface.cc:616\n10: real_reql_cluster_interface_t::table_reconfigure(counted_t<ql::db_t const>, name_string_t const&, table_generate_config_params_t const&, bool, signal_t*, ql::datum_t*, admin_err_t*) at real_reql_cluster_interface.cc:640\n11: artificial_reql_cluster_interface_t::table_reconfigure(counted_t<ql::db_t const>, name_string_t const&, table_generate_config_params_t const&, bool, signal_t*, ql::datum_t*, admin_err_t*) at artificial_reql_cluster_interface.cc:262\n12: ql::reconfigure_term_t::eval_impl_on_table_or_db(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t, counted_t<ql::db_t const> const&, boost::optional<name_string_t> const&) const at db_table.cc:539\n13: ql::table_or_db_meta_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at db_table.cc:400\n14: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at op.cc:225\n15: ql::runtime_term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const at term.cc:350\n16: ql::query_cache_t::ref_t::run(ql::env_t*, Response*) at query_cache.cc:301\n17: ql::query_cache_t::ref_t::fill_response(Response*) at query_cache.cc:247\n18: ql::run(ql::query_id_t&&, ql::protob_t<Query>, Response*, ql::query_cache_t*, signal_t*) at term.cc:269\n19: rdb_query_server_t::run_query(ql::query_id_t&&, ql::protob_t<Query> const&, Response*, ql::query_cache_t*, signal_t*) at query_server.cc:49\n20: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const::{lambda()#1}::operator()() const at protob.cc:615\n21: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const::{lambda()#1}&&) at protob.cc:555\n22: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const at protob.cc:612\n23: std::_Function_handler<void (std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*), void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)#1}>::_M_invoke(std::_Any_data const&, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) at functional:1779\n24: std::function<void (std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*)>::operator()(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) const at functional:2160\n25: std_function_callback_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::coro_pool_callback(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, signal_t*) at coro_pool.hpp:30\n26: coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::worker_run(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t) at coro_pool.hpp:68\n27: std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>::operator()(coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t) const at functional:550\n28: void std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>::__call<void, , 0, 1, 2>(std::tuple<>&&, std::_Index_tuple<0, 1, 2>) at functional:1145\n29: void std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1203\n30: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\n31: callable_action_wrapper_t::run() at runtime_utils.cc:43\n32: coro_t::run() at coroutines.cc:205\n33: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::*)(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)> (coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >*, std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, auto_drainer_t::lock_t)>&&) at coroutines.hpp:58\n34: coro_pool_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > >::on_source_availability_changed() at coro_pool.hpp:88\n35: availability_control_t::set_available(bool) at passive_producer.hpp:65\n36: limited_fifo_queue_t<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, std::list<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > >, std::allocator<std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > > > >::push(std::_List_iterator<std::pair<ql::query_id_t, ql::protob_t<Query> > > const&) at limited_fifo.hpp:35\n37: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda()#1}::operator()() const at protob.cc:649\n38: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}&&) at protob.cc:555\n39: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*) at protob.cc:644\n40: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.cc:489\n41: std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(query_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:550\n42: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0, 1, 2>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0, 1, 2>) at functional:1145\n43: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1203\n44: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1779\n45: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2160\n46: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:924\n47: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at functional:550\n48: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1145\n49: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::operator()<, void>() at functional:1203\n50: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >::run_action() at callable_action.hpp:31\n51: callable_action_wrapper_t::run() at runtime_utils.cc:43\n52: coro_t::run() at coroutines.cc:205\n53: void coro_t::spawn_now_dangerously<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>&&) at coroutines.hpp:52\n54: linux_nonthrowing_tcp_listener_t::accept_loop(auto_drainer_t::lock_t) at network.cc:891\n55: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)>::operator()(linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t) const at functional:550\n56: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1145\n57: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1203\n58: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\n59: callable_action_wrapper_t::run() at runtime_utils.cc:43\n60: coro_t::run() at coroutines.cc:205\n61: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:58\n62: linux_nonthrowing_tcp_listener_t::begin_listening() at network.cc:684\n63: linux_tcp_listener_t::linux_tcp_listener_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)> const&) at network.cc:955\n64: query_server_t::query_server_t(rdb_context_t*, std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, query_handler_t*, unsigned int) at protob.cc:369\n65: rdb_query_server_t::rdb_query_server_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, rdb_context_t*) at query_server.cc:19\n66: do_serve(io_backender_t*, bool, base_path_t const&, metadata_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:487\n67: serve(io_backender_t*, base_path_t const&, metadata_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:635\n68: run_rethinkdb_serve(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, server_config_versioned_t const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:805\n69: void std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, uuid_u*, server_config_versioned_t*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, server_config_versioned_t const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)>::__call<void, , 0, 1, 2, 3, 4, 5, 6, 7, 8, 9>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6, 7, 8, 9>) at functional:1145\n70: void std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, uuid_u*, server_config_versioned_t*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, server_config_versioned_t const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)>::operator()<, void>() at functional:1203\n71: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, uuid_u*, server_config_versioned_t*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, server_config_versioned_t const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:1779\n72: std::function<void ()>::operator()() const at functional:2160\n73: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\n74: std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()(starter_t*, std::function<void ()> const&) const at functional:550\n75: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1145\n76: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::operator()<, void>() at functional:1203\n77: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:1779\n78: std::function<void ()>::operator()() const at functional:2160\n79: callable_action_instance_t<std::function<void ()>&>::run_action() at callable_action.hpp:31\n80: callable_action_wrapper_t::run() at runtime_utils.cc:43\n81: coro_t::run() at coroutines.cc:205\n82: coro_t* coro_t::spawn_sometime<std::function<void ()>&>(std::function<void ()>&) at coroutines.hpp:58\n83: starter_t::on_thread_switch() at runtime.cc:57\n84: linux_message_hub_t::on_event(int) at message_hub.cc:154\n85: epoll_event_queue_t::run() at epoll.cc:115\n86: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:161\n87: /lib/x86_64-linux-gnu/libpthread.so.0(+0x7e9a) [0x7f5819814e9a] at 0x7f5819814e9a (/lib/x86_64-linux-gnu/libpthread.so.0)\n88: clone+0x6d at 0x7f58195418bd (/lib/x86_64-linux-gnu/libc.so.6)\n2015-08-21T00:42:02.143574006 21.545015s error: Exiting.\n```\n"
  , issueState = "closed"
  , issueId = Id 102318921
  , issueComments = 6
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 106
          , milestoneClosedIssues = 18
          , milestoneDescription = Just ""
          , milestoneTitle = "2.1.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/106"
          , milestoneCreatedAt = 2015 (-08) (-21) 22 : 34 : 48 UTC
          , milestoneState = "closed"
          }
  }