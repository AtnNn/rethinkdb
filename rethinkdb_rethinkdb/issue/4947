Issue
  { issueClosedAt = Just 2015 (-11) (-03) 18 : 33 : 05 UTC
  , issueUpdatedAt = 2015 (-11) (-03) 18 : 33 : 09 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4947/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4947"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4947
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crashes / Test failures in initial value tests on next"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4947"
  , issueCreatedAt = 2015 (-10) (-12) 22 : 39 : 18 UTC
  , issueBody =
      Just
        "The following tests are currently failing on next:\r\ninit.rb\r\ninit_del.rb\r\npolyglot/changefeeds/edge\r\n\r\ninit.rb and init_del.rb actually crash the server:\r\n```\r\nerror: Error in src/rdb_protocol/datum.cc at line 1166:\r\nerror: Unreachable code: \r\nerror: Backtrace:\r\nerror: Mon Oct 12 15:37:15 2015\r\n       \r\n       1 [0x16e9e3b]: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:100\r\n       2 [0x220feeb]: backtrace_t::backtrace_t() at backtrace.cc:203\r\n       3 [0x22109d5]: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n       4 [0x220fb77]: format_backtrace(bool) at backtrace.cc:198\r\n       5 [0x17f23ee]: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6 [0x20644e0]: ql::escape_nulls_from_reql_version_for_sindex(reql_version_t) at datum.cc:1166\r\n       7 [0x2064071]: ql::datum_t::print_secondary(reql_version_t, store_key_t const&, boost::optional<unsigned long>) const at datum.cc:1111\r\n       8 [0x214953f]: ql::changefeed::splice_stream_t::discard(store_key_t const&, boost::optional<unsigned long> const&, std::pair<uuid_u, unsigned long> const&, ql::changefeed::indexed_datum_t const&) at changefeed.cc:2537\r\n       9 [0x2148ccc]: ql::changefeed::splice_stream_t::next_stream_batch(ql::env_t*, ql::batchspec_t const&) at changefeed.cc:2499\r\n       10 [0x2148a17]: ql::changefeed::stream_t<ql::changefeed::range_sub_t>::next_raw_batch(ql::env_t*, ql::batchspec_t const&) at changefeed.cc:1214\r\n       11 [0x21abf0a]: ql::eager_datum_stream_t::next_grouped_batch(ql::env_t*, ql::batchspec_t const&, std::map<ql::datum_t, std::vector<ql::datum_t, std::allocator<ql::datum_t> >, optional_datum_less_t, std::allocator<std::pair<ql::datum_t const, std::vector<ql::datum_t, std::allocator<ql::datum_t> > > > >*) at datum_stream.cc:956\r\n       12 [0x21ac4ef]: ql::eager_datum_stream_t::next_batch_impl(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:992\r\n       13 [0x21ab856]: ql::datum_stream_t::next_batch(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:911\r\n       14 [0x1f4c753]: ql::query_cache_t::ref_t::serve(ql::env_t*, ql::response_t*) at query_cache.cc:305\r\n       15 [0x1f4b58f]: ql::query_cache_t::ref_t::fill_response(ql::response_t*) at query_cache.cc:202\r\n       16 [0x21ec27f]: rdb_query_server_t::run_query(ql::query_params_t*, ql::response_t*, signal_t*) at query_server.cc:44\r\n       17 [0x22430f5]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const at server.cc:434\r\n       18 [0x2242cf3]: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda()#1}::operator()() const::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda()#1}::operator()() const::{lambda()#1}&&) at server.cc:384\r\n       19 [0x2242b69]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::query_server_t::connection_loop<json_protocol_t>::{lambda()#1}::operator()() const at server.cc:432\r\n       20 [0x22429bc]: callable_action_instance_t<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}>::run_action() at callable_action.hpp:31\r\n       21 [0x160a752]: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       22 [0x1610417]: coro_t::run() at coroutines.cc:205\r\n       23 [0x224275d]: void coro_t::spawn_now_dangerously<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}>(void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}&&) at coroutines.hpp:53\r\n       24 [0x22421b4]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*) at server.cc:422\r\n       25 [0x223eb1b]: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at server.cc:326\r\n       26 [0x2243e00]: std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(query_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:550\r\n       27 [0x2243d1d]: _ZNSt5_BindIFSt7_Mem_fnIM14query_server_tFvRK12scoped_ptr_tI27linux_tcp_conn_descriptor_tEN14auto_drainer_t6lock_tEEEPS1_St12_PlaceholderILi1EES8_EE6__callIvJRS4_EJLi0ELi1ELi2EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x9d at functional:1145\r\n       28 [0x2243c6d]: _ZNSt5_BindIFSt7_Mem_fnIM14query_server_tFvRK12scoped_ptr_tI27linux_tcp_conn_descriptor_tEN14auto_drainer_t6lock_tEEEPS1_St12_PlaceholderILi1EES8_EEclIJRS4_EvEET0_DpOT_+0x3d at functional:1203\r\n       29 [0x22435e2]: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1779\r\n       30 [0x15f8538]: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2160\r\n       31 [0x15f549a]: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:924\r\n       32 [0x15fb068]: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at functional:550\r\n       33 [0x15fafcf]: _ZNSt5_BindIFSt7_Mem_fnIM32linux_nonthrowing_tcp_listener_tFviEEPS1_iEE6__callIvJEJLi0ELi1EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x6f at functional:1145\r\n       34 [0x15faf56]: _ZNSt5_BindIFSt7_Mem_fnIM32linux_nonthrowing_tcp_listener_tFviEEPS1_iEEclIJEvEET0_DpOT_+0x26 at functional:1203\r\n       35 [0x15faeac]: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >::run_action() at callable_action.hpp:31\r\n       36 [0x160a752]: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       37 [0x1610417]: coro_t::run() at coroutines.cc:205\r\n       38 [0x15f815d]: void coro_t::spawn_now_dangerously<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>&&) at coroutines.hpp:53\r\n       39 [0x15f43ba]: linux_nonthrowing_tcp_listener_t::accept_loop(auto_drainer_t::lock_t) at network.cc:891\r\n       40 [0x15fcb6b]: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)>::operator()(linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t) const at functional:550\r\n       41 [0x15fca9c]: _ZNSt5_BindIFSt7_Mem_fnIM32linux_nonthrowing_tcp_listener_tFvN14auto_drainer_t6lock_tEEEPS1_S3_EE6__callIvJEJLi0ELi1EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x7c at functional:1145\r\n       42 [0x15fca16]: _ZNSt5_BindIFSt7_Mem_fnIM32linux_nonthrowing_tcp_listener_tFvN14auto_drainer_t6lock_tEEEPS1_S3_EEclIJEvEET0_DpOT_+0x26 at functional:1203\r\n       43 [0x15fc93c]: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n       44 [0x160a752]: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       45 [0x1610417]: coro_t::run() at coroutines.cc:205\r\n       46 [0x15f775d]: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:59\r\n       47 [0x15f3e1b]: linux_nonthrowing_tcp_listener_t::begin_listening() at network.cc:684\r\n       48 [0x15f5822]: linux_tcp_listener_t::linux_tcp_listener_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)> const&) at network.cc:955\r\n       49 [0x223dd8f]: query_server_t::query_server_t(rdb_context_t*, std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, query_handler_t*, unsigned int) at server.cc:204\r\n       50 [0x21ec009]: rdb_query_server_t::rdb_query_server_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, rdb_context_t*) at query_server.cc:16\r\n       51 [0x184d78e]: do_serve(io_backender_t*, bool, base_path_t const&, metadata_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:487\r\n       52 [0x184ec3c]: serve(io_backender_t*, base_path_t const&, metadata_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:635\r\n       53 [0x1874285]: run_rethinkdb_serve(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, server_config_versioned_t const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:805\r\n       54 [0x1887f84]: _ZNSt5_BindIFPFvRK11base_path_tP12serve_info_t21file_direct_io_mode_tiRKN5boost8optionalINS7_ImEEEEPK6uuid_uPK25server_config_versioned_tPK30cluster_semilattice_metadata_tP16directory_lock_tPbES0_S4_S5_iS9_PSC_PSF_PSI_SM_SN_EE6__callIvJEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8ELi9EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x224 at functional:1145\r\n       55 [0x1887d56]: _ZNSt5_BindIFPFvRK11base_path_tP12serve_info_t21file_direct_io_mode_tiRKN5boost8optionalINS7_ImEEEEPK6uuid_uPK25server_config_versioned_tPK30cluster_semilattice_metadata_tP16directory_lock_tPbES0_S4_S5_iS9_PSC_PSF_PSI_SM_SN_EEclIJEvEET0_DpOT_+0x26 at functional:1203\r\n       56 [0x1886d0d]: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, uuid_u*, server_config_versioned_t*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, server_config_versioned_t const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:1779\r\n       57 [0x15c490e]: std::function<void ()>::operator()() const at functional:2160\r\n       58 [0x161b0a1]: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\r\n       59 [0x161be9a]: std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()(starter_t*, std::function<void ()> const&) const at functional:550\r\n       60 [0x161be00]: _ZNSt5_BindIFSt7_Mem_fnIM9starter_tFvRKSt8functionIFvvEEEEPS1_S4_EE6__callIvJEJLi0ELi1EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x70 at functional:1145\r\n       61 [0x161bd86]: _ZNSt5_BindIFSt7_Mem_fnIM9starter_tFvRKSt8functionIFvvEEEEPS1_S4_EEclIJEvEET0_DpOT_+0x26 at functional:1203\r\n       62 [0x161b61d]: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:1779\r\n       63 [0x15c490e]: std::function<void ()>::operator()() const at functional:2160\r\n       64 [0x161ae79]: callable_action_instance_t<std::function<void ()>&>::run_action() at callable_action.hpp:31\r\n       65 [0x160a752]: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       66 [0x1610417]: coro_t::run() at coroutines.cc:205\r\n       67 [0x161ac2d]: coro_t* coro_t::spawn_sometime<std::function<void ()>&>(std::function<void ()>&&&) at coroutines.hpp:59\r\n       68 [0x161abd5]: starter_t::on_thread_switch() at runtime.cc:57\r\n       69 [0x1619c40]: linux_message_hub_t::on_event(int) at message_hub.cc:154\r\n       70 [0x1602a07]: epoll_event_queue_t::run() at epoll.cc:115\r\n       71 [0x160b5ed]: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:164\r\n       72 [0x7f4e0a5cae9a]: /lib/x86_64-linux-gnu/libpthread.so.0(+0x7e9a) [0x7f4e0a5cae9a] at 0x7f4e0a5cae9a (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       73 [0x7f4e0a2f78bd]: clone+0x6d at 0x7f4e0a2f78bd (/lib/x86_64-linux-gnu/libc.so.6)\r\nerror: Exiting.\r\n```\r\n\r\nthe `init` / `init_del` tests also seem to still use the old `include_initial_vals` optarg instead of `include_initial`.\r\n\r\nPinging @mlucy "
  , issueState = "closed"
  , issueId = Id 111069099
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 64
          , milestoneClosedIssues = 228
          , milestoneDescription =
              Just
                "These issues are no longer relevant to the current version of RethinkDB"
          , milestoneTitle = "outdated"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/64"
          , milestoneCreatedAt = 2014 (-03) (-28) 00 : 17 : 40 UTC
          , milestoneState = "closed"
          }
  }