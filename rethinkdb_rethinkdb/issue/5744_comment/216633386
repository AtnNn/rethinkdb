IssueComment
  { issueCommentUpdatedAt = 2016 (-05) (-03) 19 : 15 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/216633386"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5744#issuecomment-216633386"
  , issueCommentCreatedAt = 2016 (-05) (-03) 19 : 07 : 43 UTC
  , issueCommentBody =
      "@jumblerg I don't think it's really deception in any meaningful sense. As @danielmewes said it's a simulation, but it's not as if it's a simulation that was done to mislead people about what RethinkDB is capable of. RethinkDB really does allow streaming realtime results like this, straight from the database, in a way that scales to thousands of connections per shard. \r\n\r\nSo while this particular demo doesn't use that capability (it's part of a static site, so there is no database underneath it), anyone who looks at the demo and believes RethinkDB enables that kind of capability would not walk away with an incorrect impression. The difference in the javascript code would be trivial: instead of getting the data from a random generator, it would receive it over a websocket or the like. Not an interesting distinction.\r\n\r\nI do think we should probably slap a \"results simulated\" fine print on the demo, but I think the level of outrage in this thread is a bit misplaced given that we aren't fundamentally trying to pull the wool over prospective users' eyes. We have numerous examples and demo code that do exactly this kind of thing, it just happens that our landing page is a static site, so we simulated the results there."
  , issueCommentId = 216633386
  }