IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-04) 20 : 38 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/192458730"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5472#issuecomment-192458730"
  , issueCommentCreatedAt = 2016 (-03) (-04) 20 : 38 : 18 UTC
  , issueCommentBody =
      "> For what it's worth, though, these are the intended semantics: it's identical to `table.indexCreate('now'){|row| Time.now}`.\r\n\r\nThe semantics are inconsistent though. This function is correctly rejected by RethinkDB as being non-deterministic:\r\n```js\r\ntable.indexCreate('uuid', (row) => r.uuid())\r\n```\r\n\r\nWe can't (easily) detect which client-side functions were used to generate the ReQL lambda. However by accepting the server-side function `r.now()` in a secondary index, we're leaking the implementation detail that `r.now` is transformed into something deterministic at compile time. I think that is bad."
  , issueCommentId = 192458730
  }