Issue
  { issueClosedAt = Just 2013 (-07) (-10) 03 : 19 : 16 UTC
  , issueUpdatedAt = 2013 (-07) (-18) 19 : 09 : 00 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1109/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1109"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 1109
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crashes when running multiple rethinkdb instances on the same data directory"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1109"
  , issueCreatedAt = 2013 (-07) (-03) 03 : 49 : 06 UTC
  , issueBody =
      Just
        "This isn't exactly a major problem considering the timing, and the use case is already erroneous.  If two rethinkdb instances are launched at pretty much the exact same time, they may end up fighting over some files before the advisory locking check (which usually occurs on the metadata files).  This is most notably apparent in the `recreate_temporary_directory(...)` call.\r\n\r\nTo reproduce, the following command is executed:\r\n`rethinkdb --bind all & rethinkdb -o 1 --bind all &`\r\n\r\nThis results in both rethinkdb instances trying to create and delete the `rethinkdb_data/tmp` directory at the same time, which causes at least one of them to crash before they even check to see if another instance is using the data directory.\r\n\r\nInvestigate moving the `recreate_temporary_directory(...)` calls to after the metadata  file advisory lock check."
  , issueState = "closed"
  , issueId = Id 16300494
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 44
          , milestoneClosedIssues = 24
          , milestoneDescription = Nothing
          , milestoneTitle = "1.7.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/44"
          , milestoneCreatedAt = 2013 (-07) (-18) 19 : 08 : 59 UTC
          , milestoneState = "closed"
          }
  }