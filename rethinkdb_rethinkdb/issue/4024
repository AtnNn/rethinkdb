Issue
  { issueClosedAt = Just 2015 (-06) (-05) 03 : 34 : 27 UTC
  , issueUpdatedAt = 2015 (-06) (-05) 03 : 35 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4024/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4024"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4024
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 563469
        , simpleUserLogin = N "niieani"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/563469?v=3"
        , simpleUserUrl = "https://api.github.com/users/niieani"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Strange behaviour with queries using recursive functions"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4024"
  , issueCreatedAt = 2015 (-04) (-07) 23 : 14 : 52 UTC
  , issueBody =
      Just
        "Hello,\r\n\r\nSince RethinkDB doesn't support recursive queries natively yet (https://github.com/rethinkdb/rethinkdb/issues/2751), I've developed this workaround:\r\n\r\n```javascript\r\nvar howManyRecursions = 3;\r\n\r\nvar recursiveJoin = function(bubble, count) {\r\n  if (count <= 0)\r\n    return bubble;\r\n  return r.branch(\r\n    // IF\r\n    bubble.hasFields('components'),\r\n    // THEN\r\n    bubble.merge(\r\n      r.object(\r\n        'components', bubble.getField('components')\r\n        .eqJoin(function(t){return t}, r.table(\"bubbles\"))\r\n        .zip().map(function(innerBubble){ return recursiveJoin(innerBubble, count-1) })\r\n      )\r\n    ),\r\n    // ELSE\r\n    bubble\r\n  )\r\n};\r\n\r\nr.table('bubbles')\r\n  .get('79b139b3-789a-f39a-5406-b5f2a563db0f').merge(\r\n    r.object(\r\n      'components', r.row('components')\r\n      .eqJoin(function(t){return t}, r.table(\"bubbles\"))\r\n      .zip().map(function(innerBubble){ return recursiveJoin(innerBubble, howManyRecursions) })\r\n    ));\r\n```\r\n\r\nThis works rather well with the official JS client as long as the number of recursions is small (something like 15 recursions takes 50ms on my computer), but when I do 150, RethinkDb's process stops responding or receiving connections again and needs to be restarted.\r\n\r\nIf I understand it correctly, in the above case the function is not reused by the server, but actually repeated by the client as many times as the recursion happens (calculated locally).\r\n\r\nSo I've tried reimplementing the same concept using server-side concepts, like this:\r\n```javascript\r\nvar recurringFunction = function(count) {\r\n  return r.branch(\r\n    // IF\r\n    r.expr(count).gt(4),\r\n    // THEN\r\n    recurringFunction(r.expr(count).sub(1)),\r\n    // ELSE\r\n    r.expr(count)\r\n  );\r\n};\r\n\r\nr.json('[1,2,3]').map(function(item){\r\n  return recurringFunction(6);\r\n})\r\n```\r\nBut I get an error: \r\n```\r\nJavaScript error:\r\nRangeError: Maximum call stack size exceeded.\r\n```\r\n\r\nAny ideas why this is happening?\r\n\r\nIf you want to test the first implementation, create here's a sample table (```bubbles```) with level 2 join recursion:\r\n\r\n```json\r\n[\r\n  {\r\n    \"components\": [\r\n      \"44ecf62e-801d-4215-b5d1-f9e229865954\",\r\n      \"fcf22d57-f86f-dbe3-5638-d60fe6a7aef7\",\r\n      \"31cba1e8-bcda-c755-288c-271c2f9afa67\"\r\n    ],\r\n    \"id\": \"79b139b3-789a-f39a-5406-b5f2a563db0f\"\r\n  },\r\n  {\r\n    \"id\": \"cada4674-cc8a-457e-ba99-b3aefb417fb5\",\r\n    \"value\": \"inner1\"\r\n  },\r\n  {\r\n    \"components\": [\r\n      \"cada4674-cc8a-457e-ba99-b3aefb417fb5\",\r\n      \"7c482d67-31b6-26f5-0f3b-6ffc7704697f\"\r\n    ],\r\n    \"id\": \"31cba1e8-bcda-c755-288c-271c2f9afa67\"\r\n  },\r\n  {\r\n    \"id\": \"44ecf62e-801d-4215-b5d1-f9e229865954\",\r\n    \"value\": \"test2\"\r\n  },\r\n  {\r\n    \"id\": \"fcf22d57-f86f-dbe3-5638-d60fe6a7aef7\",\r\n    \"value\": \"test1\"\r\n  },\r\n  {\r\n    \"id\": \"7c482d67-31b6-26f5-0f3b-6ffc7704697f\",\r\n    \"value\": \"inner2\"\r\n  }\r\n]\r\n```"
  , issueState = "closed"
  , issueId = Id 67010542
  , issueComments = 13
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }