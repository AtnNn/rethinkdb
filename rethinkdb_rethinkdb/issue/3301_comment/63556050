IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-18) 22 : 18 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/63556050"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3301#issuecomment-63556050"
  , issueCommentCreatedAt = 2014 (-11) (-18) 22 : 18 : 14 UTC
  , issueCommentBody =
      "> Note that this would still have the same security issues as if we normalized everything.\r\n\r\nI don't think that's true.  In the specific example @srh gave, the problem was inserting Unicode data, retrieving normalized Unicode data, and then testing for set membership incorrectly.  How we compare Unicode inside RethinkDB doesn't affect that.\r\n\r\nIn general I think most bugs and confusion would come from getting out different data than you put in, not from how we compare things internally in RethinkDB.  Internally we basically have to compare things correctly; doing a byte-order compare on Unicode strings doesn't make much sense."
  , issueCommentId = 63556050
  }