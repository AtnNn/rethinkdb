IssueComment
  { issueCommentUpdatedAt = 2016 (-08) (-26) 19 : 43 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 940628
        , simpleUserLogin = N "shengc"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/940628?v=3"
        , simpleUserUrl = "https://api.github.com/users/shengc"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/242832658"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/6075#issuecomment-242832658"
  , issueCommentCreatedAt = 2016 (-08) (-26) 19 : 43 : 45 UTC
  , issueCommentBody =
      "I thought `optArg(\"index\", \"tx\").between(offset, r.maxVal())` guarantees such a read only returns what is currently available in rethink, no? Also all insertions happen in a single thread executor, which means all insertions happen in a strict order (no concurrency), and an insertion only happens _after_ the immediately previous insertion returns. Do you mean miss of insertion can still happen for a read in this case ?\r\n\r\nWe cannot go back to replay the skipped transactions. Since our application strongly depends on all insertions replayed in an ordered manner, if one is skipped, the application will start to produce false positive alarm which is rather annoying. "
  , issueCommentId = 242832658
  }