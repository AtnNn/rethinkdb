IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-12) 23 : 14 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20909419"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1100#issuecomment-20909419"
  , issueCommentCreatedAt = 2013 (-07) (-12) 23 : 13 : 36 UTC
  , issueCommentBody =
      "It's similar to any portability effort for a big project built on a single-flavored system. Here is a list of things that come to mind off the top of my head:\r\n\r\n* The build system assumes the unix toolchain and would have to be ported to Windows. Since the build process is pretty complex, this may be non-trivial.\r\n* RethinkDB uses some pretty esoteric edge cases for unix syscalls sometimes. It would be easy to port the syscalls to Windows, but there might be lots of bugs in the edge cases.\r\n* Minor compiler differences can be a pain (assuming we'd port to compile with Visual Studio, which I think we'd want)\r\n* Minor standard library differences\r\n* RethinkDB does some coroutine magic that may or may not be trivial to port to Windows Fibers.\r\n* Most of the dependencies we use should cross platform, but again, there may be some weirdness on Windows\r\n\r\nThere are probably more I can't think of. This isn't an impossible project by any means, but it's also a non-trivial amount of effort.\r\n"
  , issueCommentId = 20909419
  }