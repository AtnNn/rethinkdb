Issue
  { issueClosedAt = Just 2013 (-05) (-08) 07 : 30 : 30 UTC
  , issueUpdatedAt = 2013 (-05) (-09) 19 : 54 : 57 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/757/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/757"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 757
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "RethinkDB 1.4.4 crash with branch queries and default database"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/757"
  , issueCreatedAt = 2013 (-05) (-06) 13 : 48 : 20 UTC
  , issueBody =
      Just
        "```\ninfo: Running rethinkdb 1.4.4-0ubuntu1~lucid (GCC 4.4.3)...\ninfo: Running on Linux 2.6.32-46-generic x86_64\ninfo: Loading data from directory rethinkdb_data\ninfo: Listening for intracluster connections on port 29015\ninfo: Listening for client driver connections on port 28015\ninfo: Listening for administrative HTTP connections on port 8080\ninfo: Listening on addresses: 127.0.0.1, 127.0.1.1\ninfo: To fully expose RethinkDB on the network, bind to all addresses\ninfo: by running rethinkdb with the `--bind all' command line option.\ninfo: Server ready\nVersion: rethinkdb 1.4.4-0ubuntu1~lucid (GCC 4.4.3)\nerror: Error in src/arch/runtime/thread_pool.cc at line 319:\nerror: Segmentation fault from reading the address (nil).\nerror: Backtrace:\nerror: Mon May  6 15:12:57 2013\n\n       1: rethinkdb() [0x52e3cf]\n       2: rethinkdb() [0x52f764]\n       3: rethinkdb() [0x5dbcef]\n       4: rethinkdb() [0x5d1972]\n       5: +0xf8f0 at 0x7ff43f5688f0 (/lib/libpthread.so.0)\n       6: rethinkdb() [0x4e4b3f]\n       7: rethinkdb() [0x48e794]\n       8: rethinkdb() [0x48eb1d]\n       9: rethinkdb() [0x491e92]\n       10: rethinkdb() [0x4f0084]\n       11: rethinkdb() [0x4e4b42]\n       12: rethinkdb() [0x491f31]\n       13: rethinkdb() [0x4f8910]\n       14: rethinkdb() [0x4e4b42]\n       15: rethinkdb() [0x491f31]\n       16: rethinkdb() [0x4f9a00]\n       17: rethinkdb() [0x4e4b42]\n       18: rethinkdb() [0x491f31]\n       19: rethinkdb() [0x4ec68a]\n       20: rethinkdb() [0x4e4b42]\n       21: rethinkdb() [0x491f31]\n       22: rethinkdb() [0x4ec5a5]\n       23: rethinkdb() [0x4e4b42]\n       24: rethinkdb() [0x4e7b2e]\n       25: rethinkdb() [0x5020d6]\n       26: rethinkdb() [0x502a3e]\n       27: rethinkdb() [0x503ea1]\n       28: rethinkdb() [0x504f28]\n       29: rethinkdb() [0x5031fd]\n       30: rethinkdb() [0x5bacaa]\n       31: rethinkdb() [0x5cecbc]\nerror: Exiting.\nTrace/breakpoint trap\n```\n\nI can reproduce this reliably, and it happens with a number of different queries, which have in common that they contain a ReQL branch term.\nThe backtrace does not seem stable. I get a different one every time, and sometimes no backtrace at all.\n\nI have experimented a bit and the problem seems to be associated with using the default database in the test part of the branch. Here is a much simpler query that you can use to test and reproduce the problem:\n1. This one works, no crash:\n\n```\n    r.branch(r.table('metaData').get('HomePage').contains('versions'), r.expr(true), r.expr(false))\n```\n1. This one also works, no crash (note that we select the db explicitly):\n\n```\n    r.branch(r.db('test').table('metaData').get('HomePage').contains('versions'), r.table('metaData').get('HomePage'), r.expr(false))\n```\n1. This one crashes the server:\n\n```\n    r.branch(r.table('metaData').get('HomePage').contains('versions'), r.table('metaData').get('HomePage'), r.expr(false))\n```\n\nIn both cases, prepare the database as follows:\n\n```\nr.db('test').tableCreate('metaData', {primaryKey:'pagename'})\nr.table('metaData').insert({pagename: 'HomePage', versions: [1]})\n```\n\nAppendix: The specific query that triggered the crash from above was this one (in PHP-RQL):\n\n```\n$metaData = r\\table('metaData')->get($pagename);\n\n// If no version information is stored, default to 0\n$versionExistsTest = $metaData->ne(null)->rAnd($metaData->contains('versions'));\n$defaultVersions = r\\expr(array(0));\n\n// Get the versions field.\n$versionsQuery = $metaData('versions');\n\n$versions = r\\branch($versionExistsTest, $versionsQuery, $defaultVersions)->run($this->conn)->toNative();\n```\n"
  , issueState = "closed"
  , issueId = Id 14001576
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-05) (-15) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 8
          , milestoneClosedIssues = 183
          , milestoneDescription =
              Just "Issues that are absolutely necessary for 1.5."
          , milestoneTitle = "1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/8"
          , milestoneCreatedAt = 2013 (-03) (-20) 02 : 06 : 44 UTC
          , milestoneState = "closed"
          }
  }