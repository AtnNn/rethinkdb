IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-26) 01 : 31 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47179018"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2571#issuecomment-47179018"
  , issueCommentCreatedAt = 2014 (-06) (-26) 01 : 31 : 58 UTC
  , issueCommentBody =
      "@mlucy Would what @neumino suggests be difficult? I have no idea.\r\n\r\nIt seems like the more flexible interface, and would be able to express all the crazy things we might want to do with indexes later (e.g. #809, #955, #2426).\r\n\r\nThough I can see two disadvantages:\r\n- It adds additional state to the query chain. The first `getIntersecting()` call will apply to the first component of some secondary index. The next chained `getAll()` will apply to the second one and so on. \r\n- It doesn't make obvious what you can do and what you cannot do. At the very least we should also allow chaining multiple `getAll()` behind each other I think. It should also be possible (for non-geo indexes at least) to write `getAll().between()`. However something like `between().getAll()` would not work for example."
  , issueCommentId = 47179018
  }