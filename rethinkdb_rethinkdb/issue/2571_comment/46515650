IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-19) 01 : 51 : 36 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/46515650"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2571#issuecomment-46515650"
  , issueCommentCreatedAt = 2014 (-06) (-19) 01 : 51 : 36 UTC
  , issueCommentBody =
      "> I would prefer one of:\r\n    New table-level functions\r\n        table.intersects(polygon)\r\n        table.contained_in(polygon)\r\n    Overloading get_all on geoJSON, use an optarg to distinguish intersection and contains.\r\n        table.getAll(polygon)\r\n        table.getAll(polygon, include_intersecting: false)\r\n\r\nThe problem with these is that they cannot be combined for composite indexes.\r\n\r\nIf we ignore that, I would strongly prefer the first variant with new functions defined on tables. The meaning of `table.getAll(polygon)` is not clear at all. It should probably mean testing for equality, but I think you actually meant it as testing for `contained_in`?"
  , issueCommentId = 46515650
  }