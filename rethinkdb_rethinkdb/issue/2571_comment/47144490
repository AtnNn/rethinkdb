IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-25) 19 : 06 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47144490"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2571#issuecomment-47144490"
  , issueCommentCreatedAt = 2014 (-06) (-25) 19 : 06 : 13 UTC
  , issueCommentBody =
      "I have a few questions:\r\n\r\n- In a compound index, does the geo spatial index has to be first?\r\n`r.getIntersecting([polygon, value1, value2])` doesn't strike me as super-friendly\r\n- What happens if I call `r.getIntersecting` with a normal compound index (without geo spatial index)?\r\n- How does it work with `getNearest`/`orderFrom`?\r\n- How does it work with `between` for normal values? Like `between(18, 25, {index: \"age\"}).intersects(polygon)`?\r\n\r\n\r\nAlso, I thought that `orderFrom(r.desc(...))` was a good idea, but googling around, it's not something other databases provided (though some people seems to have asked for this). So I could be ok with `getNearest`.\r\n\r\nOne more thing I found is that some developers would like to get the \"dense\" spot, but this is probably a different problem (like the circle with a radius `x` that have the most points)."
  , issueCommentId = 47144490
  }