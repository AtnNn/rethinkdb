IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-19) 01 : 47 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/46515465"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2571#issuecomment-46515465"
  , issueCommentCreatedAt = 2014 (-06) (-19) 01 : 47 : 19 UTC
  , issueCommentBody =
      "> * `table.getAll(r.intersects(polygon), {index: ...})`\r\n> * `table.getAll(r.isContained(polygon), {index: ...})`\r\n\r\nI really dislike this syntax.  It seems very un-ReQLish -- you're introducing two new terms which can only be used inside another term.  We do this in some places (`r.literal`, `r.asc/r.desc`), but it makes me cringe every time.\r\n\r\nI would prefer one of:\r\n* New table-level functions\r\n  - `table.intersects(polygon)`\r\n  - `table.contained_in(polygon)`\r\n* Overloading `get_all` on geoJSON, use an optarg to distinguish intersection and contains.\r\n  - `table.getAll(polygon)`\r\n  - `table.getAll(polygon, include_intersecting: false)`"
  , issueCommentId = 46515465
  }