IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-25) 05 : 59 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47063309"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2571#issuecomment-47063309"
  , issueCommentCreatedAt = 2014 (-06) (-25) 05 : 59 : 48 UTC
  , issueCommentBody =
      "> * Bonus (not geospatial): set1.contains(set2) : array, array -> bool contains() for two arrays. Tests whether all elements of set1 are found in set2.\r\n> * Bonus (not geospatial): set1.intersects(set2) : array, array -> bool intersects() for two arrays.\r\n\r\n* `contains` is already a term that does something else (array, el -> bool -- remember you can have an array of arrays, so we can't overload it)\r\n* Our other operations on sets are all prefixed with `set` to avoid confusion, if we add new set operations we should continue to do that.\r\n* We already have http://rethinkdb.com/api/ruby/#set_intersection and http://rethinkdb.com/api/ruby/#set_difference , which can be used for this same purpose by putting a `count` on the end.  (If we adopted the convention that the empty array is false, like some people have suggested, this would be even nicer, but that has other problems and is outside the scope of this issue.)"
  , issueCommentId = 47063309
  }