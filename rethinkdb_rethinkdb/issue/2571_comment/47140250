IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-25) 18 : 29 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47140250"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2571#issuecomment-47140250"
  , issueCommentCreatedAt = 2014 (-06) (-25) 18 : 29 : 50 UTC
  , issueCommentBody =
      "I really like the new interface -- it's delightfully simple and wonderful. A few thoughts:\r\n\r\n- I don't think leaving off compound indexes is a good idea. They're basically a necessity for the feature to be useful for mobile developers because of questions like \"give me all the restaurants within five miles of here\". It turns out that their databases are dense enough that doing it without compound indexes isn't practical.\r\n- I would think through the units question very carefully because I think it can make or break the feature. How do others do it?\r\n- I have some naming nitpicks.\r\n  - I feel pretty strongly that `toGeoJSON` should just be `toJSON` and should be mostly equivalent to `coerceTo('string')`. This way the term will work for other primitives too. I don't think we should make it special -- overloading is great when possible.\r\n  - Do we need to prefix the constructors with `geo`? It seems quite unnecessary to me -- it's hard to get confused over what these mean. Could we just call them `point`, `line`, `polygon`, `circle`, and `rectangle`? (As a consistency example, we have a function `r.ISO8601`, not `r.timeISO8601`). The only one that makes sense to prefix is `geoJSON` IMO.\r\n  - I think `orderFrom` could be better. How about `getNearest`? We'll specify in the docs that the result is ordered, and I think that will be enough. I don't think the function name necessarily needs to reflect that the result is ordered here, and `getNearest` seems much clearer and more consistent to me.\r\n\r\n"
  , issueCommentId = 47140250
  }