IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-25) 17 : 30 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 583919
        , simpleUserLogin = N "underrun"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/583919?v=3"
        , simpleUserUrl = "https://api.github.com/users/underrun"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27110847"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1394#issuecomment-27110847"
  , issueCommentCreatedAt = 2013 (-10) (-25) 17 : 30 : 57 UTC
  , issueCommentBody =
      "@atnnn that is unfortunate as I am almost certain that those who will want the \"optimized backend\" is 100% of your python users.\r\n\r\nperformance and resource utilization on the python client side lag other nosql options like mongo even with the cpp version of protobuf. without it i just can't see how anyone who wants to use python as a primary interface is going to be interested in rethinkdb. with the cpp protobuf implementation, i feel like the tradeoffs are worth what i gain with rethinkdb, but it is a pain in the butt to build and install.\r\n\r\nyou guys should take a look at zeromq for an example of how to bend pip to your will ( https://github.com/zeromq/pyzmq ). when installing the python bindings for zeromq, if the libraries are not detected on the system, they are actually built and installed as python extensions. this is by far the most powerful approach i've ever seen as it allows me to test different library version inside virtual environments without needing root access for anything.\r\n\r\nplease put the effort into making this work with native python package installation even though packaging for python sucks."
  , issueCommentId = 27110847
  }