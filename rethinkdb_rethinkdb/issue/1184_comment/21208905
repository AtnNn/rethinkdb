IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-18) 19 : 37 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21208905"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1184#issuecomment-21208905"
  , issueCommentCreatedAt = 2013 (-07) (-18) 19 : 37 : 10 UTC
  , issueCommentBody =
      "The javascript driver is not constructing an invalid query, the ReQL api is being incorrectly used and the error message received is the expected error message given this incorrect usage. `r.sub(1,2)` is binary subtraction, equivalent `1 - 2`. We don't currently support unary negation (i.e. `-1`) which is what @atnnn appears to have been trying to do.\r\n\r\nThis issue should probably be named \"ReQL Proposal: unary negation\". Doing this would require a new ReQL term type (NEGATE probably) or overloading SUB to mean negation when given only 1 argument.\r\n\r\nRegardless of which we choose, we can implement it in the JS driver side by overloading `r.sub` on 1 argument (question, do we want `r.expr(1).sub()` to do this?).\r\n\r\nIn Python and Ruby it will be a bit different because we have to overload the appropriate operator. In Python this would mean overloading `__neg__`.\r\n\r\nOne last thought, if we did add negation, how do we feel about adding `r.abs` for absolute value?"
  , issueCommentId = 21208905
  }