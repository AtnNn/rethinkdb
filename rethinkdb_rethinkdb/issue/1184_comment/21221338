IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-18) 23 : 02 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21221338"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1184#issuecomment-21221338"
  , issueCommentCreatedAt = 2013 (-07) (-18) 23 : 02 : 45 UTC
  , issueCommentBody =
      "I realize I'm late to the party, but I think I agree with @atnnn here.\r\n\r\nWe already support prefix negation in Ruby.  We translate prefix minus of `x` to `0-x`.  I don't see any reason why we shouldn't support this behavior in Python as well; it's absurdly easy for us to do (literally one line in `func.rb`) and makes life slightly better for users.\r\n\r\nI also think that we should strongly consider accepting 1-ary subtraction on the server.  Every language I know of that offers n-ary subtraction (mostly just the lisps) accepts 1-ary subtraction.  For instance, in Common Lisp, `(- 2)` gives `-2`.\r\n\r\nThe question for small issues like this isn't \"will more people use the product if we do this\", but \"will more people use the product if we consistently take the time to get small issues like this right\".  I think the answer to the second one is an emphatic **YES**.\r\n\r\nI'm gonna open up a separate ReQL proposal to debate whether to have 1-ary arithmetic operators, but leave it in backlog because I think we have more important ReQL problems in the 1.8 pipeline."
  , issueCommentId = 21221338
  }