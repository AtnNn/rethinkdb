Issue
  { issueClosedAt = Just 2016 (-05) (-21) 16 : 37 : 41 UTC
  , issueUpdatedAt = 2016 (-05) (-23) 18 : 18 : 51 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5788/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5788"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5788
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 3470207
        , simpleUserLogin = N "johanneslumpe"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/3470207?v=3"
        , simpleUserUrl = "https://api.github.com/users/johanneslumpe"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "[Question] Using the changes feed to power websocket updates"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5788"
  , issueCreatedAt = 2016 (-05) (-21) 14 : 04 : 25 UTC
  , issueBody =
      Just
        "I'm curious what the best approach for this would be. Since the changes feed gets published to each and every listener, it isn't feasible to spin up multiple workers which relay that information via a service like Pusher for example because updates would be published multiple times. Is there any advice you can offer regarding this?\n\nI was thinking about adding another queue in the middle or somehow check whether an update had already been received by storing some kind of key in redis for example and only pushing it to the service if it is fresh.\n"
  , issueState = "closed"
  , issueId = Id 156103533
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }