IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-05) 07 : 59 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73008082"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3298#issuecomment-73008082"
  , issueCommentCreatedAt = 2015 (-02) (-05) 07 : 59 : 24 UTC
  , issueCommentBody =
      "Talked to @gchpaco in person about this (a lot).\r\n\r\nI agree that the `asyncio` API would be great for power users, but I think it's an overkill for basic tutorials, and would turn off a huge number of users. I think we should add a `join` command (possibly with a much better name) that would allow the user to wait on multiple cursors by returning a python generator:\r\n\r\n```py\r\nfeedA = ...\r\nfeedB = ...\r\nx = join(feedA, feedB)\r\nfor change in x:\r\n   ...\r\n```\r\n\r\nBeginners (and even power users who are writing web apps) could use this API, and power users could use `asyncio` if they really need the features. @gchpaco also suggested implementing the `join` function on top of an `asyncio` event loop that would run entirely behind the scenes in our driver.\r\n\r\nThis solution makes sense to me, though I think there are a few more details to iron out in the API."
  , issueCommentId = 73008082
  }