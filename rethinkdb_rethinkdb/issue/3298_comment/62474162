IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-10) 23 : 18 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/62474162"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3298#issuecomment-62474162"
  , issueCommentCreatedAt = 2014 (-11) (-10) 23 : 15 : 20 UTC
  , issueCommentBody =
      "I agree with @larkost.\r\n\r\nOne solution (orthogonal to everything proposed here) that we'll almost certainly have to implement is unioning multiple feeds and reading from the union:\r\n\r\n```py\r\n# A union of two feeds\r\nfeed1 = r.union(r.table('foo').changes(), r.table('bar').changes())\r\n\r\n# Another potential syntax equivalent to the above\r\nfeed2 = r.union(r.table('foo'), r.table('bar')).changes()\r\n\r\n# A porcelain command to union feeds on all tables in a db\r\nfeed3 = r.db('baz').changes()\r\n```\r\n\r\nBarring questions on what the documents in these feeds will look like (i.e. how does the user know which feed in the union any given event comes from), I think this functionality neatly sidesteps driver-side issues by providing a server-side workaround."
  , issueCommentId = 62474162
  }