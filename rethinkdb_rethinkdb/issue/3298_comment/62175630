IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-07) 17 : 00 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/62175630"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3298#issuecomment-62175630"
  , issueCommentCreatedAt = 2014 (-11) (-07) 17 : 00 : 33 UTC
  , issueCommentBody =
      "@AtnNn You are mistaking my suggestion: I was suggesting that if we are looking for a model that we *emulate* the interface of `Queue`. It is not the cleanest out there, but it is one that Python programmers trying to do this sort of thing are already accustomed to. We don't really need normal `get` or `put` since we already have that (hence my comment about `Queue` not having been modeled as an extension of iterables), but the `get_nowait()` call is essentially what you are asking for. Extending cursors this way would be a clean way of getting this model.\r\n\r\nCallbacks are not often used in Python outside a few packages and so are a poor choice."
  , issueCommentId = 62175630
  }