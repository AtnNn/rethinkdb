IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-07) 20 : 23 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/62206227"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3298#issuecomment-62206227"
  , issueCommentCreatedAt = 2014 (-11) (-07) 20 : 23 : 21 UTC
  , issueCommentBody =
      "@AtnNn \r\n> This might be a good solution if we implemented #3296.\r\n\r\nOh I see. Yeah, `conn.wait_any()` wouldn't work well if you want to do this with multiple connections.\r\n\r\nYou mentioned earlier that callbacks wouldn't work either without an event loop. I ignored that issue above, but I guess that's actually a pretty big one.\r\nWith `get_nowait()` and `wait_any()` (assume we implement #3296) we could at least do what @larkost said and do the housekeeping and processing of new data whenever those get called (or have a second thread for that, and just synchronize with it whenever they get called).\r\n\r\n----\r\n\r\nIt seems to me that whatever solution we find for this issue will be something that we might want to apply to the Python (and possibly Ruby) driver API in general if we also want to add connection pools https://github.com/rethinkdb/rethinkdb/issues/281 to them.\r\nThis is true at least as much if we want to allow Python users to make use of #3296 (which incidentally might also make #281 less relevant).\r\n\r\nSince #3296, #281 and this issue are pretty closely connected, I think it would be good to get together some time in person to figure out what exactly we want to provide to users and how we might want to achieve that (on a high level). Let's do that after we've shipped 1.16. I would also like to have at least @mlucy and @coffeemug join us in that discussion."
  , issueCommentId = 62206227
  }