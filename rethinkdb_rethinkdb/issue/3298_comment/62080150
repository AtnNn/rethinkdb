IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-07) 01 : 04 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/62080150"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3298#issuecomment-62080150"
  , issueCommentCreatedAt = 2014 (-11) (-07) 01 : 04 : 30 UTC
  , issueCommentBody =
      "The closest match in the general library are the [`Queue`](https://docs.python.org/2/library/queue.html) classes, and they provide methods like `Queue.get_nowait()` or `Queue.get(block=True, timeout=x)` which raise a `Queue.Empty` if there is nothing available. It is too bad that the `Queue` classes are not a subclass of iterables because that would make a great model for us.\r\n\r\nAlternately we could forge a new path and have `next` raise `StopIteration` when there is nothing available without closing the cursor. That would be really non-standard, but make for clean-looking code and would probably require an opt-arg to not break existing code.\r\n\r\nI think the best is probably to emulate `Queue` for this type of behavior."
  , issueCommentId = 62080150
  }