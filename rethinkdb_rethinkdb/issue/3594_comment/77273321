IssueComment
  { issueCommentUpdatedAt = 2015 (-03) (-04) 23 : 25 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/77273321"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3594#issuecomment-77273321"
  , issueCommentCreatedAt = 2015 (-03) (-04) 23 : 25 : 32 UTC
  , issueCommentBody =
      "Yes, I did.\r\n\r\nPretty much everyone I talked to told me they consider servers/processes to be ephemeral  (that is, they agree with @deontologician and not with @larkost). People got used to EC2, VMs, and Docker and they basically learned that you cannot expect a node/process to stay up at scale. So they expect nodes/processes to fail, and use an existing set of tools to monitor failing nodes and spin up new ones (EC2, for instance, has a bunch of APIs to do this; CoreOS does too, etc.) People were pretty adamant that the world is moving in the direction of ephemeral services, and that they already have tools they prefer to deal with the problem.\r\n\r\nSo I think RethinkDB nodes that aren't responsible for any data should be transient -- a node should be able to enter and leave a cluster arbitrarily, and we should only report issues when a node that's responsible for some data leaves the cluster."
  , issueCommentId = 77273321
  }