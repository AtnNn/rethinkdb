IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-17) 01 : 07 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/70347207"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3594#issuecomment-70347207"
  , issueCommentCreatedAt = 2015 (-01) (-17) 01 : 07 : 55 UTC
  , issueCommentBody =
      "I'm on board with maintaining a list of tables, but I think maintaining a list of servers is worth debating a bit.\r\n\r\n> If I were a sysadmin of a 100-computer RethinkDB cluster I would need to know when one of my machines was not connected to the cluster.\r\n\r\nAdmittedly I've never administered a large cluster of machines, but consider the opposite argument. I have a RethinkDB cluster, and I opportunistically provision extra servers in case I later need to scale up some tables. None of the extra servers actually have anything on them, this is just an opportunistic measure. At that scale, some of the hardware will sometimes fail. Perhaps some servers will drop off the face of the earth, and some automated software will provision more. These could also be VMs, or Docker containers, or whatever.\r\n\r\nWhen a server like that dies, it doesn't impact my RethinkDB cluster in any way, and my automated software (say, CloudFormation on EC2) will notice it and spin up another server. In this context, having to take care of a RethinkDB issue is just a schlep for me -- a task I have to perform that doesn't help me, but that I have to think about. I think that on balance it would make my life slightly harder (although I could also see the opposing point of view)."
  , issueCommentId = 70347207
  }