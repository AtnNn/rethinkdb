IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-08) 17 : 50 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/90986832"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3594#issuecomment-90986832"
  , issueCommentCreatedAt = 2015 (-04) (-08) 17 : 50 : 32 UTC
  , issueCommentBody =
      "Hmm maybe we should resurrect a little piece of semilattice metadata for non-authorative table-existence management.\r\nThat metadata would only store the table IDs and table names. It would be persisted and synchronized between connected servers.\r\nWhen an unreachable table is purged from the cache through `forget_unreachable` (or potentially other mechanisms), we generate a deletion entry in the table cache semilattice.\r\nAt any time, the actual table information from the directory takes precedence over caches table information and will overwrite it eventually.\r\n\r\n@timmaxw how much work would it be to bring back some semilattice metadata for this purpose? Could we re-use our existing old code for managing it?"
  , issueCommentId = 90986832
  }