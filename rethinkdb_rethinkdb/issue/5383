Issue
  { issueClosedAt = Just 2016 (-02) (-18) 00 : 58 : 25 UTC
  , issueUpdatedAt = 2016 (-02) (-18) 00 : 58 : 25 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5383/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5383"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fbda04"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/st:review"
          , labelName = "st:review"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 5383
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Guarantee failed [old_offset]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5383"
  , issueCreatedAt = 2016 (-02) (-10) 03 : 16 : 56 UTC
  , issueBody =
      Just
        "This may be a configuration thing, I'll try to reproduce it on a normal binary. But the configuration I was using was `--static=all --fetch=all` compiled on newton, running on my Arch machine.\r\n\r\nI created a table, added some documents and a secondary index on the `datetime` field, and then created an `orderBy.limit` changefeed in one browser window, and did some inserts into the second browser window. Inserting worked fine, but when I tried to change an existing document, it crashed the server with the stacktrace below. I was able to reproduce it, not reliably, but if you update documents repeatedly you may be able to trigger it\r\n\r\n```\r\nVersion: rethinkdb 2.2.1-472-g7470e6-dirty (CLANG 3.2 (tags/RELEASE_32/final))\r\nerror: Error in src/rdb_protocol/changefeed.cc at line 2398:\r\nerror: Guarantee failed: [old_offset] \r\nerror: Backtrace:\r\nerror: Tue Feb  9 19:01:59 2016\r\n       \r\n       1 [0xa3ec80]: backtrace_t::backtrace_t() at ??:?\r\n       2 [0xa403d3]: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at ??:?\r\n       3 [0xa3e6e4]: format_backtrace(bool) at ??:?\r\n       4 [0xd46af5]: report_fatal_error(char const*, int, char const*, ...) at ??:?\r\n       5 [0x82b088]: ql::changefeed::limit_sub_t::note_change_impl(boost::optional<std::string> const&, boost::optional<std::pair<std::string, std::pair<ql::datum_t, ql::datum_t> > > const&) at ??:?\r\n       6 [0x82abf7]: ql::changefeed::limit_sub_t::note_change(boost::optional<std::string> const&, boost::optional<std::pair<std::string, std::pair<ql::datum_t, ql::datum_t> > > const&) at ??:?\r\n       7 [0x837426]: void ql::changefeed::feed_t::each_sub_in_vec_cb<ql::changefeed::limit_sub_t>(std::function<void (ql::changefeed::limit_sub_t*)> const&, std::vector<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> >, std::allocator<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> > > > const&, std::vector<int, std::allocator<int> > const&, int) at ??:?\r\n       8 [0x8375b3]: void pmap<std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(std::function<void (ql::changefeed::limit_sub_t*)> const&, std::vector<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> >, std::allocator<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> > > > const&, std::vector<int, std::allocator<int> > const&, int)> (ql::changefeed::feed_t*, std::reference_wrapper<std::function<void (ql::changefeed::limit_sub_t*)> const>, std::reference_wrapper<std::vector<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> >, std::allocator<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> > > > const>, std::reference_wrapper<std::vector<int, std::allocator<int> > const>, std::_Placeholder<1>)> >(long, long, std::_Bind<std::_Mem_fn<void (ql::changefeed::feed_t::*)(std::function<void (ql::changefeed::limit_sub_t*)> const&, std::vector<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> >, std::allocator<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> > > > const&, std::vector<int, std::allocator<int> > const&, int)> (ql::changefeed::feed_t*, std::reference_wrapper<std::function<void (ql::changefeed::limit_sub_t*)> const>, std::reference_wrapper<std::vector<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> >, std::allocator<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> > > > const>, std::reference_wrapper<std::vector<int, std::allocator<int> > const>, std::_Placeholder<1>)> const&) at ??:?\r\n       9 [0x821bd9]: void ql::changefeed::feed_t::each_sub_in_vec<ql::changefeed::limit_sub_t>(std::vector<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> >, std::allocator<std::set<ql::changefeed::limit_sub_t*, std::less<ql::changefeed::limit_sub_t*>, std::allocator<ql::changefeed::limit_sub_t*> > > > const&, rwlock_in_line_t*, auto_drainer_t::lock_t const&, std::function<void (ql::changefeed::limit_sub_t*)> const&) at ??:?\r\n       10 [0x81c7bf]: ql::changefeed::feed_t::on_limit_sub(uuid_u const&, auto_drainer_t::lock_t const&, std::function<void (ql::changefeed::limit_sub_t*)> const&) at ??:?\r\n       11 [0x83e617]: boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>::result_type boost::detail::variant::visitation_impl<mpl_::int_<0>, boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<5l>, ql::changefeed::msg_t::stop_t, boost::mpl::l_item<mpl_::long_<4l>, ql::changefeed::msg_t::change_t, boost::mpl::l_item<mpl_::long_<3l>, ql::changefeed::msg_t::limit_start_t, boost::mpl::l_item<mpl_::long_<2l>, ql::changefeed::msg_t::limit_change_t, boost::mpl::l_item<mpl_::long_<1l>, ql::changefeed::msg_t::limit_stop_t, boost::mpl::l_end> > > > > >, boost::mpl::l_iter<boost::mpl::l_end> >, boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>, void const*, boost::variant<ql::changefeed::msg_t::stop_t, ql::changefeed::msg_t::change_t, ql::changefeed::msg_t::limit_start_t, ql::changefeed::msg_t::limit_change_t, ql::changefeed::msg_t::limit_stop_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_>(int, int, boost::detail::variant::invoke_visitor<ql::changefeed::msg_visitor_t>&, void const*, mpl_::bool_<false>, boost::variant<ql::changefeed::msg_t::stop_t, ql::changefeed::msg_t::change_t, ql::changefeed::msg_t::limit_start_t, ql::changefeed::msg_t::limit_change_t, ql::changefeed::msg_t::limit_stop_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>::has_fallback_type_, mpl_::int_<0>*, boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_item<mpl_::long_<5l>, ql::changefeed::msg_t::stop_t, boost::mpl::l_item<mpl_::long_<4l>, ql::changefeed::msg_t::change_t, boost::mpl::l_item<mpl_::long_<3l>, ql::changefeed::msg_t::limit_start_t, boost::mpl::l_item<mpl_::long_<2l>, ql::changefeed::msg_t::limit_change_t, boost::mpl::l_item<mpl_::long_<1l>, ql::changefeed::msg_t::limit_stop_t, boost::mpl::l_end> > > > > >, boost::mpl::l_iter<boost::mpl::l_end> >*) at ??:?\r\n       12 [0x81a3cc]: ql::changefeed::msg_visit(ql::changefeed::feed_t*, auto_drainer_t::lock_t const*, uuid_u, unsigned long, boost::variant<ql::changefeed::msg_t::stop_t, ql::changefeed::msg_t::change_t, ql::changefeed::msg_t::limit_start_t, ql::changefeed::msg_t::limit_change_t, ql::changefeed::msg_t::limit_stop_t, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const&) at ??:?\r\n       13 [0x8188a9]: ql::changefeed::real_feed_t::mailbox_cb(signal_t*, ql::changefeed::stamped_msg_t) at ??:?\r\n       14 [0x84334d]: std::_Mem_fn<void (ql::changefeed::real_feed_t::*)(signal_t*, ql::changefeed::stamped_msg_t)>::operator()(ql::changefeed::real_feed_t*, signal_t*, ql::changefeed::stamped_msg_t) const at ??:?\r\n       15 [0x8431d0]: std::_Function_handler<void (signal_t*, ql::changefeed::stamped_msg_t), std::_Bind<std::_Mem_fn<void (ql::changefeed::real_feed_t::*)(signal_t*, ql::changefeed::stamped_msg_t)> (ql::changefeed::real_feed_t*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, signal_t*, ql::changefeed::stamped_msg_t) at ??:?\r\n       16 [0x8430e8]: std::function<void (signal_t*, ql::changefeed::stamped_msg_t)>::operator()(signal_t*, ql::changefeed::stamped_msg_t) const at ??:?\r\n       17 [0x842e97]: mailbox_t<void (ql::changefeed::stamped_msg_t)>::read_impl_t::read(read_stream_t*, signal_t*) at ??:?\r\n       18 [0xa7fd82]: mailbox_manager_t::mailbox_read_coroutine(threadnum_t, unsigned long, std::vector<char, std::allocator<char> >*, long, mailbox_manager_t::force_yield_t) at ??:?\r\n       19 [0xa58e5b]: coro_t::run() at ??:?\r\nerror: Exiting.\r\nfish: \8220./rethinkdb\8221 terminated by signal SIGTRAP (Trace or breakpoint trap)\r\n```"
  , issueState = "closed"
  , issueId = Id 132597158
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 110
          , milestoneClosedIssues = 150
          , milestoneDescription = Just ""
          , milestoneTitle = "2.3"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/110"
          , milestoneCreatedAt = 2015 (-10) (-05) 20 : 52 : 53 UTC
          , milestoneState = "closed"
          }
  }