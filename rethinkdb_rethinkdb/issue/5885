Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-07) (-11) 22 : 01 : 11 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5885/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5885"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 5885
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 425716
        , simpleUserLogin = N "contra"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/425716?v=3"
        , simpleUserUrl = "https://api.github.com/users/contra"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Allow multiple arguments to getIntersecting, getNearest"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5885"
  , issueCreatedAt = 2016 (-06) (-25) 18 : 28 : 02 UTC
  , issueBody =
      Just
        "This would create consistency with `getAll` (and ultimately across all of these index-aware filters) and remove some **major** performance bottlenecks when working with geospatial indexes. Seems like a really easy win.\n#### Current situation:\n\n``` js\nboundaries.concatMap((b) =>\n    r\n      .table('SomeCoolData')\n      .getIntersecting(b, { index: 'location' })\n)\n```\n- You have to query the entire table multiple times, once for each boundary\n- `.limit()`ing the main query does nothing to limit the amount of computation\n\nRunning a simple query like \"find all points within this boundary\" across 100,000 records **runs forever and never completes**. Even with a tiny # of records RethinkDB is not suitable for any real geospatial querying.\n#### Proposed solution:\n\n``` js\nr\n    .table('SomeCoolData')\n    .getIntersecting(r.args(boundaries), { index: 'location' })\n```\n- Only runs one query on the table\n- `.limit()` works as it should\n"
  , issueState = "open"
  , issueId = Id 162293686
  , issueComments = 11
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }