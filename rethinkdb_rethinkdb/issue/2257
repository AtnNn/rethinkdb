Issue
  { issueClosedAt = Just 2014 (-04) (-15) 23 : 50 : 54 UTC
  , issueUpdatedAt = 2014 (-04) (-15) 23 : 56 : 44 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2257/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2257"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 2257
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 59597
        , simpleUserLogin = N "weixiyen"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/59597?v=3"
        , simpleUserUrl = "https://api.github.com/users/weixiyen"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "lazy_json gaurantee deserialization error"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2257"
  , issueCreatedAt = 2014 (-04) (-15) 19 : 09 : 23 UTC
  , issueBody =
      Just
        "Got this on version 1.12.2 in production\r\n\r\n```\r\n2014-04-15T07:53:59.531474035 180339.812344s error: Error in src/rdb_protocol/lazy_json.cc at line 19:\r\n2014-04-15T07:53:59.531550011 180339.812420s error: Guarantee failed: [res == archive_result_t::SUCCESS] Deserialization of rdb value failed with error archive_result_t::SOCK_EOF.\r\n2014-04-15T07:53:59.531571517 180339.812441s error: Backtrace:\r\n2014-04-15T07:53:59.838526787 180340.119396s error: Tue Apr 15 07:53:59 2014\r\n\r\n1: backtrace_t::backtrace_t() at ??:?\r\n2: format_backtrace(bool) at ??:?\r\n3: report_fatal_error(char const*, int, char const*, ...) at ??:?\r\n4: get_data(rdb_value_t const*, buf_parent_t) at ??:?\r\n5: lazy_json_t::get() const at ??:?\r\n6: rget_cb_t::handle_pair(scoped_key_value_t&&, concurrent_traversal_fifo_enforcer_signal_t) at ??:?\r\n7: concurrent_traversal_adapter_t::handle_pair_coro(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t) at ??:?\r\n8: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (concurrent_traversal_adapter_t::*)(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> (concurrent_traversal_adapter_t*, scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> >::run_action() at ??:?\r\n9: coro_t::run() at ??:?\r\n```\r\n\r\nBtw, is there a recommended way to keep rethinkdb running or restart rethinkdb after a crashing error?"
  , issueState = "closed"
  , issueId = Id 31581690
  , issueComments = 9
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }