IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-11) 02 : 26 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20786439"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1149#issuecomment-20786439"
  , issueCommentCreatedAt = 2013 (-07) (-11) 02 : 26 : 24 UTC
  , issueCommentBody =
      "Those sorts of prefixes end up becoming vestigial things that lose connection with their original meaning.  For example, the X-prefixed extension headers eventually end up becoming part of standards.  Vendor-specific prefixes in CSS ended up just becoming annoying.  See http://www.quirksmode.org/blog/archives/2010/03/css_vendor_pref.html .\r\n\r\nSo how might we end up regretting the reql prefix?  One circumstance is if you add a different query language for accessing the documents.  What if some SuperStreamingQueryLanguage is added (or import/export, a memcache interface to the JSON documents, or even SQL with a schema assertion uploaded upon connection, or whatever) -- should it then render time values with a $reql_type field?  Why not an $ssql_type field?  The documents themselves are not stored in ReQL -- ReQL is just a language used to retrieve them.\r\n\r\n(So if the true representation, the turtles that the document is built out of, is a JSON document, we should maybe be asking whether to name the field `$type` or `$rdb_type`.  However, if the document is really a pure DateTime object on the inside of the database, and our JSON representation is just part of ReQL, then it's a question of if we're willing to receive it as `$type` vs. `$reql_type` (or `reql_type_` or whatever) -- but should a memcached interface render it the same way?)\r\n\r\nAnother way to vendor-prefixify types is to put \"reql\" in the type name."
  , issueCommentId = 20786439
  }