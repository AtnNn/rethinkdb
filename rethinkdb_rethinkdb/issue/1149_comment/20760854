IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-10) 18 : 01 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20760854"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1149#issuecomment-20760854"
  , issueCommentCreatedAt = 2013 (-07) (-10) 18 : 01 : 23 UTC
  , issueCommentBody =
      "> @coffeemug Users are actually going to see this value pretty quickly I think. Neither javascript nor Ruby has a native duration type\r\n\r\nThis is why, however we choose to represent such types on the server, I would prefer to add a datum type to the protobuf spec than simply return the object with the obfuscated field. This way the driver implementer is forced to choose a representation that makes sense for that language. For languages that support native date types this would mean converting to and from the native date type without having to scan every object for a special key.\r\n\r\nFor languages that don't have a native type, the driver implementor will be forced to choose a representation. I can almost guarantee that few would choose to return an object (or dict, or hash, or map) with a special key that the user then has to deal with. Most likely, the driver would create a custom class or type to represent the ReQL date and duration types. However we handle it internally, we should nudge them towards this solution. Getting this to happen is way more important for user experience than the choice between `__reql_type__`, `$reql_type`, and `$__reql_type__`."
  , issueCommentId = 20760854
  }