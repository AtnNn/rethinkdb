IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-09) 23 : 15 : 16 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55050734"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2670#issuecomment-55050734"
  , issueCommentCreatedAt = 2014 (-09) (-09) 23 : 15 : 16 UTC
  , issueCommentBody =
      "So, basically we would rewrite:\r\n```rb\r\nr.table('test').get_all(foo, partial:'compound').order_by(partial:'compound')\r\n```\r\nto:\r\n```rb\r\nr.table('test').orderby(index:'compound').between([foo, r.minval], [foo, r.maxval])\r\n```\r\n?\r\n\r\nThat seems like a reasonable thing to want to do, but I'm a little hesitant to introduce the idea of partial access to compound indexes.  If we do want to do that, it might be better with a new term `get_partial`.  (Or maybe not.)  I really don't like the idea of having a `partial` optarg, but I'm not sure why.\r\n"
  , issueCommentId = 55050734
  }