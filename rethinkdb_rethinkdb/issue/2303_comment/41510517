IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-28) 16 : 55 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 495718
        , simpleUserLogin = N "bitterjug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/495718?v=3"
        , simpleUserUrl = "https://api.github.com/users/bitterjug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/41510517"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2303#issuecomment-41510517"
  , issueCommentCreatedAt = 2014 (-04) (-27) 21 : 51 : 53 UTC
  , issueCommentBody =
      "OK, how do I sort the result of a _join_ if there are >100k documents?\r\n```\r\nRqlRuntimeError: Indexed order_by can only be performed on a TABLE. in:\r\n```\r\nDo joins preserve order? The following appears to give the results I'm looking for, is this correct (there is a 1:1 between Event and BigLottery). \r\n``` javascript\r\n//r.table(\"Event\").indexCreate(\"date\");\r\n//r.table(\"Event\").indexWait();\r\nr.table(\"Event\").orderBy({index: r.desc(\"date\")}).eqJoin('blid', r.table(\"BigLottery\")).zip()\r\n```\r\nBut, if I wanted to order by one field from each side of the join, can I do that with a single ReQL query or would I need to create a temporary table? \r\n\r\nI just read @coffeemug oj building great products, and spotted the pertinence of my 'shopstopper' comment. I realize my current off-line work doesn't align directly with your target market (real-time) but we're thinking about interactive visualizations of Open Philanthropy data. I'd like to see how RethinkDB might fit this application areal."
  , issueCommentId = 41510517
  }