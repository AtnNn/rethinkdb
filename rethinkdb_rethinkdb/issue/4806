Issue
  { issueClosedAt = Just 2015 (-09) (-08) 20 : 37 : 12 UTC
  , issueUpdatedAt = 2015 (-12) (-30) 07 : 01 : 37 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4806/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4806"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4806
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 127315
        , simpleUserLogin = N "kulbirsaini"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/127315?v=3"
        , simpleUserUrl = "https://api.github.com/users/kulbirsaini"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Missing declare dead option when one of the two servers in a cluster is dead"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4806"
  , issueCreatedAt = 2015 (-09) (-08) 13 : 50 : 53 UTC
  , issueBody =
      Just
        "This is my current setup\r\n\r\n* Linux Mint 17 with Linux 3.13.0-37 x64\r\n* Rethinkdb 2.1.2~0trusty (GCC 4.8.2) (Upgraded from 2.0 to 2.1, 2.1.1 and then to 2.1.2 right after the respective release)\r\n* Two clustered rethinkdb instances on the same machine\r\n* SSD as storage\r\n\r\nI go ahead and kill one of the instances. Now, I hunt for the option to declare this instance dead but there is no option anywhere. Two tables (which were replicated/sharded over both instances) are now showing outdated reads. The killed server is also not listed in the `Server` tab in the admin panel. My impression was if I killed one of the two servers, I should be able to declare one of them dead two recover data and to be able to proceed without much headache.\r\n\r\nI head over to the affected tables page and manually reduce the shards (2 to 1) and replicas per shard (2 to 1) and click `Apply Configuration`. It takes some time but then does absolutely nothing. No reads/write happening anywhere. I thought it must be doing some internal magic stuff but it stays like that for a few hours and I give up.\r\n\r\n![Table Status Page](https://cloud.githubusercontent.com/assets/127315/9736303/f8cd4c98-565d-11e5-9b96-62f4efaf9700.png)\r\n\r\nNotice that how it says `Table reconfiguring` but it's a lie :-)\r\n\r\n@AtnNn (via IRC) suggests that I should try to use `emergencyRepair` which I did and have everything back to to normal now. I am not sure if I lost any data in the process as I don't really have a way of finding that.\r\n\r\nBut I still would want the declare dead thing because I don't want to issue any reconfigure commands for wrong tables in a panic situation while dealing with this in a production environment."
  , issueState = "closed"
  , issueId = Id 105385179
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }