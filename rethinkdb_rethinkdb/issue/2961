Issue
  { issueClosedAt = Just 2014 (-08) (-28) 18 : 55 : 27 UTC
  , issueUpdatedAt = 2014 (-09) (-05) 21 : 13 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2961/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2961"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2961
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Valgrind use of uninitialized value warnings"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2961"
  , issueCreatedAt = 2014 (-08) (-26) 18 : 59 : 17 UTC
  , issueBody =
      Just
        "On `next` e5655aee8f13df6b0e002ee77667245496a45e25\r\nAlso exists in v1.14.x\r\n\r\nTo reproduce:\r\n`CXX=recc ./configure --without-tcmalloc`\r\n`make DEBUG=1 VALGRIND=1`\r\n`cd build/debug_clang_valgrind_notcmalloc`\r\n`valgrind --suppressions=../../scripts/rethinkdb-valgrind-suppressions.supp ./rethinkdb`\r\n\r\nIn a second terminal:\r\n`cd test/rql_test`\r\n`./test-runner -i js -d 28015 -c 29015 polyglot/datum/string`\r\n\r\nOutput:\r\n```\r\ninfo: Server ready\r\n\r\n\r\n==19444== Thread 11:\r\n==19444== Conditional jump or move depends on uninitialised value(s)\r\n==19444==    at 0x6DEB391: __GI___strncasecmp_l (strcmp.S:243)\r\n==19444==    by 0x6D9D80F: ____strtod_l_internal (strtod_l.c:574)\r\n==19444==    by 0x6DB2C25: _IO_vfscanf (vfscanf.c:2351)\r\n==19444==    by 0x6DCD99F: vsscanf (iovsscanf.c:45)\r\n==19444==    by 0x6DB94C6: sscanf (sscanf.c:34)\r\n==19444==    by 0x1D4C77A: ql::coerce_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const (type_manip.cc:202)\r\n==19444==    by 0x1D78A49: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const (op.cc:214)\r\n==19444==    by 0x1E80654: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const (term.cc:390)\r\n==19444==    by 0x1E7EF1F: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) (term.cc:243)\r\n==19444==    by 0x1E84E59: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) (query_server.cc:67)\r\n==19444==    by 0x1B512FC: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) (protob.cc:319)\r\n==19444==    by 0x1B4EE8D: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) (protob.cc:283)\r\n==19444== \r\n==19444== Conditional jump or move depends on uninitialised value(s)\r\n==19444==    at 0x6DED8B7: __GI___strncasecmp_l (strcmp.S:2255)\r\n==19444==    by 0x6D9D80F: ____strtod_l_internal (strtod_l.c:574)\r\n==19444==    by 0x6DB2C25: _IO_vfscanf (vfscanf.c:2351)\r\n==19444==    by 0x6DCD99F: vsscanf (iovsscanf.c:45)\r\n==19444==    by 0x6DB94C6: sscanf (sscanf.c:34)\r\n==19444==    by 0x1D4C77A: ql::coerce_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const (type_manip.cc:202)\r\n==19444==    by 0x1D78A49: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const (op.cc:214)\r\n==19444==    by 0x1E80654: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const (term.cc:390)\r\n==19444==    by 0x1E7EF1F: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) (term.cc:243)\r\n==19444==    by 0x1E84E59: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) (query_server.cc:67)\r\n==19444==    by 0x1B512FC: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) (protob.cc:319)\r\n==19444==    by 0x1B4EE8D: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) (protob.cc:283)\r\n==19444== \r\n==19444== Conditional jump or move depends on uninitialised value(s)\r\n==19444==    at 0x6DEB391: __GI___strncasecmp_l (strcmp.S:243)\r\n==19444==    by 0x6D9D844: ____strtod_l_internal (strtod_l.c:579)\r\n==19444==    by 0x6DB2C25: _IO_vfscanf (vfscanf.c:2351)\r\n==19444==    by 0x6DCD99F: vsscanf (iovsscanf.c:45)\r\n==19444==    by 0x6DB94C6: sscanf (sscanf.c:34)\r\n==19444==    by 0x1D4C77A: ql::coerce_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const (type_manip.cc:202)\r\n==19444==    by 0x1D78A49: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const (op.cc:214)\r\n==19444==    by 0x1E80654: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const (term.cc:390)\r\n==19444==    by 0x1E7EF1F: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) (term.cc:243)\r\n==19444==    by 0x1E84E59: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) (query_server.cc:67)\r\n==19444==    by 0x1B512FC: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) (protob.cc:319)\r\n==19444==    by 0x1B4EE8D: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) (protob.cc:283)\r\n==19444== \r\n==19444== Conditional jump or move depends on uninitialised value(s)\r\n==19444==    at 0x6DED8B7: __GI___strncasecmp_l (strcmp.S:2255)\r\n==19444==    by 0x6D9D844: ____strtod_l_internal (strtod_l.c:579)\r\n==19444==    by 0x6DB2C25: _IO_vfscanf (vfscanf.c:2351)\r\n==19444==    by 0x6DCD99F: vsscanf (iovsscanf.c:45)\r\n==19444==    by 0x6DB94C6: sscanf (sscanf.c:34)\r\n==19444==    by 0x1D4C77A: ql::coerce_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const (type_manip.cc:202)\r\n==19444==    by 0x1D78A49: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const (op.cc:214)\r\n==19444==    by 0x1E80654: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const (term.cc:390)\r\n==19444==    by 0x1E7EF1F: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) (term.cc:243)\r\n==19444==    by 0x1E84E59: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) (query_server.cc:67)\r\n==19444==    by 0x1B512FC: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) (protob.cc:319)\r\n==19444==    by 0x1B4EE8D: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) (protob.cc:283)\r\n==19444== \r\n==19444== Use of uninitialised value of size 8\r\n==19444==    at 0x6DED8B9: __GI___strncasecmp_l (strcmp.S:2257)\r\n==19444==    by 0x6D9D844: ____strtod_l_internal (strtod_l.c:579)\r\n==19444==    by 0x6DB2C25: _IO_vfscanf (vfscanf.c:2351)\r\n==19444==    by 0x6DCD99F: vsscanf (iovsscanf.c:45)\r\n==19444==    by 0x6DB94C6: sscanf (sscanf.c:34)\r\n==19444==    by 0x1D4C77A: ql::coerce_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const (type_manip.cc:202)\r\n==19444==    by 0x1D78A49: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const (op.cc:214)\r\n==19444==    by 0x1E80654: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const (term.cc:390)\r\n==19444==    by 0x1E7EF1F: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) (term.cc:243)\r\n==19444==    by 0x1E84E59: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) (query_server.cc:67)\r\n==19444==    by 0x1B512FC: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) (protob.cc:319)\r\n==19444==    by 0x1B4EE8D: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) (protob.cc:283)\r\n==19444== \r\n==19444== Use of uninitialised value of size 8\r\n==19444==    at 0x6DED8BD: __GI___strncasecmp_l (strcmp.S:2258)\r\n==19444==    by 0x6D9D844: ____strtod_l_internal (strtod_l.c:579)\r\n==19444==    by 0x6DB2C25: _IO_vfscanf (vfscanf.c:2351)\r\n==19444==    by 0x6DCD99F: vsscanf (iovsscanf.c:45)\r\n==19444==    by 0x6DB94C6: sscanf (sscanf.c:34)\r\n==19444==    by 0x1D4C77A: ql::coerce_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const (type_manip.cc:202)\r\n==19444==    by 0x1D78A49: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const (op.cc:214)\r\n==19444==    by 0x1E80654: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) const (term.cc:390)\r\n==19444==    by 0x1E7EF1F: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) (term.cc:243)\r\n==19444==    by 0x1E84E59: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) (query_server.cc:67)\r\n==19444==    by 0x1B512FC: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) (protob.cc:319)\r\n==19444==    by 0x1B4EE8D: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) (protob.cc:283)\r\n==19444=\r\n```\r\n\r\nCould be a false alarm, but needs investigation."
  , issueState = "closed"
  , issueId = Id 41208284
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 83
          , milestoneClosedIssues = 13
          , milestoneDescription = Nothing
          , milestoneTitle = "1.14.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/83"
          , milestoneCreatedAt = 2014 (-09) (-05) 21 : 11 : 58 UTC
          , milestoneState = "closed"
          }
  }