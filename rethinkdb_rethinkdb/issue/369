Issue
  { issueClosedAt = Just 2014 (-07) (-04) 01 : 05 : 11 UTC
  , issueUpdatedAt = 2014 (-07) (-04) 01 : 06 : 33 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/369/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/369"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      ]
  , issueNumber = 369
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Rapid client connections may be dropped due to short accept() backlog"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/369"
  , issueCreatedAt = 2013 (-02) (-20) 23 : 41 : 45 UTC
  , issueBody =
      Just
        "When rethinkdb accepts tcp connections, it does so with a backlog size of 5.  In addition, in `nonthrowing_tcp_listener_t::accept_loop()`, a new connection is spawned on a different coroutine using `spawn_now_dangerously()`.  This may result in faster setup of a new connection, but it also increases the likelyhood of filling up the backlog.\r\n\r\nReported by @christopherhesse, when creating a large number of client connections at once, a large number of them are dropped immediately by rethinkdb.  Adding a short (1 ms) delay in between attempts fixes this, but I think the problem can be minimized on our end.\r\n\r\nI would suggest changing the `handle` coroutine to be spawned using `spawn_sometime` instead, and increasing the accept backlog."
  , issueState = "closed"
  , issueId = Id 11221205
  , issueComments = 22
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 64
          , milestoneClosedIssues = 228
          , milestoneDescription =
              Just
                "These issues are no longer relevant to the current version of RethinkDB"
          , milestoneTitle = "outdated"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/64"
          , milestoneCreatedAt = 2014 (-03) (-28) 00 : 17 : 40 UTC
          , milestoneState = "closed"
          }
  }