Issue
  { issueClosedAt = Just 2014 (-10) (-21) 22 : 38 : 07 UTC
  , issueUpdatedAt = 2014 (-11) (-05) 18 : 01 : 49 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3201/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3201"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 3201
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "memset call overwrites vtable pointer in S2.  And rmalloc is not being used."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3201"
  , issueCreatedAt = 2014 (-10) (-17) 02 : 29 : 43 UTC
  , issueBody =
      Just
        "We get this warning with clang 3.5:\r\n\r\n```\r\nsrc/rdb_protocol/geo/s2/s2regioncoverer.cc:117:10: error: destination for this 'memset' call is a\r\n      pointer to class containing a dynamic class 'S2Cell'; vtable pointer will be overwritten\r\n      [-Werror,-Wdynamic-class-memaccess]\r\n  memset(candidate, 0, size);\r\n```\r\n\r\nIt is correct:  S2Cell has virtual methods, and it gets memset.\r\n\r\nHere is more code:\r\n\r\n```\r\n Candidate* candidate = static_cast<Candidate*>(malloc(size));\r\n  memset(candidate, 0, size);\r\n  candidate->cell = cell;\r\n  candidate->is_terminal = is_terminal;\r\n```\r\n\r\nYou can see that malloc is being used, instead of using the new operator.  Don't ask me how this thing is getting destructed.\r\n\r\ncell, the field in question, is then getting assigned immediately after the memset.\r\n\r\nAlso, this malloc call (and others in S2?) should be rmalloc.  There's a memalign and some realloc calls in there too."
  , issueState = "closed"
  , issueId = Id 46057173
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 87
          , milestoneClosedIssues = 13
          , milestoneDescription = Just ""
          , milestoneTitle = "1.15.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/87"
          , milestoneCreatedAt = 2014 (-11) (-05) 18 : 01 : 13 UTC
          , milestoneState = "closed"
          }
  }