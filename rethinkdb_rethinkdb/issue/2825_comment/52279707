IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-15) 06 : 58 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 104305
        , simpleUserLogin = N "hardkrash"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/104305?v=3"
        , simpleUserUrl = "https://api.github.com/users/hardkrash"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52279707"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2825#issuecomment-52279707"
  , issueCommentCreatedAt = 2014 (-08) (-15) 06 : 58 : 03 UTC
  , issueCommentBody =
      "I like blue for the new bike shed color!\r\n\r\nI agree with the 10 to 20 bytes of data, my base 2 mind is screaming 16 ;-)\r\nAs for detecting file types, there is the program called file.  Look into libmagic in the [file](https://github.com/file/file) project\r\n\r\nPlease keep in mind binary != file, a file holds binary data, but binary data alone is not a file.\r\nAs someone that uses binary data that is not normally considered a file, it is nice to have short snippets of the binary visible.\r\n\r\nStoring the contents of EEPROMs is something I do,  Often with strings in them.  Representing binary data is a hard issue to solve universally: Escaped strings, hex dump, fancy hex dump with strings on side, base64, and etc... \r\n\r\nPython bytes are represented as strings with ASCII printables printed, and the common c escapes represented.\r\n\r\n```python\r\nbytes(range(128))\r\nb'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7f'\r\n```\r\n\r\nMy red bike shed idea is that if less than 50% of the first 16 bytes are printable, All hex, otherwise the above.\r\n\r\nSide bar for those interested in alternative representations of non printable characters.\r\nI will introduce you to a fun unicode corner I discovered the other day.\r\n[UTF U+2400 and friends](http://utf8-chartable.de/unicode-utf8-table.pl?start=9216&utf8=char)\r\n\r\nThe great thing was that the accessibility framework in OS X read the chars as the text in the name column.  A blind programing co-worker now could hear the data in the console as a reasonable symbol for the control chars.  Not that I would want these used in this representation.\r\n"
  , issueCommentId = 52279707
  }