IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-19) 18 : 54 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52681523"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2932#issuecomment-52681523"
  , issueCommentCreatedAt = 2014 (-08) (-19) 18 : 54 : 26 UTC
  , issueCommentBody =
      "This proposal doesn't include auto-failover. If a server fails, the user should first permanently remove it, and then do one of two things: bring up a replacement server with the same name, or call `table.reconfigure()` again. `table.reconfigure()` will automatically try to re-use the servers that are already hosting the data if it's possible to do so. Does that serve the same purpose as your proposed feature?\r\n\r\nI'm a little reluctant to add features to `table.reconfigure()`. The planned purpose of `table.reconfigure()` was as follows: Novice users or users who don't really care where their data goes will just call `table.reconfigure()`. Users who want to manually specify where their data goes will write directly to the config. Users who need more advanced features will write their own tools that write directly to the config. So if your proposed mode of `table.reconfigure()` is something that <10% of users would want, I'd just leave it out."
  , issueCommentId = 52681523
  }