IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-17) 04 : 01 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21090605"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1127#issuecomment-21090605"
  , issueCommentCreatedAt = 2013 (-07) (-17) 03 : 56 : 05 UTC
  , issueCommentBody =
      "It looks like sometimes it's not just about being user friendly.\r\n\r\nI am trying to build a query that looks like that\r\n\r\n```javascript\r\nr.table(\"foo\").get(...).do( function(doc) {\r\n    return doc.merge({\r\n        newField: r.table(\"bar\").getAll( doc(\"keys\"), {index: \"indexName\"} ).coerceTo('array')\r\n    })\r\n})\r\n```\r\n\r\nSo this query is going to fail because `doc(\"keys\")` is an array, and if I'm not mistaken, I cannot use `.apply` here since I have to extend `doc(\"keys\")` with `{index: \"indexName\"}`.\r\n\r\nAnyone has an idea on how to do such query? Or can confirm that it's currently not possible?\r\nIt's the last thing I need to complete my ORM (for whatever definition of complete), so I would really love to be able to do it.\r\n\r\nDoing multiple queries is, err, not cool : )"
  , issueCommentId = 21090605
  }