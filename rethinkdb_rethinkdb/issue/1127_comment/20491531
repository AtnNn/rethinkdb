IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-04) 19 : 50 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20491531"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1127#issuecomment-20491531"
  , issueCommentCreatedAt = 2013 (-07) (-04) 19 : 48 : 24 UTC
  , issueCommentBody =
      "That's actually the reason for why I have decided to use array parameters instead of variadic functions in PHP-RQL.\r\nHaving to write\r\n```\r\ngetAll([1, 2, 3])\r\n```\r\nis not much worse than\r\n```\r\ngetAll(1, 2, 3)\r\n```\r\nin my opinion.\r\nI actually even think that the first variant is better, because it explicitly shows the structure of the arguments. This is an advantage as soon as something like the additional index parameter comes into play.\r\n\r\nOf course the JS, Python and Ruby APIs do already use variadic functions, so I don't think that it should be changed at this point.\r\n\r\nOne option I could think of would be to support an \"args\" field in the optargs map.\r\nSo you could write something like\r\n```\r\nvar arrayId = [1,2,3];\r\nr.table(\"test\").getAll( {args: arrayId} ).run(...)\r\n```\r\nThe value of args would always have to be an array.\r\n\r\nIt is not very pretty, but might still be useful for some users."
  , issueCommentId = 20491531
  }