IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-15) 01 : 15 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/37711493"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2100#issuecomment-37711493"
  , issueCommentCreatedAt = 2014 (-03) (-15) 01 : 15 : 05 UTC
  , issueCommentBody =
      "Got a similar backtrace when shutting down a server after running some stress clients on it for a while:\r\n\r\n```c\r\ninfo: Shutting down storage engine... (This may take a while if you had a lot of unflushed data in the writeback cache.)\r\nVersion: rethinkdb 1.11.3-2094-g27620a-dirty (debug) (CLANG 3.2 (tags/RELEASE_32/final))\r\nerror: Error in ../src/buffer_cache/alt/eviction_bag.cc at line 15:\r\nerror: Guarantee failed: [size_ == 0] size was 56029378\r\nerror: Backtrace:\r\nerror: Fri Mar 14 18:11:23 2014\r\n\r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:100\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:202\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:282\r\n       4: format_backtrace(bool) at backtrace.cc:197\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6: alt::eviction_bag_t::~eviction_bag_t() at eviction_bag.cc:15\r\n       7: alt::evicter_t::~evicter_t() at evicter.cc:23\r\n       8: alt::page_cache_t::~page_cache_t() at page_cache.cc:173\r\n       9: cache_t::~cache_t() at alt.cc:79\r\n       10: scoped_ptr_t<cache_t>::reset() at scoped.hpp:66\r\n       11: scoped_ptr_t<cache_t>::~scoped_ptr_t() at scoped.hpp:30\r\n       12: scoped_ptr_t<cache_t>::~scoped_ptr_t() at scoped.hpp:31\r\n       13: btree_store_t<rdb_protocol_t>::~btree_store_t() at btree_store.cc:93\r\n       14: rdb_protocol_t::store_t::~store_t() at protocol.cc:1092\r\n       15: rdb_protocol_t::store_t::~store_t() at protocol.cc:1090\r\n       16: scoped_ptr_t<rdb_protocol_t::store_t>::reset() at scoped.hpp:67\r\n       17: stores_lifetimer_t<rdb_protocol_t>::~stores_lifetimer_t() at reactor_driver.hpp:41\r\n       18: stores_lifetimer_t<rdb_protocol_t>::~stores_lifetimer_t() at reactor_driver.hpp:51\r\n       19: watchable_and_reactor_t<rdb_protocol_t>::~watchable_and_reactor_t() at reactor_driver.tcc:158\r\n       20: watchable_and_reactor_t<rdb_protocol_t>::~watchable_and_reactor_t() at reactor_driver.tcc:158\r\n       21: watchable_and_reactor_t<rdb_protocol_t>::~watchable_and_reactor_t() at reactor_driver.tcc:133\r\n       22: void boost::checked_delete<watchable_and_reactor_t<rdb_protocol_t> const>(watchable_and_reactor_t<rdb_protocol_t> const*) at checked_delete.hpp:35\r\n       23: void boost::delete_clone<watchable_and_reactor_t<rdb_protocol_t> >(watchable_and_reactor_t<rdb_protocol_t> const*) at clone_allocator.hpp:57\r\n       24: void boost::heap_clone_allocator::deallocate_clone<watchable_and_reactor_t<rdb_protocol_t> >(watchable_and_reactor_t<rdb_protocol_t> const*) at clone_allocator.hpp:75\r\n       25: boost::ptr_container_detail::reversible_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::null_clone_allocator<false>::deallocate_clone(watchable_and_reactor_t<rdb_protocol_t> const*) at reversible_ptr_container.hpp:127\r\n       26: boost::ptr_container_detail::reversible_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::null_policy_deallocate_clone(watchable_and_reactor_t<rdb_protocol_t> const*) at reversible_ptr_container.hpp:277\r\n       27: void boost::ptr_container_detail::reversible_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::remove<boost::ptr_map_iterator<std::_Rb_tree_iterator<std::pair<uuid_u const, void*> >, uuid_u, watchable_and_reactor_t<rdb_protocol_t>* const> >(boost::ptr_map_iterator<std::_Rb_tree_iterator<std::pair<uuid_u const, void*> >, uuid_u, watchable_and_reactor_t<rdb_protocol_t>* const>) at reversible_ptr_container.hpp:251\r\n       28: void boost::ptr_container_detail::reversible_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::remove<boost::ptr_map_iterator<std::_Rb_tree_iterator<std::pair<uuid_u const, void*> >, uuid_u, watchable_and_reactor_t<rdb_protocol_t>* const> >(boost::ptr_map_iterator<std::_Rb_tree_iterator<std::pair<uuid_u const, void*> >, uuid_u, watchable_and_reactor_t<rdb_protocol_t>* const>, boost::ptr_map_iterator<std::_Rb_tree_iterator<std::pair<uuid_u const, void*> >, uuid_u, watchable_and_reactor_t<rdb_protocol_t>* const>) at reversible_ptr_container.hpp:257\r\n       29: boost::ptr_container_detail::reversible_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::remove_all() at reversible_ptr_container.hpp:219\r\n       30: boost::ptr_container_detail::reversible_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::~reversible_ptr_container() at reversible_ptr_container.hpp:465\r\n       31: boost::ptr_container_detail::associative_ptr_container<boost::ptr_container_detail::map_config<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, true>, boost::heap_clone_allocator>::~associative_ptr_container() at associative_ptr_container.hpp:32\r\n       32: boost::ptr_container_detail::ptr_map_adapter_base<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, boost::heap_clone_allocator, true>::~ptr_map_adapter_base() at ptr_map_adapter.hpp:127\r\n       33: boost::ptr_map_adapter<watchable_and_reactor_t<rdb_protocol_t>, std::map<uuid_u, void*, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, void*> > >, boost::heap_clone_allocator, true>::~ptr_map_adapter() at ptr_map_adapter.hpp:386\r\n       34: boost::ptr_map<uuid_u, watchable_and_reactor_t<rdb_protocol_t>, std::less<uuid_u>, boost::heap_clone_allocator, std::allocator<std::pair<uuid_u const, void*> > >::~ptr_map() at ptr_map.hpp:33\r\n       35: boost::ptr_map<uuid_u, watchable_and_reactor_t<rdb_protocol_t>, std::less<uuid_u>, boost::heap_clone_allocator, std::allocator<std::pair<uuid_u const, void*> > >::~ptr_map() at ptr_map.hpp:33\r\n       36: reactor_driver_t<rdb_protocol_t>::~reactor_driver_t() at reactor_driver.tcc:400\r\n       37: reactor_driver_t<rdb_protocol_t>::~reactor_driver_t() at reactor_driver.hpp:400\r\n       38: scoped_ptr_t<reactor_driver_t<rdb_protocol_t> >::reset() at scoped.hpp:66\r\n       39: scoped_ptr_t<reactor_driver_t<rdb_protocol_t> >::~scoped_ptr_t() at scoped.hpp:30\r\n       40: scoped_ptr_t<reactor_driver_t<rdb_protocol_t> >::~scoped_ptr_t() at scoped.hpp:31\r\n       41: do_serve(io_backender_t*, bool, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, peer_address_set_t const&, service_address_ports_t, std::string, os_signal_cond_t*, boost::optional<std::string> const&) at serve.cc:475\r\n       42: serve(io_backender_t*, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, peer_address_set_t const&, service_address_ports_t, std::string, os_signal_cond_t*, boost::optional<std::string> const&) at serve.cc:499\r\n       43: run_rethinkdb_serve(base_path_t const&, serve_info_t const&, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:811\r\n       44: run_rethinkdb_porcelain(base_path_t const&, name_string_t const&, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t const&, directory_lock_t*, bool*) at command_line.cc:869\r\n       45: _ZNSt5_BindIFPFvRK11base_path_tRK13name_string_t21file_direct_io_mode_timbRK12serve_info_tP16directory_lock_tPbES0_S3_S6_imbS7_SB_SC_EE6__callIvJEJLi0ELi1ELi2ELi3ELi4ELi5ELi6ELi7ELi8EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x1e3 at functional:1145\r\n       46: _ZNSt5_BindIFPFvRK11base_path_tRK13name_string_t21file_direct_io_mode_timbRK12serve_info_tP16directory_lock_tPbES0_S3_S6_imbS7_SB_SC_EEclIJEvEET0_DpOT_+0x26 at functional:1203\r\n       47: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, name_string_t, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t const&, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:1779\r\n       48: std::function<void ()>::operator()() const at functional:2160\r\n       49: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\r\n       50: std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()(starter_t*, std::function<void ()> const&) const at functional:550\r\n       51: _ZNSt5_BindIFSt7_Mem_fnIM9starter_tFvRKSt8functionIFvvEEEEPS1_S4_EE6__callIvJEJLi0ELi1EEEET_OSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE+0x70 at functional:1145\r\n       52: _ZNSt5_BindIFSt7_Mem_fnIM9starter_tFvRKSt8functionIFvvEEEEPS1_S4_EEclIJEvEET0_DpOT_+0x26 at functional:1203\r\n       53: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:1779\r\n       54: std::function<void ()>::operator()() const at functional:2160\r\n       55: callable_action_instance_t<std::function<void ()> >::run_action() at callable_action.hpp:28\r\n       56: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       57: coro_t::run() at coroutines.cc:197\r\n       58: coro_t* coro_t::spawn_sometime<std::function<void ()> >(std::function<void ()> const&) at coroutines.hpp:58\r\n       59: starter_t::on_thread_switch() at runtime.cc:57\r\n       60: linux_message_hub_t::on_event(int) at message_hub.cc:154\r\n       61: epoll_event_queue_t::run() at epoll.cc:115\r\n       62: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:153\r\n       63: /lib/x86_64-linux-gnu/libpthread.so.0(+0x7e9a) [0x7ffe35d5ae9a] at 0x7ffe35d5ae9a (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       64: clone+0x6d at 0x7ffe35a873fd (/lib/x86_64-linux-gnu/libc.so.6)\r\n```"
  , issueCommentId = 37711493
  }