IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-12) 01 : 05 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19302047"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/976#issuecomment-19302047"
  , issueCommentCreatedAt = 2013 (-06) (-12) 01 : 05 : 45 UTC
  , issueCommentBody =
      "An interesting proposal, but it looks like it may have some problems.  Off the top of my head:\r\n\r\n* If we return a stream from a range update, how do we report errors?  Do we change to aborting halfway through rather than continuing like we do now?\r\n* We'd be moving back to having different error behavior for point updates and range updates, which kinda sucks.\r\n* The `do` and `map` examples don't actually work because we'll see the row that we read on the machine serving the query rather than the row that the update function is run on (these may be different if the user is doing something racy).  We need a way to get the old row back from the shard after the update if we want to have atomic updates."
  , issueCommentId = 19302047
  }