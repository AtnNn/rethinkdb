IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-08) 05 : 26 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/100104237"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2356#issuecomment-100104237"
  , issueCommentCreatedAt = 2015 (-05) (-08) 05 : 26 : 34 UTC
  , issueCommentBody =
      "While I do feel that there is a very attractive simplicity to explicit index usage, I'd like to echo @kofalt's note about auto-generated queries. There are a couple projects at my company that build very dynamic RQL queries, and because it's impossible to use multiple different indexes in a chain (#2670), I've found it very difficult to use more than a single index. Because of this limitation, only something with insight into the final generated query can make decisions on where indexes should be used.\r\n\r\nAdditionally, it isn't currently possible (at least by my understanding) for a client to digest the binary RQL index definition into something meaningful. For example, my query generator can't request the details of compound indices to determine when to use them.\r\n\r\nAnd... despite those points, I do still appreciate explicit index usage for some reason. Just some more anecdotes/use-cases for consideration."
  , issueCommentId = 100104237
  }