IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-29) 02 : 10 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60863394"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3242#issuecomment-60863394"
  , issueCommentCreatedAt = 2014 (-10) (-29) 02 : 10 : 01 UTC
  , issueCommentBody =
      "My hope would be that the CPU only creates an entry in its prediction table if its default prediction is wrong. Since the branch prediction tables are usually pretty small (though I haven't checked for a while), we could end up with a potentially relevant degree of decreased performance if we used a lot of `guarantee`s which would fill up that table with things that could perfectly well be statically predicted.\r\nI'm not completely sure if my reasoning here is actually correct.\r\n\r\nNote that `guarantee` is a macro and therefore each use of it will be compiled to a different memory location."
  , issueCommentId = 60863394
  }