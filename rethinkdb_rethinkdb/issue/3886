Issue
  { issueClosedAt = Just 2015 (-05) (-01) 21 : 37 : 03 UTC
  , issueUpdatedAt = 2015 (-05) (-01) 21 : 37 : 03 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3886/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3886"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3886
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Interruptible backfills"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3886"
  , issueCreatedAt = 2015 (-03) (-04) 21 : 52 : 30 UTC
  , issueBody =
      Just
        "The Raft logic assumes that the store is left in a valid state even if the backfill is interrupted. Currently that isn't actually true. There are three possible solutions, presented in order from least to most work:\r\n\r\n* Create a fake branch before the backfill. Write the fake branch to the metainfo. Do the backfill in such a way that every individual key is somewhere on the path between the start point and the end point. Write the real branch to the metainfo. If we crash, everything will still work; the fake branch will be treated like a real branch that just happens to look like a partial copy of the contents of some other branch.\r\n\r\n* Backfill in key order from left to right. As we go, update the metainfo to indicate which parts have been updated. This has the added benefit that an interrupted backfill can be resumed where it left off.\r\n\r\n* Same as above, but backfill incrementally in many small chunks. This has the added benefit of reducing memory usage, getting rid of the disk-backed write queue, and improving backfill performance."
  , issueState = "closed"
  , issueId = Id 59868110
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 316661
                , simpleUserLogin = N "timmaxw"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/316661?v=3"
                , simpleUserUrl = "https://api.github.com/users/timmaxw"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 95
          , milestoneClosedIssues = 217
          , milestoneDescription =
              Just "To-do list before shipping auto-failover"
          , milestoneTitle = "2.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/95"
          , milestoneCreatedAt = 2015 (-03) (-04) 21 : 09 : 42 UTC
          , milestoneState = "closed"
          }
  }