IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-18) 04 : 35 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19590453"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/889#issuecomment-19590453"
  , issueCommentCreatedAt = 2013 (-06) (-18) 04 : 35 : 53 UTC
  , issueCommentBody =
      "> we don't want to merge `get` and `getAll` because they would return different type. I'm fine if methods return different types as long as it's predicable but you are not, and here you would be fine. That just doesn't make sense.\r\n\r\nI used to be a Haskell programmer. While I'm not one anymore, I still have some standards to maintain :)\r\n\r\nI think that there is a huge difference between a function returning different values in different circumstances (even if they're well defined), and a function being defined on different types. The former case is poor API design IMO, while the later case is extremely common, useful, and doesn't have the same smell.\r\n\r\nI'm strongly in favor of polymorphism here -- I think it's immensely useful, it would be intuitive, and it's congruent with everything else we did wrt polymorphism. I'd be very strongly opposed to taking it out."
  , issueCommentId = 19590453
  }