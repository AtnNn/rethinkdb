Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-08) (-12) 18 : 48 : 19 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6050/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/6050"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 6050
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "add 64bit integer type"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6050"
  , issueCreatedAt = 2016 (-08) (-12) 18 : 47 : 14 UTC
  , issueBody =
      Just
        "Currently all of our numbers are floating point numbers, which are useful in most cases, but don't work quite the way that many people expect numbers to work, especially in larger numbers. This is why most databases also support integers, and I think we should do so as well.\r\n\r\nI consider this a separate request from the [arbitrary precision number request](#1639) mainly because the computational costs of those are so much greater than 64bin integers. I feel that we don't need to have additional types (e.g.: signed vs unsigned, short vs. long) as our serialization/deserialization costs are unlikely to make those worth the complexity of supporting.\r\n\r\nThis of course is going to require a lot of thinking through, such as:\r\n- should we automatically choose the \"best\" format when serializing/deserializing in drivers like JavaScript\r\n- how do we approach mathematical computations like `int(5) / int(2)` or `int(5) / float(2)`, specifically are the outputs from those `int` or `float`?"
  , issueState = "open"
  , issueId = Id 170934525
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }