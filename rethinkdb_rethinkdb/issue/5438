Issue
  { issueClosedAt = Just 2016 (-03) (-11) 04 : 56 : 22 UTC
  , issueUpdatedAt = 2016 (-03) (-23) 15 : 48 : 33 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5438/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5438"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "fbda04"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/st:review"
          , labelName = "st:review"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 5438
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 6277212
        , simpleUserLogin = N "tatsujin1"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/6277212?v=3"
        , simpleUserUrl = "https://api.github.com/users/tatsujin1"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Error in src/rdb_protocol/datum.cc at line 1470: Unreachable code"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5438"
  , issueCreatedAt = 2016 (-02) (-23) 13 : 06 : 01 UTC
  , issueBody =
      Just
        "v2.2.3 on debian 8.2\r\n\r\nAfter it was automatically restarted (by systemd) it seems to work fine.\r\n\r\nIf the crash was caused by some specific data in the db I unfortunately have no way to find what that could've been.\r\n\r\n```\r\n2016-02-23T12:38:00.750202800 3470395.004338s error: Error in src/rdb_protocol/datum.cc at line 1470:\r\n2016-02-23T12:38:00.750480828 3470395.004616s error: Unreachable code:\r\n2016-02-23T12:38:00.750521538 3470395.004656s error: Backtrace:\r\n2016-02-23T12:38:01.079540958 3470395.333680s error: Tue Feb 23 12:38:00 2016\r\n\r\n1 [0xa8b5f0]: backtrace_t::backtrace_t() at ??:?\r\n2 [0xa8b969]: format_backtrace(bool) at ??:?\r\n3 [0xd00a9d]: report_fatal_error(char const*, int, char const*, ...) at ??:?\r\n4 [0x8e26be]: void ql::datum_t::write_json_unchecked_stack<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator> >(rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator>*) const at ??:?\r\n5 [0x8e3845]: int call_with_enough_stack<int, void call_with_enough_stack<void ql::datum_t::write_json<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator> >(rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator>*) const::{lambda()#1}>(void ql::datum_t::write_json<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator> >(rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator>*) const::{lambda()#1}&&, unsigned long)::{lambda()#1}>(void call_with_enough_stack<void ql::datum_t::write_json<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator> >(rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator>*) const::{lambda()#1}>(void ql::datum_t::write_json<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator> >(rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator>*) const::{lambda()#1}&&, unsigned long)::{lambda()#1}&&, unsigned long) at ??:?\r\n6 [0x8e38d1]: void ql::datum_t::write_json<rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator> >(rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::RAllocator>*) const at ??:?\r\n7 [0xa806b8]: write_response_internal(ql::response_t*, rapidjson::GenericStringBuffer<rapidjson::UTF8<char>, rapidjson::RAllocator>*, bool) at ??:?\r\n8 [0xa8253d]: json_protocol_t::send_response(ql::response_t*, long, linux_tcp_conn_t*, signal_t*) at ??:?\r\n9 [0xa882d9]: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const::{lambda()#1}&&) at ??:?\r\n10 [0xa8884a]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const at ??:?\r\n11 [0x99c518]: coro_t::run() at ??:?\r\n2016-02-23T12:38:01.079807642 3470395.333942s error: Exiting.\r\n```\r\n\r\nedit: grammar"
  , issueState = "closed"
  , issueId = Id 135731805
  , issueComments = 30
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 118
          , milestoneClosedIssues = 15
          , milestoneDescription = Nothing
          , milestoneTitle = "2.2.6"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/118"
          , milestoneCreatedAt = 2016 (-03) (-17) 20 : 36 : 02 UTC
          , milestoneState = "closed"
          }
  }