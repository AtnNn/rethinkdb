IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-19) 20 : 40 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21276033"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1189#issuecomment-21276033"
  , issueCommentCreatedAt = 2013 (-07) (-19) 20 : 40 : 44 UTC
  , issueCommentBody =
      "The thing I hate about making non commutative operators variadic is that it's completely inconsistent and confusing:\r\n\r\n```\r\n(+ n) -> 1\r\n(- n) -> 0 - 1\r\n(/ n) -> n / 1\r\n```\r\n\r\nit's also just not useful to any real users. All of the code I see uses infix arithmetic operators. We're really only doing this to kow-tow to the Lisptard lords. @srh you actually make a great point about how this behavior can really bite you in the ass. Suppose I write a query like this:\r\n\r\n```\r\nteams.update({\"total_score\" : r.sub(r.row[\"points_scored\"], r.args(r.row[\"penalties\"]))})\r\n```\r\n\r\nLooks very reasonable until of course a team comes along which didn't get any penalties at which point suddenly their total score is suddenly negative."
  , issueCommentId = 21276033
  }