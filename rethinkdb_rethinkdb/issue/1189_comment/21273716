IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-19) 20 : 00 : 28 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21273716"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1189#issuecomment-21273716"
  , issueCommentCreatedAt = 2013 (-07) (-19) 20 : 00 : 28 UTC
  , issueCommentBody =
      "Having `r.sub(1)` be negative 1 is indeed a bad idea.  The only reason `(- 1)` is justifiable in Lisp or Scheme is that they've always done it that way, and because of the way the syntax works out, with the negative sign right before the number.\r\n\r\n`r.negate(1)` is a much better syntax.  Or `r.expr(1).negate()`?  People should not get a silent surprise by edge case behavior of `r.sub(x, r.args(arr))`.  `r.sub(1)` should either return 1 or error."
  , issueCommentId = 21273716
  }