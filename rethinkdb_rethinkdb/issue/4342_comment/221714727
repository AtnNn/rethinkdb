IssueComment
  { issueCommentUpdatedAt = 2016 (-05) (-25) 21 : 33 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 455594
        , simpleUserLogin = N "ajselvig"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/455594?v=3"
        , simpleUserUrl = "https://api.github.com/users/ajselvig"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/221714727"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4342#issuecomment-221714727"
  , issueCommentCreatedAt = 2016 (-05) (-25) 21 : 33 : 58 UTC
  , issueCommentBody =
      "Well, no one else has chimed in on this so I figured I'd give my two cents. It would be awesome to read the values directly from the index instead of pulling them from the document.\r\n\r\nThis is not really a matter of _just_ performance, since we've seen **prohibitively slow** (minutes or longer) queries on datasets that should be trivial if this issue is implemented - e.g. hundreds of thousands of records but only hundreds of unique secondary index values. We seem to be able to count based on this index just fine: \r\n\r\n```ruby\r\n# executes in under 1 second\r\nr.table(\"work_orders\").get_all( \"2mpizp5BluTKHS\", {\"index\" => \"technician_id\"}).count\r\n```\r\n\r\nBut have no practical way to tell what the possible values are:\r\n\r\n```ruby\r\n# not sure how long this takes, I killed it after a minute\r\nr.table(\"work_orders\").distinct({\"index\" => \"technician_id\"}).count\r\n```"
  , issueCommentId = 221714727
  }