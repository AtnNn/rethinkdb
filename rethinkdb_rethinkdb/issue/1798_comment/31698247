IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-06) 23 : 19 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/31698247"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1798#issuecomment-31698247"
  , issueCommentCreatedAt = 2014 (-01) (-06) 23 : 19 : 01 UTC
  , issueCommentBody =
      "@neumino just ported the benchmark to Node.js! It seems to be one of the most CPU efficient for these queries. Updated results:\r\n\r\n* JavaScript\r\n```\r\nInsert: 873.743993010048 inserts/second\r\nRead: 1279.5905310300705 reads/second\r\nUpdate: 316.8065895770632 updates/second\r\n```\r\n* Ruby (including @mlucy's optimization)\r\n```\r\nInsert: 325.7 inserts/second\r\nRead: 428.9 reads/second\r\nUpdate: 164.3 updates/second\r\n```\r\n* Python (without cpp protobuf backend, couldn't get it to run)\r\n```\r\nInsert: 963.95674414 inserts/second\r\nRead: 1084.1272426 reads/second\r\nUpdate: 292.186557975 updates/second\r\n```\r\n* and just for fun PHP-RQL\r\n  * with cpp protobuf backend\r\n```\r\nInsert: 803.58463969438 inserts/second\r\nRead: 1063.2924998441 reads/second\r\nUpdate: 289.70962652097 updates/second\r\n```\r\n  * without cpp protobuf backend\r\n```\r\nInsert: 438.63670007221 inserts/second\r\nRead: 597.65483788184 reads/second\r\nUpdate: 211.33260237237 updates/second\r\n```"
  , issueCommentId = 31698247
  }