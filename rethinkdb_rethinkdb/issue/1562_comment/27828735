IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 00 : 48 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27828735"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1562#issuecomment-27828735"
  , issueCommentCreatedAt = 2013 (-11) (-06) 00 : 48 : 40 UTC
  , issueCommentBody =
      "I like the variadic syntax, though I think the `map` example should still work. The use case for querying multiple indexes is fairly rare, I think it's mainly just useful for us in the web UI. Also, if we do the variadic version, I think the functions should return an array, and each object should contain the index name (for ease of access):\r\n\r\n```python\r\nr.table('foo').index_status('foo', 'bar')\r\n# => [{ 'index': 'foo', 'blocks_left: ...}, { 'index': 'bar', 'blocks_left': ...}]\r\n```\r\n\r\nI really don't like the idea of `r.index_status()` being equivalent to doing it calling it on all indexes. That smells really wrong to me.\r\n\r\nAlso, for all my examples above, we'd call `index_status` on a table, not on `r`. Sorry about that.\r\n\r\nFinally, I'd still prefer merging `index_status` and `index_wait`. Even if it's variadic, we can use an optarg because we can easily tell the difference (object vs. string). We've done it before, and I think it makes the API nicer."
  , issueCommentId = 27828735
  }