IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 08 : 29 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27851015"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1562#issuecomment-27851015"
  , issueCommentCreatedAt = 2013 (-11) (-06) 08 : 29 : 06 UTC
  , issueCommentBody =
      "I have a few thoughts:\r\n\r\n- I have a few features where I'd like to use objects as index names and I'd prefer not to complicate that option with an optarg\r\n- I also think having the way to wait be `index_status(\"foo\", wait=True) is just a weird API. You're not really getting the index status with that call, in fact if you pass the optarg there's only one possible value the function can ever return.\r\n- `r.table(\"foo\").wait()` also seems really weird you're basically never in the case where you need to wait for a table to be ready since it happens by default on creation and happens really quickly.\r\n- `r.table(\"foo\").index(\"foo\")` seems kind of weird because there isn't a lot you can chain after it, we could change that but it seems like a lot to flesh out for this issue. And I'm not sure if the concept of \"evaluating this query results in an index\" is going to jibe well in people's heads. I could be convinced on this though.\r\n\r\nMy preference is still for variadic `index_status` and variadic `index_wait` although if people feel strongly about the `r.table(\"foo\").index(\"bar\")` we could talk. I'm pretty opposed to rolling them in to one function though."
  , issueCommentId = 27851015
  }