Issue
  { issueClosedAt = Just 2015 (-09) (-24) 00 : 50 : 26 UTC
  , issueUpdatedAt = 2015 (-10) (-01) 17 : 45 : 54 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4871/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4871"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4871
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crash during table fuzzing: `Assertion failed: [ptr_]`"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4871"
  , issueCreatedAt = 2015 (-09) (-21) 22 : 42 : 07 UTC
  , issueBody =
      Just
        "On `next`, I ran the table fuzzer like so: `table_fuzzer.py --servers 8 --threads 8 --serve-flags \"--cache-size 0\"`, and observed this crash:\r\n\r\n```\r\n2015-09-21T15:17:35.833374831 198.702407s error: Error in ../src/containers/scoped.hpp at line 102:\r\n2015-09-21T15:17:35.840732388 198.709765s error: Assertion failed: [ptr_]\r\n2015-09-21T15:17:35.843603375 198.712635s error: Backtrace:\r\n2015-09-21T15:17:36.650718008 199.519752s error: Mon Sep 21 15:17:35 2015\r\n\r\n1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n2: backtrace_t::backtrace_t() at backtrace.cc:203\r\n3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n4: format_backtrace(bool) at backtrace.cc:198\r\n5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n6: scoped_ptr_t<remote_replicator_client_t::timestamp_range_tracker_t>::operator->() const at scoped.hpp:102\r\n7: remote_replicator_client_t::next_write_can_proceed(mutex_assertion_t::acq_t*) at remote_replicator_client.cc:491\r\n8: remote_replicator_client_t::on_write_async(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&) at remote_replicator_client.cc:381\r\n9: std::_Mem_fn<void (remote_replicator_client_t::*)(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&)>::operator()(remote_replicator_client_t*, signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&) const at functional:551\r\n10: void std::_Bind<std::_Mem_fn<void (remote_replicator_client_t::*)(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&)> (remote_replicator_client_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>)>::__call<void, signal_t*&&, write_t&&, state_timestamp_t&&, order_token_t&&, mailbox_addr_t<void ()>&&, 0, 1, 2, 3, 4, 5>(std::tuple<signal_t*&&, write_t&&, state_timestamp_t&&, order_token_t&&, mailbox_addr_t<void ()>&&>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5>) at functional:1146\r\n11: void std::_Bind<std::_Mem_fn<void (remote_replicator_client_t::*)(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&)> (remote_replicator_client_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>)>::operator()<signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>, void>(signal_t*&&, write_t&&, state_timestamp_t&&, order_token_t&&, mailbox_addr_t<void ()>&&) at functional:1206\r\n12: std::_Function_handler<void (signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>), std::_Bind<std::_Mem_fn<void (remote_replicator_client_t::*)(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&)> (remote_replicator_client_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>)> >::_M_invoke(std::_Any_data const&, signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>) at functional:1780\r\n13: std::function<void (signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>)>::operator()(signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>) const at functional:2161\r\n14: mailbox_t<void (write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>)>::read_impl_t::read(read_stream_t*, signal_t*) at typed.hpp:414\r\n15: mailbox_manager_t::mailbox_read_coroutine(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, threadnum_t, unsigned long, std::vector<char, std::allocator<char> >*, long, mailbox_manager_t::force_yield_t) at mailbox.cc:277\r\n16: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x1872733] at 0x1872733 ()\r\n17: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x187326e] at 0x187326e ()\r\n18: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n19: coro_t::run() at coroutines.cc:207\r\n20: /home/ssd2/grey/rethinkdb/build/debug/rethinkdb() [0x1872c8c] at 0x1872c8c ()\r\n21: mailbox_manager_t::on_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, read_stream_t*) at mailbox.cc:245\r\n22: connectivity_cluster_t::run_t::handle(keepalive_tcp_conn_stream_t*, boost::optional<peer_id_t>, boost::optional<peer_address_t>, auto_drainer_t::lock_t, bool*) at cluster.cc:1194\r\n23: connectivity_cluster_t::run_t::on_new_connection(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at cluster.cc:294\r\n24: std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(connectivity_cluster_t::run_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:551\r\n25: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0, 1, 2>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\r\n26: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1206\r\n27: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1780\r\n28: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2162\r\n29: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:924\r\n30: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at functional:551\r\n31: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1147\r\n32: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::operator()<, void>() at functional:1206\r\n33: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >::run_action() at callable_action.hpp:31\r\n34: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n35: coro_t::run() at coroutines.cc:207\r\n...\r\n```\r\n\r\nIt appears that the `remote_replicator_client_t` invariant that `tracker_` always exists while `mode_ == BACKFILLING` is not always true."
  , issueState = "closed"
  , issueId = Id 107612821
  , issueComments = 7
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-10) (-05) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 109
          , milestoneClosedIssues = 17
          , milestoneDescription = Just ""
          , milestoneTitle = "2.1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/109"
          , milestoneCreatedAt = 2015 (-10) (-01) 17 : 45 : 43 UTC
          , milestoneState = "closed"
          }
  }