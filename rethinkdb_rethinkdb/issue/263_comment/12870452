IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-30) 02 : 17 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1327969
        , simpleUserLogin = N "dubiousdavid"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1327969?v=3"
        , simpleUserUrl = "https://api.github.com/users/dubiousdavid"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12870452"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/263#issuecomment-12870452"
  , issueCommentCreatedAt = 2013 (-01) (-30) 02 : 13 : 51 UTC
  , issueCommentBody =
      "Take a look at ElasticSearch.  I think the way they handle this is very elegant.  In short, you pass \"2013-01-01\" as a regular json string.  Their system tries to parse the string as a date, and if it can it will store that value internally as a date.  I don't think the automatic parsing is necessary, but the really cool idea they have is to allow schema mappings.  For example, for the following json\r\n```javascript\r\n{\r\n  \"name\": \"Billy Bob\",\r\n  \"birthday\": \"1984-01-01\",\r\n  \"currentAge\": 29\r\n}\r\n```\r\nyou could have a mapping like this\r\n```javascript\r\n{\r\n  \"name\": {\"type\": \"string\", \"maxLength\": 50},\r\n  \"birthday\": {\"type\": \"date\", \"format\": \"YYYY-MM-DD\"},\r\n  \"currangeAge\": {\"type\": \"int\"}\r\n}\r\n```\r\nThis allows you to keep json as json, one of MongoDB's biggest and most annoying shortcomings (bson), while supporting any kind of type theoretically (uuid, date, etc.), as well as restrictions on that type (e.g., \"maxLength\" on a string).  It could also allow for greater optimizations, potentially.  For example, specifying a numeric field as an int vs. float."
  , issueCommentId = 12870452
  }