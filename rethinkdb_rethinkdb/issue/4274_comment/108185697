IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-03) 04 : 14 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 238310
        , simpleUserLogin = N "xorgonix"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/238310?v=3"
        , simpleUserUrl = "https://api.github.com/users/xorgonix"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/108185697"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4274#issuecomment-108185697"
  , issueCommentCreatedAt = 2015 (-06) (-03) 04 : 14 : 42 UTC
  , issueCommentBody =
      "I'm a production/qa/dev Dba here working in a pile of environments (mostly relational). It is So nice to be able to quickly swap in/out databases without a lot of busy work (often requiring a lot of disk space/bandwidth/time)\n\nSent from my iPad\n\n> On Jun 1, 2015, at 4:12 PM, Daniel Mewes <notifications@github.com> wrote:\n> \n> There's currently the simple work-around of unpacking the backup, renaming the folders inside of it, and then using rethinkdb import to load it back.\n> \n> Renaming databases sounds useful, and the question has come up a couple of times.\n> I would use slightly different argument names:\n> \n> --db-prefix\n> --db-suffix\n> --db-rename <old>:<new>\n> We can consider adding similar options for renaming tables at some point.\n> \n> \8212\n> Reply to this email directly or view it on GitHub.\n> \n"
  , issueCommentId = 108185697
  }