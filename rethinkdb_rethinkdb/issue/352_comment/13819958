IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-20) 07 : 55 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13819958"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/352#issuecomment-13819958"
  , issueCommentCreatedAt = 2013 (-02) (-20) 07 : 53 : 17 UTC
  , issueCommentBody =
      "Please don't close issues until they're code reviewed. For reql_testing milestone let's use the following procedure:\r\n\r\n1. Mention that the issue has been fixed and the commit number for the fix/tests here on github\r\n2. I'll code review/expand the tests for every issue/regression\r\n3. We can close the issue if there is no more feedback\r\n\r\nAfter we ship 1.4 we'll use the same modus operandi for ReQL as for all other code (i.e. codecollaborator)\r\n\r\nEDIT: an extra reason to do this (other than the usual code review reasons) is that I have a very precise idea of the ReQL spec in my head, but have no random access to it. Forcing me to review issues/tests will force me to remember tidbits of the spec, which in turn will force me to add relevant unit tests (which is always a good thing)."
  , issueCommentId = 13819958
  }