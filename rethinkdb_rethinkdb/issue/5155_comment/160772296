IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-30) 21 : 48 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/160772296"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5155#issuecomment-160772296"
  , issueCommentCreatedAt = 2015 (-11) (-30) 21 : 48 : 55 UTC
  , issueCommentBody =
      "That's indeed very odd.\r\n@mlucy Do you have an idea why the second one would be slower? Is this expected with the current implementation? (Maybe `skip`/`slice` somehow mess with the batch spec in a detrimental way?)\r\n\r\n@kwando Could you try the following and see if it's fast or slow?\r\n```js\r\nr.order_by(index: reql.desc('date')).slice(0, input.per_page)\r\n```"
  , issueCommentId = 160772296
  }