Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 40 : 23 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4966/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4966"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 4966
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 3628530
        , simpleUserLogin = N "FransBouma"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/3628530?v=3"
        , simpleUserUrl = "https://api.github.com/users/FransBouma"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add support for document type inheritance"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4966"
  , issueCreatedAt = 2015 (-10) (-17) 09 : 22 : 17 UTC
  , issueBody =
      Just
        "(this might be a 'client' side thing though. If so, just close it :))\n\nSeveral document databases have support for Inheritance out of the box, however RethinkDB doesn't (as far as I can tell). I'm currently writing a modeler system for derived models (which can be used on document databases) on entity models in our entity modeler LLBLGen Pro and added support for MongoDB, RavenDB, DocumentDB and RethinkDB, and the last didn't support inheritance of types, hence my question.\n\nInheritance can be very handy in documents, especially when the client uses an OO language. E.g. the superclass 'Product' can have e.g. the subclass 'Bread' which can have subclasses 'CornBread' and 'SaltlessBread'. The leaf types in this hierarchy can have different properties, and as there's no schema in document databases, they can still be stored with the other documents without a problem. Inheritance can be used in root documents and embedded documents. \n\nMongoDB and other document databases store the type in a '_t' variable in the JSon. In the example above, they'll store the whole hierarchy if you want to: e.g. `_t: [ \"Product\", \"Bread\", \"CornBread\"]` for an instance of CornBread. This has the advantage that if you want to query on all Bread instances, it's easy to pull that from an index, as the query processor should delegate the type filter to filtering on a value in the _t array. \n\nIt's not a given to use _t, you can use whatever you want of course. IMHO it would be a good addition, as the flexibility of types used on the client, including extra querying options are a huge benefit.\n"
  , issueState = "open"
  , issueId = Id 111952543
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }