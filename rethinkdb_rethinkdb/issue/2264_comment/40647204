IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-16) 20 : 21 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/40647204"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2264#issuecomment-40647204"
  , issueCommentCreatedAt = 2014 (-04) (-16) 20 : 21 : 06 UTC
  , issueCommentBody =
      "Well, I imagine the code involved is this:\r\n\r\n```c\r\nsrh   2013-01-24 17:02:06 |    // Create a metadata FIFO sink and pulse the `got_initial_message` cond so\r\nsrh   2013-01-24 17:02:06 |    // that instances of `propagate_update()` can proceed\r\nsrh   2013-01-24 17:02:06 |    // TODO: Do we want this .reset() here?  It is not easily provable\r\nsrh   2013-01-24 17:02:06 |    // that it'll be initialized only once.\r\nsrh   2013-01-24 17:02:06 |    session->metadata_fifo_sink.reset();\r\nsrh   2013-01-24 17:02:06 |    session->metadata_fifo_sink.init(new fifo_enforcer_sink_t(metadata_fifo_state));\r\n```\r\n\r\nSo it would appear that not only is this very old, it was even anticipated by our prophet and savior, @srh.  I will investigate to see what conditions the session `metadata_fifo_sink` might be stale in."
  , issueCommentId = 40647204
  }