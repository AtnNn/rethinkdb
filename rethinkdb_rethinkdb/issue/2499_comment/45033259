IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-03) 23 : 26 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/45033259"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2499#issuecomment-45033259"
  , issueCommentCreatedAt = 2014 (-06) (-03) 23 : 26 : 14 UTC
  , issueCommentBody =
      "The way we're iterating over the `relationships` region_map_t (the `cluster_namespace_interface_t::relationships` field) suggests that the code assumes that the `relationships` map never changes.  This would be plausible if we knew the coroutine was non-blocking.  It *looks* non-blocking at and inside that for loop.  If the line number `namespace_interface.cc:119` is off by 1, it could be the `region_to_primary` field that is pointing at garbage.  Looking at the code in namespace_interface_repository.cc, it seems like we overwrite the map whose map entry that `region_to_primary` pointer points at.  (Does that happen outside the lifetime of the create_and_destroy_namespace_interface coroutine?  I'd need to look harder to see.)"
  , issueCommentId = 45033259
  }