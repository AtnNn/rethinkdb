IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-26) 19 : 44 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 2072672
        , simpleUserLogin = N "chrisfosterelli"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/2072672?v=3"
        , simpleUserUrl = "https://api.github.com/users/chrisfosterelli"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/125032443"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4581#issuecomment-125032443"
  , issueCommentCreatedAt = 2015 (-07) (-26) 19 : 44 : 21 UTC
  , issueCommentBody =
      "Thanks @danielmewes! I think updating the documentation to specify that its only referring to `update`/`replace` operations when it throws an error would make this _way more straightforward_ and would've cleared up my confusion. It would be even better if it could be worded in a way that made it clear subqueries like I was trying to do with `insert` would _not_ be atomic.\r\n\r\nIn regards to #4582, that would a really neat feature as well and would make the behaviour much more intuitive.\r\n\r\nAlso, thanks for providing the actual code I was looking for that does an atomic upsert with `append`. That's not the intuitive approach I would've guessed, but it's great to know it's possible :)\r\n\r\nIt seems like my question is resolved, and the rethinkdb/docs#834 and #4582 have been created to deal with the individual issues. OK to close this issue then?"
  , issueCommentId = 125032443
  }