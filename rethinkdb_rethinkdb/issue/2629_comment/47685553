IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-01) 17 : 28 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47685553"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2629#issuecomment-47685553"
  , issueCommentCreatedAt = 2014 (-07) (-01) 17 : 28 : 26 UTC
  , issueCommentBody =
      "@neumino That still catches too many errors. You can currently do:\r\n\r\n```\r\nsequence.reduce(f).default(lambda e: r.branch(e == \"Cannot reduce over an empty stream\", 0, r.error()))\r\n```\r\n\r\nBut if the sequence is not empty and the call to `f` throws that same error, it is going to be caught by the handler."
  , issueCommentId = 47685553
  }