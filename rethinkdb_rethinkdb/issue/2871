Issue
  { issueClosedAt = Just 2014 (-09) (-09) 02 : 15 : 21 UTC
  , issueUpdatedAt = 2015 (-01) (-02) 21 : 16 : 51 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2871/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2871"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 2871
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 316661
          , simpleUserLogin = N "timmaxw"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/316661?v=3"
          , simpleUserUrl = "https://api.github.com/users/timmaxw"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Database management tools for ReQL admin API"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2871"
  , issueCreatedAt = 2014 (-08) (-11) 22 : 48 : 36 UTC
  , issueBody =
      Just
        "Once the old HTTP admin API is torn out, we won't have good ways to do some database administration commands:\r\n* Renaming a database. We could solve this by introducing `r.db_rename(old_name, new_name)`.\r\n* Resolving a name collision. We could solve this by some sort of auto-renaming procedure, like we've been discussing for tables and servers. If we decide not to do auto-renaming, then maybe we should offer a pseudo-table `db_config`; or maybe we could let `db_rename` take a UUID in place of `old_name`.\r\n\r\nWe could also consider making larger changes to the concept of a database, like fixing #301, or adding database-specific configuration options."
  , issueState = "closed"
  , issueId = Id 40008897
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }