IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-22) 16 : 11 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 265071
        , simpleUserLogin = N "kofalt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/265071?v=3"
        , simpleUserUrl = "https://api.github.com/users/kofalt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/95251469"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3471#issuecomment-95251469"
  , issueCommentCreatedAt = 2015 (-04) (-22) 16 : 11 : 39 UTC
  , issueCommentBody =
      "The `since` optarg sounds excellent, and matches well with intermittent client connections. I have been catching up on this conversation with a mind to use it in [server-sent events](http://www.w3.org/TR/eventsource/), and it sounds like `since` will play nicely with SSE's `Last-Event-ID` feature, for example.\r\n\r\nAm I correct in thinking that `since` would allow a reader to replay a changefeed from a state that the server has already sent out to a previous reader? How long would a given `since` value be valid? \r\n\r\nI am assuming that `since` would require keeping a buffer of changes both sent & unsent, and thus has a finite lifespan. What is the failure mode, closing the feed & error on a `since` open attempt?\r\n\r\nFinally, any thoughts on changefeed name overlap? I am envisioning a case where a changefeed `JoeChanges` is created, and is closed (intentionally or an error state like overflow). At which point it may be possible to confuse a newly-created feed `JoeChanges` with the originally-named `JoeChanges`. Should clients be expected to manage this distinction, perhaps by appending a guid to the feed name? "
  , issueCommentId = 95251469
  }