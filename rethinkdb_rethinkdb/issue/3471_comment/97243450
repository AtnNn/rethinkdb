IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-28) 22 : 18 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/97243450"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3471#issuecomment-97243450"
  , issueCommentCreatedAt = 2015 (-04) (-28) 22 : 18 : 50 UTC
  , issueCommentBody =
      "As @larkost mentioned, there are two main use cases for named change feeds: work queues, and recovering from client/server/connection failures. I don't think we're doing change-feeds-as-work-queues. The main difference between these proposals is which components we recover from the failure of. B-tree timestamp solutions allow recovery from any failure. Server-side in-memory queues allow recovery from client or connection failure. The latest proposal allows recovery from connection failure only. So there's a big open question of how common the different types of failures are. I agree with @deontologician that client and server failures are important, so we need something better eventually. @coffeemug, do you have any input from users on how common the three types of failures are?"
  , issueCommentId = 97243450
  }