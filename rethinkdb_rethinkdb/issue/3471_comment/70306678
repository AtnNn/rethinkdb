IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-16) 19 : 19 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/70306678"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3471#issuecomment-70306678"
  , issueCommentCreatedAt = 2015 (-01) (-16) 19 : 19 : 56 UTC
  , issueCommentBody =
      "Assuming it's actually easier to implement, I like @mlucy's API more (or at least the general gist of it), because it's much easier for users to consume. If we send the user a token they have to later send back, they'd have to deal with persisting the token. For example, if the client crashes and they start another one, they'd have to pull the latest known token from somewhere to send it to the database. If we implement persistent named feeds, that problem goes away entirely since they can just continue reading from the feed.\r\n\r\nThat being said, named feeds open up a couple of semantic questions/opportunities we should talk about. For example, what happens when multiple clients connect to the same named feed? (There are a few obvious choices we could make; we could also add an optarg to control this behavior, etc.)"
  , issueCommentId = 70306678
  }