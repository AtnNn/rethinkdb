IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-24) 00 : 24 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/95761441"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3471#issuecomment-95761441"
  , issueCommentCreatedAt = 2015 (-04) (-24) 00 : 24 : 53 UTC
  , issueCommentBody =
      "I think we should think about the table-backed changefeeds later (not for 2.1). There are a few requirements to make this work (@josh and I had been discussing it on Slack), and while it seems possible and it has some nice properties, it will be a lot more effort upfront than adding non-persistent queues.\r\n\r\n@mlucy \r\n> Actually, another point in favor of the \"require people to reconnect to the original server\" approach: your changefeed is only interrupted if the table you're reading from or the server you're connected to goes down. With the other approach, you'll be disconnected if whatever random machine in the cluster is hosting the feed goes down. But maybe that's fine, actually.\r\n\r\nThat doesn't happen if we always host the queues on the primary though.\r\nIn the \"require people to reconnect to the original server\", you would actually lose the changefeed if either that server or the primary goes down wouldn't you?\r\nIf you always keep the queues on the primary on the other hand, you only lose it if the primary goes down. If the server you're connected to goes down, you can still resume the feed from another server."
  , issueCommentId = 95761441
  }