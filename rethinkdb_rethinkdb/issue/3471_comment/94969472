IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-21) 23 : 16 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/94969472"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3471#issuecomment-94969472"
  , issueCommentCreatedAt = 2015 (-04) (-21) 23 : 16 : 01 UTC
  , issueCommentBody =
      "I like the idea of \"change ids\". I imagine it should be an increasing integer that we transmit with each change.\r\nThe server should then buffer and restransmit enough batches to make sure that each change is still retrieved from a client-side cursor at least once, given pre-fetching (@Tryneus mentioned three batches).\r\n\r\nThis allows users to implement persistence in the client if they need to make sure that they process each change only once (they could push it down to a browser cookie in the one use case), but they don't have to if they don't need that guarantee.\r\n\r\nAn explicit `ack` like @timmaxw proposed sounds good, as long as it's strictly optional. I don't think it's a requirement for our initial implementation though.\r\n\r\nListing existing named changefeeds in the `jobs` table sounds good to me."
  , issueCommentId = 94969472
  }