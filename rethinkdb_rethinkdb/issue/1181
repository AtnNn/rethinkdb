Issue
  { issueClosedAt = Just 2015 (-01) (-08) 23 : 56 : 56 UTC
  , issueUpdatedAt = 2015 (-04) (-02) 21 : 30 : 09 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1181/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1181"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 1181
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Enforce UTF-8 encoding of strings"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1181"
  , issueCreatedAt = 2013 (-07) (-18) 00 : 10 : 51 UTC
  , issueBody =
      Just
        "There are many inconsistencies in the treatment of strings. It should probably be standardised across drivers and reql functions, and documented.\r\n\r\nThe python driver refuses non-ascii strings unless they are unicode:\r\n\r\n```\r\npython> r.expr('\\xc1').run()\r\n  File \"/Library/Python/2.7/site-packages/google/protobuf/internal/type_checkers.py\", line 128, in CheckValue\r\n    (proposed_value))\r\nValueError: '\\xc1' has type str, but isn't in 7-bit ASCII encoding. Non-ASCII strings must be converted to unicode objects before being added.\r\n```\r\n\r\nThe ruby driver lets you use strings that are not utf8:\r\n\r\n```\r\nruby> r.expr(\"\\xc1\").run\r\n=> \"\\301\"\r\n```\r\n\r\nThe python drivers fails badly when receiving a non-utf8 string:\r\n\r\n```\r\nruby> r.table('foo').insert({:a=>\"\\xc1\"}).run\r\n\r\npython> r.table('foo').run()\r\n  File \"/Library/Python/2.7/site-packages/google/protobuf/internal/decoder.py\", line 410, in DecodeField\r\n    field_dict[key] = local_unicode(buffer[pos:new_pos], 'utf-8')\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xc1 in position 0: invalid start byte\r\n```\r\n\r\n`r.js` expects strings to be utf-8, and gets confused when they are not:\r\n\r\n```\r\nruby> r.expr(\"\\xc1\").do(r.js('(function(x){ return x; })')).run\r\n=> \"\\357\\277\\275\"\r\n```\r\n\r\n`r.match` also expects utf-8:\r\n\r\n```\r\nruby> r.expr(\"a\").match(\".\").run\r\n=> {\"groups\"=>[], \"end\"=>1, \"str\"=>\"a\", \"start\"=>0}\r\n\r\nruby> r.expr(\"\\xc1\").match(\".\").run\r\n=> nil\r\n```\r\n\r\nOther reql functions that use operations from C++'s `std::string` (such as comparison operators) simply treat strings as arrays of bytes.\r\n\r\nThe JSON spec says that\r\n\r\n> A string is a sequence of zero or more Unicode characters, wrapped in double quotes\r\n\r\nThis affects issues such as #264, #874, #1099 and #1147.\r\n\r\nIssue #137 complements this issue by proposing a separate binary data type."
  , issueState = "closed"
  , issueId = Id 16897587
  , issueComments = 10
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }