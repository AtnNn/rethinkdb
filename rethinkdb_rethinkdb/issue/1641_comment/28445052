IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-13) 23 : 29 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/28445052"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1641#issuecomment-28445052"
  , issueCommentCreatedAt = 2013 (-11) (-13) 23 : 29 : 47 UTC
  , issueCommentBody =
      "The problem with making optargs \"statically evaluated\" is that they have to be a datum, and right now we let people specify terms as optarags (e.g. for the default database).  I'm also not convinced that we won't want more non-datum optargs in the future.  For example, we let people pass a function to the `default` optarg of `filter`; I could see letting people specify functions in global optargs.  Maybe a batching strategy?  Maybe an error handler?\r\n\r\nI think the easiest thing to do would be to just evaluate the optargs in a context where no other optargs are defined."
  , issueCommentId = 28445052
  }