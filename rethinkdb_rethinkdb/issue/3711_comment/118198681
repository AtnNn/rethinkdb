IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-03) 00 : 10 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/118198681"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3711#issuecomment-118198681"
  , issueCommentCreatedAt = 2015 (-07) (-03) 00 : 10 : 34 UTC
  , issueCommentBody =
      "After skimming through the [draft specification](https://github.com/facebook/graphql) it appears as though GraphQL relies pretty heavily upon schema definitions through its own type system in order to validate queries and to support reflection. As a result, I don't think RQL itself could support a term like `r.graphql(<statement>)` because the statement needs to be interpreted in the context of application-specific types.\r\n\r\nHowever, as @danielmewes mentioned, it would probably be possible to implement this as a wrapper around RQL (similar to [`thinky`](https://github.com/neumino/thinky)) which could be made aware of user-defined schemas."
  , issueCommentId = 118198681
  }