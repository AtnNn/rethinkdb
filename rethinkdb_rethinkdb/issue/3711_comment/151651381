IssueComment
  { issueCommentUpdatedAt = 2015 (-10) (-27) 21 : 31 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/151651381"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3711#issuecomment-151651381"
  , issueCommentCreatedAt = 2015 (-10) (-27) 21 : 31 : 53 UTC
  , issueCommentBody =
      "> Is this similar to ArangoDB Foxx?\r\n\r\nThere are some similarities to Foxx on an abstract level. However we don't aim at moving more logic into the database.\r\nInstead we think that it's important that developers who want to focus on front-end development have to deal with the backend as little as possible (including both the database and potentially an application-specific backend). So one could say that we try to move logic into the frontend code, and make it extremely easy to write reactive applications on that level. Once more control is needed, the backend will be extensible to allow the addition of further logic there, but this will not be necessary to get started with writing a fully functional realtime application.\r\nOf course there are a bunch of security considerations to take into account with this approach. We should have an issue up about that part soon to discuss details."
  , issueCommentId = 151651381
  }