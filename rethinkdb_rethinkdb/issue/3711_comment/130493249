IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-13) 00 : 56 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 704302
        , simpleUserLogin = N "rattrayalex"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/704302?v=3"
        , simpleUserUrl = "https://api.github.com/users/rattrayalex"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/130493249"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3711#issuecomment-130493249"
  , issueCommentCreatedAt = 2015 (-08) (-13) 00 : 56 : 20 UTC
  , issueCommentBody =
      "As basically \"a random member of the React community\", I'm seeing a lot of shops switching (actively, soon, or planned) from Angular/whatever to React. I myself recently did a big switch from Angular to React and the results are just great. Going straight to Relay as well at the same time would be a massive win, the problem is that there aren't any GraphQL implementations out yet. \r\n\r\nRethinkDB seems poised to be a top candidate to support it faster and better than any others, since it's already so much closer to what the client is asking for than, say, PGSQL (which would otherwise be my first choice). \r\n\r\nWhile a community adapter is a totally sane approach to this, and in fact I nebulously hope to experiment with building one myself, native official support from the RethinkDB team could really push things over the edge for a lot of teams who are starting out or rewriting and want to be building with best-of-breed technologies.\r\n\r\ntl;dr, I agree with @Agamennon that official support for GraphQL could lead to a big growth boost for RDB, though a community adapter would be \"fine\" too. "
  , issueCommentId = 130493249
  }