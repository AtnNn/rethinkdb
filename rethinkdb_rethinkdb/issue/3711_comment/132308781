IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-18) 18 : 28 : 36 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 6295938
        , simpleUserLogin = N "troybetz"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/6295938?v=3"
        , simpleUserUrl = "https://api.github.com/users/troybetz"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/132308781"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3711#issuecomment-132308781"
  , issueCommentCreatedAt = 2015 (-08) (-18) 18 : 28 : 36 UTC
  , issueCommentBody =
      "This *might* be helpful, it's from an [interview with some of the relay team members](https://devchat.tv/js-jabber/152-jsj-graphql-and-relay-with-nick-schrock-and-joe-savona-)\r\n\r\n> CHUCK: ...as far as security goes, I don\8217t want just anybody formulating GraphQL queries to send to my system. Is the structure inherently more secure? Or do you just secure your endpoint the same way you it with anything else? So, OAuth, authentication headers, HTTPS.\r\n\r\n> NICK: Yeah, we just use existing authentication.\r\n\r\n> NICK: Basically we effectively grab an access token from out external platform and we ensure that\8217s from a Facebook app. And then we piece out and then we just execute the string. So, GraphQL\8217s an explicitly higher level protocol than HTTP. It is an application layer protocol. That\8217s one of the things I find actually strange about REST, is the coupling of HTTP and the application level protocol. So, the authentication mechanism is completely orthogonal to GraphQL."
  , issueCommentId = 132308781
  }