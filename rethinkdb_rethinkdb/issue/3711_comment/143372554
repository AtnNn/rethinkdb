IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-25) 23 : 04 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 379606
        , simpleUserLogin = N "ide"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/379606?v=3"
        , simpleUserUrl = "https://api.github.com/users/ide"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/143372554"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3711#issuecomment-143372554"
  , issueCommentCreatedAt = 2015 (-09) (-25) 23 : 04 : 48 UTC
  , issueCommentBody =
      "> @leebyron: The critical difficult issue to solve is how to build GraphQL integration into RethinkDB in such a way that as your product needs evolve and become more complicated, you can iteratively move the responsibility for fulfilling GraphQL from RethinkDB into your application server logic without some massive migration effort\r\n\r\n> @coffeemug Have a design that allows for a piecemeal migration to custom business/security logic for the relevant subsets of GraphQL queries as the users's apps get more complex. I'm not 100% certain how we'll do this yet, but it shouldn't be too hard.\r\n\r\nI believe in these points strongly enough that I want to reiterate how important it is for RethinkDB+GraphQL to have a high ceiling that accommodates many needs. As a counterexample, Parse's model makes it difficult to build applications whose security & privacy logic doesn't neatly fit into an ACL-shaped hole. You end up needing to write Cloud Code at which point you're better off running your server-side code on your own servers in many ways. This sounds similar to @mike-marcacci's experience with Meteor if I understood him correctly.\r\n\r\nI do love the idea of being able to simply drop some GraphQL fragments into my React components and have them load data from RethinkDB. That is awesome! I guess I have strong feelings that this isn't the goal but instead a path along the way to building applications that have custom logic between GraphQL and RethinkDB. It's a means to an end.\r\n\r\n@marshall007 it's a cool idea. I think it'd be neat to write `me { facebookFriends { nodes { instagramPhotos { likes: { nodes: { twitterUsername } } } }}`. You get the idea :)"
  , issueCommentId = 143372554
  }