IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-30) 05 : 11 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 277884
        , simpleUserLogin = N "samkelleher"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/277884?v=3"
        , simpleUserUrl = "https://api.github.com/users/samkelleher"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/167938007"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5245#issuecomment-167938007"
  , issueCommentCreatedAt = 2015 (-12) (-30) 05 : 11 : 38 UTC
  , issueCommentBody =
      "That's okay @mglukhovsky! \128515\r\n\r\nThe environment is within Docker, 1 container marked as a master. 3 containers marked as 'slaves'. The slave containers are only different in that they have the --join argument on startup.\r\n\r\nAll 4 nodes are able to talk with any of the other members as using Docker links.\r\n\r\nIt's possible there was some sort of interuption, but I don't see how, since each node was able to access data etc.\r\n\r\nThis may be linked to the fact that one of the servers was missing before the new nodes were added. As I mentioned in #4806. So perhaps the failure is coming from the primary still trying to contact the dead server and killing the election in the process.\r\n\r\nIf that's the case then a new election can't take place once a server becomes missing before the cluster was created, which is a bit undesirable. I'm guessing it's best to run RethinkDB with either 1 or at least 3, but never 2.  I'll continue testing with 3 nodes and drop back with an update."
  , issueCommentId = 167938007
  }