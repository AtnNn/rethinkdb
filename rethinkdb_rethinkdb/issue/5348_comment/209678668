IssueComment
  { issueCommentUpdatedAt = 2016 (-04) (-13) 22 : 53 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 952451
        , simpleUserLogin = N "nighelles"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/952451?v=3"
        , simpleUserUrl = "https://api.github.com/users/nighelles"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/209678668"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5348#issuecomment-209678668"
  , issueCommentCreatedAt = 2016 (-04) (-13) 22 : 42 : 35 UTC
  , issueCommentBody =
      "I managed to reproduce this in a low memory environment on Ubuntu 14.04 with a release version of 2.3.\r\n\r\nI was able to finagle the following backtrace:\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0xf5fffb40 (LWP 1673)]\r\n0x08fea15d in ?? ()\r\n#0  0x08fea15d in ?? ()\r\n#1  0x08fea286 in ?? ()\r\n#2  0x08fea7ff in ?? ()\r\n#3  0x08febe8e in ?? ()\r\n#4  0x08fe4609 in ?? ()\r\n#5  0x08fe59c7 in posix_memalign ()\r\n#6  0x086d9e7b in raw_malloc_page_aligned(unsigned int) ()\r\n#7  0x085fcded in artificial_stack_t::artificial_stack_t(void (*)(), unsigned int) ()\r\n#8  0x08600f49 in coro_t::get_coro() ()\r\n#9  0x086b83a6 in alt::page_t::page_t(alt::page_t*, alt::page_cache_t*, cache_account_t*) ()\r\n#10 0x086b84fd in alt::page_ptr_t::get_page_for_write(alt::page_cache_t*, cache_account_t*) ()\r\n#11 0x086aa7f7 in alt::current_page_acq_t::current_page_for_write(cache_account_t*) ()\r\n#12 0x0869dd04 in buf_write_t::get_data_write(unsigned int) ()\r\n#13 0x0867bfa5 in apply_keyvalue_change(value_sizer_t*, keyvalue_location_t*, btree_key_t const*, repli_timestamp_t, value_deleter_t const*, key_modification_callback_t*, delete_mode_t) ()\r\n#14 0x0841b2c1 in kv_location_set(keyvalue_location_t*, store_key_t const&, ql::datum_t, repli_timestamp_t, deletion_context_t const*, rdb_modification_info_t*) ()\r\n#15 0x0841b772 in rdb_replace_and_return_superblock(btree_loc_info_t const&, btree_point_replacer_t const*, deletion_context_t const*, promise_t<superblock_t*>*, rdb_modification_info_t*, profile::trace_t*) ()\r\n#16 0x084246c2 in do_a_replace_from_batched_replace(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*) ()\r\n#17 0x08425a2f in std::_Function_handler<void (), std::_Bind<void (*(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t, btree_loc_info_t, one_replace_t, ql::configured_limits_t, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*))(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, btree_loc_info_t const&, one_replace_t, ql::configured_limits_t const&, promise_t<superblock_t*>*, rdb_modification_report_cb_t*, bool, ql::datum_t*, profile::trace_t*, std::set<std::string, std::less<std::string>, std::allocator<std::string> >*)> >::_M_invoke(std::_Any_data const&) ()\r\n#18 0x08429205 in coro_pool_t<std::function<void ()> >::worker_run(std::function<void ()>, auto_drainer_t::lock_t) ()\r\n#19 0x0842945d in callable_action_instance_t<std::_Bind<std::_Mem_fn<void (coro_pool_t<std::function<void ()> >::*)(std::function<void ()>, auto_drainer_t::lock_t)> (coro_pool_t<std::function<void ()> >*, std::function<void ()>, auto_drainer_t::lock_t)> >::run_action() ()\r\n#20 0x08600bfd in coro_t::run() ()\r\n#21 0x00000000 in ?? ()\r\n```"
  , issueCommentId = 209678668
  }