Issue
  { issueClosedAt = Just 2015 (-03) (-24) 02 : 21 : 31 UTC
  , issueUpdatedAt = 2015 (-03) (-24) 02 : 21 : 35 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1944/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1944"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:performance"
          , labelName = "tp:performance"
          }
      ]
  , issueNumber = 1944
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Investigate options to make partial backfills resumable more often"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1944"
  , issueCreatedAt = 2014 (-02) (-12) 05 : 31 : 14 UTC
  , issueBody =
      Just
        "As far as I understand, we currently update the version of backfilled data only after a whole shard has completed backfilling.\nIf for some reason a node goes down while backfilling, it has to backfill the whole shard again when it gets restarted. In combination with slow backfills on rotational drives (#1885), that can become quite a pain.\n\nI wonder if we could artificially split up a range shard into a number of (even) smaller ranges during backfilling. Each of those subranges could be backfilled independently one after another. As soon as one subrange finishes backfilling, its current data version could be updated.\nIf a partially complete backfilling process is aborted for some reason, subranges that had already completed backfilling wouldn't have to be backfilled all over again when the process is resumed later.\n\nMarking for subsequent. If this turns out to be difficult, we should probably move this to 2.x. If it is easy to do on the other hand it might be worth doing earlier.\nThere might also be other options.\n"
  , issueState = "closed"
  , issueId = Id 27411044
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }