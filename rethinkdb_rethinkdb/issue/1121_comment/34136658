IssueComment
  { issueCommentUpdatedAt = 2014 (-02) (-05) 05 : 32 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/34136658"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1121#issuecomment-34136658"
  , issueCommentCreatedAt = 2014 (-02) (-05) 04 : 25 : 18 UTC
  , issueCommentBody =
      "I added a tool a few days ago for rethinkdbdash that generates tests for backtrace.\r\nhttps://github.com/neumino/rethinkdbdash/blob/master/tool/generateTest.js\r\n\r\nGiven a query, it will print the backtrace and if it's good, I can copy/paste the whole generated test below.\r\nWe can probably build something similar for the polyglots tests.\r\n\r\n\r\nAll the generated tests are here:\r\nhttps://github.com/neumino/rethinkdbdash/blob/3a5e99afb47a1c9a6f5489c068bff46b1590a5c6/test/backtrace.js\r\n\r\nFrom a general point of view, I think our backtrace lack precision.\r\nFor example we should just underline `\"a\"` in this case:\r\n```\r\nExpected type ARRAY but found STRING. in:\r\nr.dbList().do(function(var_1) {\r\n    return var_1.add(\"a\")\r\n           ^^^^^^^^^^^^^^\r\n})\r\n```\r\n\r\nIf we highlight the previous term, for a query like\r\n```\r\nr.table(\"foo\").filter(...).map(...).pluck(...).add(2)\r\n```\r\nThe backtrace will be the whole query because we highlight the term before and after `add`."
  , issueCommentId = 34136658
  }