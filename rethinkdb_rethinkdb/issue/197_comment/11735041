IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-28) 16 : 16 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11735041"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/197#issuecomment-11735041"
  , issueCommentCreatedAt = 2012 (-12) (-28) 16 : 16 : 10 UTC
  , issueCommentBody =
      "This is a dup of #186 (I'm temporarily leaving both open -- feel free to merge and copy relevant information into this issue). Will definitely be done after protobuf refactor is complete.\r\n\r\nOur internal thinking is that working with arrays and nested objects should be very easy in ReQL out of the box. It likely won't require server support (since all of the operations can be done on the server) beyond making `map` polymorphic on objects (as proposed by @jdoliner / @mlucy), so most of the work will be on the client/driver side. We also likely won't support the dot notation (string interpolation is typically a bad idea because of injection attacks, etc.) but will instead try to reuse the same notation we have now for value access (e.g. `row('foo')('bar')` in js, `row['foo']['bar']` in python, etc.)\r\n\r\nAs far as dealing with missing attributes in a nested notation, I think we'll try to make bottom semantics (as proposed by @jdoliner) work."
  , issueCommentId = 11735041
  }