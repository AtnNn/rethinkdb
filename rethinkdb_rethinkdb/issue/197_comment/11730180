IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-28) 11 : 36 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 181337
        , simpleUserLogin = N "pixelspark"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/181337?v=3"
        , simpleUserUrl = "https://api.github.com/users/pixelspark"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11730180"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/197#issuecomment-11730180"
  , issueCommentCreatedAt = 2012 (-12) (-28) 11 : 36 : 39 UTC
  , issueCommentBody =
      "Shorthand notation for embedded fields would be nice indeed, but also requires making some assumptions. For instance, what happens when there is no address field on a particular object? See issue #183 in particular. \r\n\r\nIn addition, shortcuts like this (and the one described in #183) can easily be implemented completely at the client side, e.g. as follows (not tested, just to give an idea of what the code would look like):\r\n\r\n```javascript\r\nfunction dotNotation(filter) {\r\n  return function(x) {\r\n     var f = null;\r\n\r\n      for(var k in filter) {\r\n         var path = k.split(/\\./);\r\n         var q = x.row;\r\n        for(var p=0; p<path.length; p++) {\r\n           q = q(path[p]);\r\n       }\r\n\r\n       q = q.eq(filter[k]);\r\n       f = f ? f.and(q) : f;\r\n     } \r\n\r\n    return f;\r\n  };\r\n}\r\n\r\ndb.table('user').filter(dotNotation({'address.street':'10 Downing'}));\r\n```\r\n\r\nThe question is whether the shortcut warrants changes at the server side and extra complexity in ReQL."
  , issueCommentId = 11730180
  }