IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-15) 07 : 37 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20955337"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/939#issuecomment-20955337"
  , issueCommentCreatedAt = 2013 (-07) (-15) 07 : 37 : 32 UTC
  , issueCommentBody =
      "> Can you explain what makes this is difficult?\r\n\r\nPointer comparison logic used on the `void *` buffers.  It's not *that* difficult to work around, you could just add a 64-bit nonce field to everything to represent buffer identity instead of using the raw pointer values.\r\n\r\n> A third option is to write on a 512 byte granularity (i.e. if a block is smaller than 512 bytes, we write 512 bytes anyway), which is the smallest block size disks allow.\r\n\r\nWe are padding to 512 bytes now in sam_939_alt (the main development branch for this issue) but the buf concatenation logic has not been removed.  In sam_939_iovec, this is replaced with a use of writev, so that we can avoid hogging the blocker pool threads."
  , issueCommentId = 20955337
  }