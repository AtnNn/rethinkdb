IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-13) 00 : 10 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 371348
        , simpleUserLogin = N "jakcharlton"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/371348?v=3"
        , simpleUserUrl = "https://api.github.com/users/jakcharlton"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/30475330"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1764#issuecomment-30475330"
  , issueCommentCreatedAt = 2013 (-12) (-13) 00 : 09 : 17 UTC
  , issueCommentBody =
      "@neumino I thought I was fine with the exception if I set my join field value to an object or array, but thinking about it more, this seems like a reasonable use case too ... after all the point of a document database is that schema is flexible, and largely under control of the application not the database\r\n\r\nIf it cannot join, my feeling is it should just exclude the row - maybe with profiler or logs it could optionally explain why it excluded\r\n\r\nIf I was coding in Ruby or JS, a line like the following would do it's best to coalesce/convert the values to get a match - but return false if it couldn't find a away to make them \"the same thing\"\r\n\r\n``` ruby\r\nif key_a == key_b then \r\n```\r\n\r\nIn a similar way I guess I would expect the DB to do the same\r\n\r\n\r\n"
  , issueCommentId = 30475330
  }