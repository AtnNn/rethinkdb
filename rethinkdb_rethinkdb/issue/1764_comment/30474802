IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-13) 00 : 00 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/30474802"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1764#issuecomment-30474802"
  , issueCommentCreatedAt = 2013 (-12) (-13) 00 : 00 : 24 UTC
  , issueCommentBody =
      "@jakcharlton FYI, you can simplify your guard like this:\r\n\r\n``` javascript\r\n r.db(\"user1\").table(\"others\").hasFields('contact_id').eqJoin(\"contact_id\",   r.db(\"user1\").table(\"contacts\"))\r\n```\r\n\r\nMany functions in Rethink work both on objects and streams to avoid the wordy pattern of including a filter.\r\n\r\nAlso, I think @neumino was saying that we should fix the behavior of join operations to do what you described, *not* to throw on null. @neumino -- what did you mean by \"the same is true for objects and arrays\"? (I didn't understand this part)"
  , issueCommentId = 30474802
  }