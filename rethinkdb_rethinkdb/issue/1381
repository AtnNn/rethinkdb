Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 19 : 34 : 31 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1381/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1381"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "007575"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:API_settled"
          , labelName = "tp:API_settled"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 1381
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 583919
        , simpleUserLogin = N "underrun"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/583919?v=3"
        , simpleUserUrl = "https://api.github.com/users/underrun"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "include number of distinct error types on insert with errors"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1381"
  , issueCreatedAt = 2013 (-08) (-28) 15 : 50 : 28 UTC
  , issueBody =
      Just
        "It would be useful, in addition to the first error and the number of errors, to also know the number of different kinds of errors that happened on insert.\r\n\r\nit would be nice to get the first error of each type instead of just the first error period ... but I understand if you feel that would make your return type more complex or larger than desired.\r\n\r\nmy use case is batch inserting from a data source with duplicate primary keys - i get a duplicate primary key error for my first error (which is fine) but i have more errors than i have duplicates and i have fewer records than i expected in my table ... even if the numbers were closer it would be nice to know what, if anything, went wrong other than the expected wrongness of duplicates."
  , issueState = "open"
  , issueId = Id 18677940
  , issueComments = 19
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }