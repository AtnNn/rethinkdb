IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-27) 19 : 48 : 22 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135533925"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4669#issuecomment-135533925"
  , issueCommentCreatedAt = 2015 (-08) (-27) 19 : 48 : 22 UTC
  , issueCommentBody =
      "> Arity errors for example are sometimes caught in the driver\r\n\r\nI agree that arity errors shouldn't be `ReqlDriverError`s.  I think we should just not enforce arity in the clients at all.\r\n\r\n> I think it makes sense to move away from distinguishing between where errors are handles, and move towards categorizing errors based on what the error is.\r\n\r\nErrors like \"you exceeding the arbitrary nesting depth for `r.expr` that we picked in this driver\" or \"you passed us an object that we weren't able to turn into JSON to send to the server\" or \"you used an infix operator in a way that is likely incorrect\" all seem fundamentally different to me than \"you sent a query to the server and the server rejected it as malformed\".  It's sort of like the difference between a parsing error and a compilation error, and I think it's useful to distinguish them.  (They're *at least* as different from compilation errors as runtime errors are, and we already distinguish those.)"
  , issueCommentId = 135533925
  }