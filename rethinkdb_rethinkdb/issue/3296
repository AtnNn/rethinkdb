Issue
  { issueClosedAt = Just 2015 (-02) (-20) 23 : 24 : 41 UTC
  , issueUpdatedAt = 2015 (-03) (-14) 21 : 00 : 24 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3296/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3296"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "007575"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:API_settled"
          , labelName = "tp:API_settled"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 3296
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Execute queries in parallel on a single connection"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3296"
  , issueCreatedAt = 2014 (-11) (-06) 06 : 27 : 02 UTC
  , issueBody =
      Just
        "Not to be confused with #2156, which is about evaluating parts of a single query simultaneously.\r\n\r\nThe JavaScript driver and many community drivers are asynchronous, but they don't get the full benefit of it because the server will only evaluate one query at a time on a single connection.\r\n\r\nThis also causes pathological behaviour when using changefeeds. Each changefeed adds a possible latency of 500ms to all other queries on the same connection. The only sane way to use changefeeds is to open a new connection for each changefeed. I believe this problem would be better solved by allowing parallel execution of queries on a single connection and not by adding server pools.\r\n\r\nAnother disadvantage of the current situation is that listening on an empty changefeed will cause an empty response to be sent every 500ms. This causes useless wake-ups and network traffic.\r\n\r\nWith this proposal, if a user waits for the result of a query before sending the next query to the server, queries would still be executed sequentially.\r\n\r\nWhen this is implemented, we should include a backwards-compatible mode. Some drivers rely on the fact that responses are in the same order as their respective requests.\r\n\r\nTo avoid complications in the web UI, it may be easier to not make this change for HTTP connections.\r\n\r\nThis proposal is based on my understanding of the current behaviour, please correct me if I am wrong.\r\n\r\n@mlucy @danielmewes Any thoughts?"
  , issueState = "closed"
  , issueId = Id 47927761
  , issueComments = 29
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 89
          , milestoneClosedIssues = 117
          , milestoneDescription = Just ""
          , milestoneTitle = "2.0"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/89"
          , milestoneCreatedAt = 2015 (-01) (-26) 07 : 45 : 17 UTC
          , milestoneState = "closed"
          }
  }