IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-15) 07 : 32 : 08 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/59167994"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3194#issuecomment-59167994"
  , issueCommentCreatedAt = 2014 (-10) (-15) 07 : 32 : 08 UTC
  , issueCommentBody =
      "Hi @techdragon, RethinkDB doesn't preserve the order of an object internally. In fact the fields of an object are always reordered alphabetically.\r\n\r\nYou can work around this by storing your objects as nested arrays of the form `[[key1, value1], [key2, value2], ... , [keyn, valuen]]`. If you later want to turn them into an (unordered) object, you can just call `arr.coerce_to('OBJECT')` on them. To go in the opposite direction (from an unordered object to an array), you can use `obj.coerce_to('ARRAY')`.\r\n\r\nDoes that work for you?"
  , issueCommentId = 59167994
  }