IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-19) 21 : 35 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22906306"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/97#issuecomment-22906306"
  , issueCommentCreatedAt = 2013 (-08) (-19) 21 : 35 : 47 UTC
  , issueCommentBody =
      "This is infinitely better than what we have now, but I still think this might be taking the 80/20 rule too far. Here are the reasons why I think we should make the caching behavior automatic:\r\n\r\n* People who are doing evaluations/testing run into this issue very quickly. Anybody who tests with > 1GB of data (which is a huge subset of our potential userbase) runs into this issue. So this isn't a niche problem.\r\n* From user's POV, the solution to the problem isn't immediately obvious. The system would just be slow and people would have to reach out to us or read the docs to find out what's going on.\r\n* All other db products do this automatically, so it's the state of the art. Having to set this value manually is surprising and unusual.\r\n* For people that do find out they have to set this, it isn't trivial to know what the cache size should be. In case of a single table people can just set it to some fraction of total available memory, but with multiple tables this requires a certain amount of expertise many of our users won't possess (and would strike people as a \"why do I have to deal with this\" feature).\r\n* For small instances (VPSes, etc.), and first time simple-workload users, our default is too high (while for high-end users it's too low). Automatically scaling cache sizes would minimize (or completely get rid of) OOM killer problems.\r\n\r\nI really think we have to do automatic cache balancing for this feature."
  , issueCommentId = 22906306
  }