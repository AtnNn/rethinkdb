IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-30) 06 : 09 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/17211044"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/97#issuecomment-17211044"
  , issueCommentCreatedAt = 2013 (-04) (-30) 06 : 09 : 42 UTC
  , issueCommentBody =
      "@coffeemug Well, that's the more complex solution, as it requires inter-thread communication with all the questions regarding performance and race conditions that come with it. Also it doesn't seem obvious (to me) when one table should \"steal\" space from another. Should it give it back when the other table needs the memory again? When a request requires cache memory, at what priority should it evict one of its own pages vs. ask another table to provide more memory?\r\nIn case you have that all worked out, please ignore my concerns.\r\n\r\nIf it's easy enough to implement, it's seems like the superior solution. (though there probably are still a handful of cases where the admin would like to specify per-table cache limits or \"cache priorities\" manually)"
  , issueCommentId = 17211044
  }