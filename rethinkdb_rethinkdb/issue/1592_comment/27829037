IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 00 : 54 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 91193
        , simpleUserLogin = N "mglukhovsky"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/91193?v=3"
        , simpleUserUrl = "https://api.github.com/users/mglukhovsky"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27829037"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1592#issuecomment-27829037"
  , issueCommentCreatedAt = 2013 (-11) (-06) 00 : 52 : 40 UTC
  , issueCommentBody =
      "(tl;dr, we're building a prototype quickly to test a theory about this)\r\n\r\n__Here's a short summary__ -- for this release @neumino and have decided to build a prototype of the following (he's mentioned some of this above):\r\n\r\n  - We're removing the \"Data Explorer\" link in the very top navigation bar in the web UI, and replace it with two links -- \"Data\", and \"Queries\" (names still up for grabs). Additional rationale provided below.\r\n    * The \"Queries\" will link to what the Data Explorer is now.\r\n    * The \"Data\" link will link to a new view that will allow immediately entering the table name and getting the results via the same basic three tab control we use in the Data Explorer now.\r\n  - We might revise this design as the data browser gets more sophisticated, and potentially merge the query builder with the data browser, but this is in the somewhat distant future.\r\n\r\n__Rationale for divorcing the query builder and data browser__\r\nIn discussing this with everyone, it became apparent that we had two options:\r\n  - Build a sophisticated query builder that allows visually constructing queries to do simple things like browse data and complex things like joins and map-reduce queries in a cohesive manner.\r\n  - Build a simple, minimal interface for two modes: browsing data (casually looking through documents) and querying data (everything from syntax highlighting / ReQL documentation to profiling)\r\n\r\n@jdoliner proposed incorporating this into the Data Explorer,  with the logic that people should be learning ReQL, that reusing components implies we should have a centralized place to examine data (feel free to add on here if I'm missing something).\r\n\r\n@neumino and I discussed this at length, and after reviewing everyone's suggestions, we felt that what's missing in that scenario is there's no simple, \"Well, I'd like to just look at my data\" experience that comes with other administration tools like Django's backend admin, or @neumino's [chateau](https://github.com/neumino/chateau). \r\n\r\nThat use case, and emotional need is strong enough that it warrants trying to build a dedicated view that's specialized to that one case. \r\n\r\nThis allows delving into the opposing use case (\"I'd like to construct a query, see how it performs on the system, and optimize it\") in the query builder in a deeper fashion without worrying about an excess of controls.\r\n\r\n__Design process__\r\nAs far as the design process is concerned, I'm happy to make it more inclusive (I love getting feedback from all angles), but I don't think we should use the same process we use for ReQL design. ReQL design process works really well because most people who participate in it have evolved similar tastes over time, so discussions tend to converge quite quickly and it's rare to need to break ties. \r\n\r\nUI design isn't like that -- people have vastly different tastes, so we won't converge on a solution quickly which is something I'd like to avoid.\r\n\r\nI think we should keep discussions open and include everyone's opinions to get more options -- that will definitely result in a better product. But once all the options are in, I'd like to make final decisions on the design myself. Since we didn't have this process before, I definitely screwed up by not notifying everyone on this issue. I'll do a better job for future features of opening a discussion window, getting all the feedback, and informing everyone of the final design. Sorry I didn't notify everyone this time!"
  , issueCommentId = 27829037
  }