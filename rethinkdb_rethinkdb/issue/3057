Issue
  { issueClosedAt = Just 2014 (-09) (-18) 02 : 06 : 44 UTC
  , issueUpdatedAt = 2015 (-04) (-02) 21 : 30 : 10 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3057/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3057"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      , IssueLabel
          { labelColor = "e11d21"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/_release_holder"
          , labelName = "_release_holder"
          }
      ]
  , issueNumber = 3057
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Error in src/arch/runtime/thread_pool.cc at line 343: Segmentation fault from reading the address (nil)."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3057"
  , issueCreatedAt = 2014 (-09) (-16) 01 : 01 : 49 UTC
  , issueBody =
      Just
        "On newton, branch `next`.\n\nThis server crashed the server:\n\n```\nr.polygon([0,0], [0,10], [10, 10], [10, 0]).polygonSub(r.polygon([0,0], [0,10], [10, 10], [10, 0])).intersects(r.point(0,0))\n```\n\nBacktrace:\n\n```\nerror: Error in src/arch/runtime/thread_pool.cc at line 343:\nerror: Segmentation fault from reading the address (nil).\nerror: Backtrace:\nerror: Mon Sep 15 18:00:37 2014\n\n       1: format_backtrace(bool) at backtrace.cc:214\n       2: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\n       3: linux_thread_pool_t::sigsegv_handler(int, siginfo*, void*) at thread_pool.cc:343\n       4: /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f900fb6fcb0] at 0x7f900fb6fcb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\n       5: geo::S2Polygon::Project(geo::Vector3<double> const&) const at s2polygon.h:94\n       6: inner_intersection_tester_t<geo::S2Polygon>::on_point(geo::Vector3<double> const&) at vector3-inl.h:92\n       7: bool visit_geojson<bool>(s2_geo_visitor_t<bool>*, ql::datum_t const&) at scoped.hpp:70\n       8: intersection_tester_t::on_polygon(geo::S2Polygon const&) at intersection.cc:53\n       9: bool visit_geojson<bool>(s2_geo_visitor_t<bool>*, ql::datum_t const&) at geojson.hpp:84\n       10: geo_does_intersect(ql::datum_t const&, ql::datum_t const&) at intersection.cc:63\n       11: ql::intersects_term_t::obj_eval_geo(ql::scope_env_t*, ql::args_t*, counted_t<ql::val_t>) const at geo.cc:204\n       12: ql::geo_obj_or_seq_op_term_t::obj_eval(ql::scope_env_t*, ql::args_t*, counted_t<ql::val_t>) const at counted.hpp:55\n       13: ./rethinkdb() [0xb390f3] at 0xb390f3 ()\n       14: ql::obj_or_seq_op_impl_t::eval_impl_dereferenced(ql::term_t const*, ql::scope_env_t*, ql::args_t*, counted_t<ql::val_t>, std::function<counted_t<ql::val_t> ()>) const at obj_or_seq.cc:93\n       15: ql::obj_or_seq_op_term_t::eval_impl(ql::scope_env_t*, ql::args_t*, ql::eval_flags_t) const at counted.hpp:55\n       16: ql::op_term_t::term_eval(ql::scope_env_t*, ql::eval_flags_t) const at counted.hpp:55\n       17: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) at term.cc:405\n       18: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) at counted.hpp:55\n       19: query_server_t::handle(http_req_t const&, http_res_t*, signal_t*) at protob.cc:339\n       20: routing_http_app_t::handle(http_req_t const&, http_res_t*, signal_t*) at basic_string.h:288\n       21: routing_http_app_t::handle(http_req_t const&, http_res_t*, signal_t*) at basic_string.h:288\n       22: http_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at basic_string.h:542\n       23: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), boost::_bi::bind_t<void, boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<http_server_t*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > > >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at mem_fn_template.hpp:280\n       24: linux_nonthrowing_tcp_listener_t::handle(int) at scoped.hpp:70\n       25: coro_t::run() at coroutines.cc:206\nerror: Exiting.\nTrace/breakpoint trap (core dumped)\n\n```\n"
  , issueState = "closed"
  , issueId = Id 42835063
  , issueComments = 9
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 1777134
                , simpleUserLogin = N "mlucy"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/1777134?v=3"
                , simpleUserUrl = "https://api.github.com/users/mlucy"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 76
          , milestoneClosedIssues = 60
          , milestoneDescription = Just ""
          , milestoneTitle = "1.15"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/76"
          , milestoneCreatedAt = 2014 (-07) (-30) 21 : 42 : 02 UTC
          , milestoneState = "closed"
          }
  }