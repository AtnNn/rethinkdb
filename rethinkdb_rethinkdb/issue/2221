Issue
  { issueClosedAt = Just 2014 (-04) (-06) 01 : 15 : 23 UTC
  , issueUpdatedAt = 2014 (-04) (-06) 01 : 23 : 28 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2221/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2221"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2221
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 860934
        , simpleUserLogin = N "jcspencer"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/860934?v=3"
        , simpleUserUrl = "https://api.github.com/users/jcspencer"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "ReQL proposal: `r.intersect`  and `r.diff`"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2221"
  , issueCreatedAt = 2014 (-04) (-06) 01 : 06 : 42 UTC
  , issueBody =
      Just
        "After using NoSQL databases for a long time, one thing that I have found extremely helpful is the intersection/differences of two sets. A great example of this is [set intersections](http://redis.io/commands/sinter) and [set differences](http://redis.io/commands/sdiff) in Redis.\n\nHere's how the `r.intersect` command could work:\n\n``` javascript\nr\n .expr([\"a\", \"b\", \"c\"])\n .intersect(r.expr([\"b\", \"c\", \"d\"])) //returns [\"b\", \"c\"]\n```\n\nAnd here is how the opposite command to `r.intersect`,  `r.diff` could work:\n\n``` javascript\nr\n .expr([\"a\", \"b\", \"c\"])\n .diff(r.expr([\"b\", \"c\", \"d\"])) //returns [\"a\"]\n```\n\nThere are some implementation questions -- such as whether stream intersecting/diffing two streams would return a stream of intersections/differences. I think it could make an enormous difference for adoption and people's experience.\n"
  , issueState = "closed"
  , issueId = Id 30927863
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 27
          , milestoneClosedIssues = 127
          , milestoneDescription =
              Just
                "These issues are not reproducible or happen in platforms or configurations that are not supported."
          , milestoneTitle = "worksforme"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/27"
          , milestoneCreatedAt = 2013 (-04) (-08) 21 : 57 : 50 UTC
          , milestoneState = "closed"
          }
  }