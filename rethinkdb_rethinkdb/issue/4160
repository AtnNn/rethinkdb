Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-05) (-02) 20 : 47 : 18 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4160/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4160"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/JavaScript%20/%20Coffee"
          , labelName = "JavaScript / Coffee"
          }
      , IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 4160
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 794222
        , simpleUserLogin = N "tcoats"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/794222?v=3"
        , simpleUserUrl = "https://api.github.com/users/tcoats"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Driver method for executing the output of .build()"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4160"
  , issueCreatedAt = 2015 (-05) (-01) 00 : 30 : 32 UTC
  , issueBody =
      Just
        "This has parallels to #3438 - How to sanitize untrusted JSON?\n\nI'd like to be able to serialise a RethinkDB query and send it somewhere where it can be deserialised and executed. So far I've found I can call .build() and .toString() on queries which is great!\n\nCan I take the results of .build() and throw it back into something like r.json() but have it deserialise into the query on the client so I can run it?\n\n[Here's some code that seems to work](https://github.com/odojs/odoql-rethinkdb/blob/master/runfromjson.coffee), but I'm sure there is a better way.\n\nIs this something that could be added to the api?\n"
  , issueState = "open"
  , issueId = Id 72319470
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }