Issue
  { issueClosedAt = Just 2014 (-11) (-10) 21 : 01 : 34 UTC
  , issueUpdatedAt = 2014 (-11) (-10) 21 : 01 : 34 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3310/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3310"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3310
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 297060
        , simpleUserLogin = N "nviennot"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/297060?v=3"
        , simpleUserUrl = "https://api.github.com/users/nviennot"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Clarification/rationale on get_nearest's max_results"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3310"
  , issueCreatedAt = 2014 (-11) (-10) 03 : 52 : 40 UTC
  , issueBody =
      Just
        "Why does `r.get_nearest()` takes in a `max_results` argument, which defaults to `100`?\r\n\r\nTo limit the number of result, `r.limit()` is here for that right?\r\nIf so, why wouldn't users just use `r.get_nearest().limit(100)`?\r\n\r\nIs it reasonable to always call `r.get_nearest()` with `max_results` set to `999999999`?\r\ne.g. would `r.get_nearest(..., max_results => 999999999).limit(100)` be equivalent in terms of performance to `r.get_nearest(..., max_results => 100)`? If not, why?"
  , issueState = "closed"
  , issueId = Id 48227663
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 174
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }