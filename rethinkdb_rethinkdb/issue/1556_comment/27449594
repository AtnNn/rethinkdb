IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-30) 23 : 38 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27449594"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1556#issuecomment-27449594"
  , issueCommentCreatedAt = 2013 (-10) (-30) 23 : 37 : 53 UTC
  , issueCommentBody =
      "There seem to be two aspects to this:\r\n1. Everything is in-memory: secondary index post-production slows down point-read queries by about 50%. This is already with a couple of small tweaks applied.\r\n2. Some of the data is out-of-memory: The impact of secondary index on point-reads is drastic. I'm seeing query throughput drop from 1500 qps to ~200 qps. I've tried playing with i/o accounts but that doesn't seem to have any effect at all. I don't know yet if this is actually i/o contention in the i/o layer or if this is some locking artefact in the cache layer. Also note that the cache was still warming up in this experiment, so we probably did read-ahead, causing somewhat larger reads than normal."
  , issueCommentId = 27449594
  }