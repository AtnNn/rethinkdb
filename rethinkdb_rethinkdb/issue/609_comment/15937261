IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-05) 03 : 22 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15937261"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/609#issuecomment-15937261"
  , issueCommentCreatedAt = 2013 (-04) (-05) 03 : 22 : 57 UTC
  , issueCommentBody =
      "Yes, that's exactly what we do. The Python driver, in both its incarnations, has always blocked on requests in a deliberate effort to keep things simple. If we wanted to go for a more efficient implementation we'd implement connection pools, thread safety, and probably add an asynchronous API (similar to the JavaScript one). We might even do eager loading of result sets, as you're suggesting here, though it wouldn't really jive with the otherwise lazy evaluation model we've built.\r\n\r\nAs is, the driver may be slow and single threaded but it's immune to the problems discussed above. Eager loading of result sets would require significant extra complexity in the form of an asynchronous querying API that we'd then have to wrap with a blocking API to avoid the huge headache which is using the JS driver."
  , issueCommentId = 15937261
  }