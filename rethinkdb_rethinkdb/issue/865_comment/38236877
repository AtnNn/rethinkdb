IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-21) 00 : 29 : 12 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/38236877"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/865#issuecomment-38236877"
  , issueCommentCreatedAt = 2014 (-03) (-21) 00 : 29 : 12 UTC
  , issueCommentBody =
      "For reference, the interface is:\r\n\r\n```\r\nr.random() -> returns a random number [0,1)\r\nr.random(LIMIT) -> returns a random number [0, LIMIT) or [LIMIT, 0)\r\nr.random(LIMIT_A, LIMIT_B) -> returns a random number [LIMIT_A, LIMIT_B) or [LIMIT_B, LIMIT_A)\r\n```\r\n\r\nAll invocations also support the `integer` optional argument:\r\n```\r\nr.random(integer=True) -> returns a random integer [0,2^32 - 1)\r\nr.random(LIMIT, integer=True) -> returns a random integer [0, LIMIT) or [LIMIT, 0)\r\nr.random(LIMIT_A, LIMIT_B, integer=True) -> returns a random integer [LIMIT_A, LIMIT_B) or [LIMIT_B, LIMIT_A)\r\n```\r\nThis will do rejection sampling to guarantee a uniform distribution across all possible values.  Because we treat all numbers as doubles, `r.random(integer=True)` will refuse to take a limit greater than 2^53 or less than -(2^53) to avoid bias caused by conversion errors.\r\n\r\nNeedless to say, this term is non-deterministic and can't be used in secondary indexes."
  , issueCommentId = 38236877
  }