IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-21) 23 : 28 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/38333711"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/865#issuecomment-38333711"
  , issueCommentCreatedAt = 2014 (-03) (-21) 23 : 06 : 12 UTC
  , issueCommentBody =
      "@neumino -- the best case for that is wanting to generate a random value between two values when you don't know which one's larger.  For example, if two players are playing a game and I want to generate a new npc character with a plausible amount of starting gold, I might write `r.random(bob[:gold], alice[:gold])`, and it would work regardless of which had more gold.\r\n\r\n@atnnn -- If we do support `r.random(5, 3)`, I think that the left argument should probably always be closed, so it would be `(3, 5]`.  (`r.random(3, 5)` would be `[3, 5)`.)\r\n\r\nIf nobody objects strongly, I think we should use @srh's proposal, except that the left argument should always be closed in the floating-point case (so `r.random(m, n)` is `[m, n)` if `n > m`, `(n, m]` if `n < m`, and `m` if `n == m`).  We can make the other cases not error later if people complain about it."
  , issueCommentId = 38333711
  }