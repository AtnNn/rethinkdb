IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-30) 22 : 25 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/160781341"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5041#issuecomment-160781341"
  , issueCommentCreatedAt = 2015 (-11) (-30) 22 : 25 : 21 UTC
  , issueCommentBody =
      "The reason I was asking is because `insert` is somewhat different from the other write operations.\r\n\r\nIn the case of `insert`, the order is explicitly specified in the command itself, as you pass an array with documents.\r\n\r\nFor an `update`, `replace` or `delete`, the order is not provided in the same way. Instead it's implicit in the selection that the command is applied on. We could return changes in the \"right\" order if the selection is ordered, such as in `r.table('test').orderBy({index: \"id\"}).delete()`. Unless this is something that will occur in Fusion, I think that's a pretty rare use case though.\r\n\r\nI suspect that we'll also need separate code to ensure this for `insert` vs. the other write terms.\r\n\r\nI suggest that we implement it for `insert` first. Does that sound reasonable?"
  , issueCommentId = 160781341
  }