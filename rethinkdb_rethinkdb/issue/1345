Issue
  { issueClosedAt = Just 2013 (-12) (-05) 23 : 10 : 23 UTC
  , issueUpdatedAt = 2014 (-09) (-11) 22 : 02 : 32 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1345/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1345"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "007575"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:API_settled"
          , labelName = "tp:API_settled"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 1345
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "ReQL proposal: `r.merge` should accept a function"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1345"
  , issueCreatedAt = 2013 (-08) (-22) 12 : 00 : 18 UTC
  , issueBody =
      Just
        "A rather common use case is to go through a sequence and for each document, merge another document based on a subquery that depends on the original document. E.g.:\r\n\r\n```ruby\r\nr.table('foo').merge{|x| { foo => r.table('bar').get(x['some_id']) } }\r\n```\r\n\r\nCurrently `merge` doesn't accept a function, which means the query above has to be rewritten with a `map` and an inner `merge`. I ran into this a few times and it has been quite annoying. I propose allowing `merge` to accept a function."
  , issueState = "closed"
  , issueId = Id 18408642
  , issueComments = 13
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2014 (-03) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 53
          , milestoneClosedIssues = 203
          , milestoneDescription = Just ""
          , milestoneTitle = "1.12"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/53"
          , milestoneCreatedAt = 2013 (-11) (-19) 09 : 47 : 10 UTC
          , milestoneState = "closed"
          }
  }