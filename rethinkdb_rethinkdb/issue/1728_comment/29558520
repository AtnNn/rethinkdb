IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-30) 18 : 57 : 37 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29558520"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1728#issuecomment-29558520"
  , issueCommentCreatedAt = 2013 (-11) (-30) 18 : 57 : 37 UTC
  , issueCommentBody =
      "Right it's only for indexed order_by that's an important one though I've\r\nhad a lot of people requested it and I know for a fact a lot of people are\r\nusing this in their code. In fact it's really the only efficient way to do\r\npagination. Pragmatically I don't think this quirk imposes a big enough\r\ncost on users that it's worth losing the benefit. Especially when we know\r\nthere's a straightforward \"right\" way to implement the behavior it's just\r\nwork that doesn't pay high dividends right now.\r\n\r\nAlso what are these equally important cases where people want to use the\r\nsame index twice that we don't support? I made a pretty big effort to make\r\nsure all of them were supported (because I had requests for basically all\r\nof them) and I'm wondering which one's I missed.\r\n\r\nOn Saturday, November 30, 2013, coffeemug wrote:\r\n\r\n> So, upon further reflection, the only thing I see that we can do by\r\n> returning a table from between that we couldn't do otherwise is this:\r\n>\r\n> r.table('foo').between('a', 'z').orderBy({index: 'id'}) // ok\r\n>\r\n> But I really don't think we should special case it like this for between,\r\n> for the following reasons:\r\n>\r\n>    - We already tell people they can only use one index at a time for now\r\n>    everywhere else\r\n>    - If we want to allow using multiple indexes (or the same index\r\n>    multiple times), there are many, many equally important cases where we'd\r\n>    want to do the same. I don't think it's worth special casing it here in\r\n>    exchange for a sloppier return type.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1728#issuecomment-29557668>\r\n> .\r\n>"
  , issueCommentId = 29558520
  }