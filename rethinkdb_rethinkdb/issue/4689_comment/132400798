IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-19) 00 : 16 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 148955
        , simpleUserLogin = N "jcw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/148955?v=3"
        , simpleUserUrl = "https://api.github.com/users/jcw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/132400798"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4689#issuecomment-132400798"
  , issueCommentCreatedAt = 2015 (-08) (-19) 00 : 16 : 40 UTC
  , issueCommentBody =
      "Moving things closer to the browser sounds good. I'm not sure my comments were that coherent, in hindsight. For an [IoT](https://en.wikipedia.org/wiki/Internet_of_Things)-type app, MQTT is in widespread use as standard message interchange. What it offers is pubsub for general use, and a websocket to the browser. What it's missing, is large-scale storage, and the ability to handle HTTP requests.\r\n\r\nWith MQTT + RethinkDB, I would have the messaging + storage side of things covered. Assuming all assets get stored inside ReDB (even an index.html home page), this really is very close to covering the main server-side needs. The missing links would be: ReDB serving httpd (as it does for the admin interface) and ReDB talking to MQTT in some way.\r\n\r\nAs I said, I'm not sure it makes sense, but if the app logic is entirely browser-side (JavaScript, and React or Angular), then the server really only needs to handle general app-agnostic tasks, i.e. comms & db."
  , issueCommentId = 132400798
  }