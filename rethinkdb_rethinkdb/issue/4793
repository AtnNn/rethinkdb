Issue
  { issueClosedAt = Just 2016 (-01) (-07) 05 : 09 : 08 UTC
  , issueUpdatedAt = 2016 (-01) (-08) 00 : 55 : 53 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4793/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4793"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4793
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 67937
        , simpleUserLogin = N "encryptio"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/67937?v=3"
        , simpleUserUrl = "https://api.github.com/users/encryptio"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "r.http segfault in ql::datum_serialized_size"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4793"
  , issueCreatedAt = 2015 (-09) (-03) 23 : 21 : 29 UTC
  , issueBody =
      Just
        "I don't have too much info on this and haven't been able to reproduce it, but wanted to record the backtrace.\r\n\r\nHappened during an r.http call to https://api.github.com/users/jonpierce, which returns a very simple object mapping to strings, numbers, and nulls.\r\n\r\n```\r\n1: backtrace_t::backtrace_t() at backtrace.cc:203                                                       \r\n2: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at basic_string.h:269                       \r\n3: format_backtrace(bool) at backtrace.cc:197                                                           \r\n4: report_fatal_error(char const*, int, char const*, ...) at basic_string.h:287                         \r\n5: generic_crash_handler(int) at errors.cc:104                                                          \r\n6: /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f1613ee1cb0] at 0x7f1613ee1cb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n7: shared_buf_t::size() const at shared_buffer.cc:31                                                    \r\n8: datum_string_t::size() const at shared_buffer.hpp:85                                                 \r\n9: ql::datum_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:974\r\n10: ql::datum_object_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:380\r\n11: ql::datum_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:514\r\n12: ql::datum_object_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:380\r\n13: ql::datum_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:514\r\n14: ql::datum_serialize(write_message_t*, ql::datum_t const&, ql::check_datum_serialization_errors_t) at serialize_datum.cc:625\r\n15: void serialize<(cluster_version_t)6>(write_message_t*, http_result_t const&) at http_runner.cc:9 \r\n16: http_job_t::worker_fn(read_stream_t*, write_stream_t*) at http_job.cc:241                        \r\n17: worker_run_t::main_loop() at extproc_spawner.cc:61                                                  \r\n18: spawner_run_t::main_loop() at extproc_spawner.cc:144                                             \r\n19: extproc_spawner_t::fork_spawner() at extproc_spawner.cc:200                                         \r\n20: extproc_spawner_t::extproc_spawner_t() at extproc_spawner.cc:164                                    \r\n21: main_rethinkdb_porcelain(int, char**) at command_line.cc:1716                                       \r\n22: main+0x314 at main.cc:27                                                                            \r\n23: __libc_start_main+0xed at 0x7f1613b3476d (/lib/x86_64-linux-gnu/libc.so.6)                          \r\n24: build/release_clang/rethinkdb() [0x6e1849] at 0x6e1849 ()                                           \r\nerror: Exiting. \r\n```\r\n\r\nThis happened while running 44568f96dac8a67bbe0a5efc7de083b340e686f1, if anyone wants to check line numbers."
  , issueState = "closed"
  , issueId = Id 104800319
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }