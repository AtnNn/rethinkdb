IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-15) 13 : 04 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 34433
        , simpleUserLogin = N "fuwaneko"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/34433?v=3"
        , simpleUserUrl = "https://api.github.com/users/fuwaneko"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19496175"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/897#issuecomment-19496175"
  , issueCommentCreatedAt = 2013 (-06) (-15) 13 : 04 : 02 UTC
  , issueCommentBody =
      "I've implemented wrapper around C++ protobuf library for node.js, but the problem is that objects in RethinkDB driver (like Query) are pretty complex and generated by some third-party library (closure protobuf or something). I'm not sure what to do next, I can serialize simple plain objects but for objects with complex getters and setters it's not an easy job to implement such functionality. Personally I think that protobuf implementation for node.js should take plain object and serialize it according to schema read from desc file compiled with protoc. It simplifies code greatly and works well with dynamic nature of JS. I'm not sure about performance though, but it seems to be the only way to add serialization via node.js native addon except for generating C++ classes via protoc and wrapping them for node.js, but I guess this is absolutely ridiculous approach."
  , issueCommentId = 19496175
  }