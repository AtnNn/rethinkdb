IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-10) 18 : 02 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19215779"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/897#issuecomment-19215779"
  , issueCommentCreatedAt = 2013 (-06) (-10) 18 : 02 : 50 UTC
  , issueCommentBody =
      "> but in the extremely common case where people don't want to do any server-side computation before inserting\r\n\r\nYou've missed the point of what @danielmewes said here. The situation in which this helps you requires more than that you don't need server side computing. As he said it also needs to be \"the very special case where the data to be inserted is already a JSON object.\" So if you're sitting there with a native language object you'd still need to serialize to JSON before you could use `r.json`. Now the question is how much faster serializing to json is than serializing to protocol buffers. I just did a test in Python and found that serializing to json is 2 orders of magnitude faster than serializing to protocol buffers so I think @danielmewes you'd have to admit this solution does really help you in Python. @mlucy do you have an idea of what these numbers look like in javascript and ruby? If serializing to json is as slow as serializing to protocol buffers then @danielmewes is help there's a large set of people for whom `r.json` isn't really a solution. "
  , issueCommentId = 19215779
  }