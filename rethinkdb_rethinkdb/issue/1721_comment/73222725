IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-06) 11 : 22 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73222725"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-73222725"
  , issueCommentCreatedAt = 2015 (-02) (-06) 11 : 22 : 34 UTC
  , issueCommentBody =
      "> I don't believe we can have a composable and consistent ReQL if `filter` gobbles **all** non-existence errors.\r\n\r\nOk, that makes sense. Could you describe a little better which non-existence errors you think are unacceptable to gobble?\r\n\r\nE.g.:\r\n\r\n```py\r\nt.filter(r.row['x'] == 1)\r\nt.filter(r.row['x'] + 1 == 1)\r\nt.filter(r.row['x'] > 1)\r\nt.filter(r.row['x'] + 1 > 1)\r\n```"
  , issueCommentId = 73222725
  }