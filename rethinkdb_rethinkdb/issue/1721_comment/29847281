IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-04) 21 : 27 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29847281"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-29847281"
  , issueCommentCreatedAt = 2013 (-12) (-04) 21 : 27 : 51 UTC
  , issueCommentBody =
      "> Are the patches for `any` and `all` just adding `default(false)` to their arguments? \r\n\r\nYes. You proposed this a couple of months ago here: https://github.com/rethinkdb/rethinkdb/issues/1488#issuecomment-25269729\r\n\r\n>> But we didn't just do it for filter. We did it for pluck and GMR and a few other places because using the system without it was intolerable.\r\n\r\n> That isn't true.  If you write `r([{a:1}, {c:1}]).pluck('a', 'b')`, you get `[{a:1}, {}]`.  We don't drop rows from the result.  \r\n\r\nIt's not that we don't drop rows from the result, it's that the user doesn't get an error that aborts the query. That's the bit that made the experience really bad. It could be fixed by dropping a row, or by returning an empty object in the place of a missing attribute in case of `pluck`, or by other means. I was referring to the fact that in many commands we changed the default action to not throw an error that aborts the query.\r\n\r\n> I think that you are drastically overestimating the number of queries where this behavior is necessary for a good experience, and drastically underestimating the number where this behavior produces confusing and user-unfriendly behavior.\r\n\r\nOk. Let me take a day or two to step back from the debate and consider this point carefully. I'll bang my head against this to see if I can make myself believe this, and then see what I think."
  , issueCommentId = 29847281
  }