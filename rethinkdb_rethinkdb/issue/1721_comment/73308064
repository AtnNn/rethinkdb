IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-06) 20 : 38 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73308064"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-73308064"
  , issueCommentCreatedAt = 2015 (-02) (-06) 20 : 38 : 20 UTC
  , issueCommentBody =
      "So this sounds like you're describing a lazily evaluated `r.and` and `r.or` with undefined as bottom. If that's the case then the only difference from the cases given in https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-73182328 are:\r\n\r\n```\r\nr.or(undefined, \"a\", \"b\") -> undefined\r\nr.or(undefined, undefined, undefined) -> (still undefined, but 1st error returned)\r\nr.and(\"a\", false, undefined) -> undefined\r\nr.and(undefined, false, \"b\") -> undefined\r\nr.and(undefined, undefined, undefined) -> (still undefined, but 1st error returned)\r\n```\r\n\r\nAll the other cases would be the same as described above.\r\n"
  , issueCommentId = 73308064
  }