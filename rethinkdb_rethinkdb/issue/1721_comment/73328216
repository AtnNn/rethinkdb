IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-06) 22 : 52 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73328216"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-73328216"
  , issueCommentCreatedAt = 2015 (-02) (-06) 22 : 52 : 41 UTC
  , issueCommentBody =
      "I think that if debugging non-existence is actually that big of a problem, we should introduce facilities to make debugging easier. One obvious thing we can do that might help is a connection optarg that changes `filter` default to `r.error`. We can add an option to log rows that cause non-existence errors. We could probably think of a few other things.\r\n\r\n> I also think many users will appreciate a database that cares about correctness and making sure you don't shoot yourself in the foot once you start scaling up.\r\n\r\nNot if it's at the expense of convenience. Convenience always wins. Trading off convenience for security will get us lots of appreciation/street-cred and no actual users. Remember these threads:\r\n\r\n- https://github.com/rethinkdb/rethinkdb/issues/2030\r\n- https://github.com/rethinkdb/rethinkdb/issues/1764\r\n- https://github.com/rethinkdb/rethinkdb/issues/570\r\n- https://github.com/rethinkdb/rethinkdb/issues/183\r\n\r\n(There are lots of others that users submitted early on, but I can't seem to find them). Throwing on non-existence by default, forcing people to make the decision explicitly early on, etc. has proven to be extremely annoying to pretty much everyone, is *different* even from SQL which is supposed to be much more strict, is different from all other NoSQL systems, and doesn't jibe well at all with the spirit of schemaless databases."
  , issueCommentId = 73328216
  }