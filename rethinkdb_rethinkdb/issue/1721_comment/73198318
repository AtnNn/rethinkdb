IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-06) 07 : 45 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73198318"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-73198318"
  , issueCommentCreatedAt = 2015 (-02) (-06) 07 : 45 : 57 UTC
  , issueCommentBody =
      "I strongly dislike the proposal in https://github.com/rethinkdb/rethinkdb/issues/1721#issuecomment-73182328. I believe a good solution should, in order of importance:\r\n\r\n* Cause legitimate errors to be thrown instead of treated as falsy, such as in `.filter(r.row('non existant') + 1 < 2)`.\r\n* Take into account `not` and `branch`. `.filter(r.not(a))` should return the complement of `.filter(a)`.\r\n* Be easy to understand and debug and not introduce more heuristics and surprising behaviour.\r\n* Be easy to turn off, as with `filter`'s `default` optional argument.\r\n* Work well with `r.args` and `r.do`. `r.or(r.rargs([a,b]))` should be the same as `r.or(a,b)` and as `r.do(a, b, lambda aa, bb: r.or(aa, bb))`"
  , issueCommentId = 73198318
  }