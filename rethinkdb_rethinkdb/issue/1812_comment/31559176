IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-03) 22 : 28 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/31559176"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1812#issuecomment-31559176"
  , issueCommentCreatedAt = 2014 (-01) (-03) 22 : 28 : 43 UTC
  , issueCommentBody =
      "I think it's a bad idea to have an issue for this. For one thing it's not a threat to availability like the other issues are. It's just that the replica UI could potentially confuse you while this state exists. We still need to solve basically all of the problems with the replica UI. That is we need to make it clear to the users in that UI that they're in a bad state and how to properly fix it. It seems like it's fine to let users delay fixing it until they want to modify the replica counts rather than popping up a big red bar. If the user is only modifying things with the webUI then it's going to be an incredibly rare issue anyways.\r\n\r\nI think in general we should be aggressive about keeping the signal to noise low on issues, because having tons of issues popping up can make the product really stressful to use.\r\n\r\nI also think it's bad to completely outlaw this use case. I know of some users who are using it. Having it inaccessible in the webUI but usable from the CLI seems like a good solution to me. But you don't want users who use it in the CLI to have to put up with issues constantly popping up."
  , issueCommentId = 31559176
  }