IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-11) 00 : 42 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11226033"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/120#issuecomment-11226033"
  , issueCommentCreatedAt = 2012 (-12) (-11) 00 : 42 : 18 UTC
  , issueCommentBody =
      "Okay we have a mechanism for how this happens:\r\n\r\n1. We have a deletion entry that is old enough that it will be gced.\r\n2. When we compute if the node is full we take in to account that this will happen and conclude that we have room for it.\r\n3. In `prepare_space_for_new_entry` we then discover we're replacing an entry that comes before the deletion entry. First we remove it then we gc.\r\n4. By removing it it's no long gced so the entry remains.\r\n5. Thus our conclusion that we had enough space proves to be incorrect and we crash.\r\n\r\nFixing it is actually quite simple."
  , issueCommentId = 11226033
  }