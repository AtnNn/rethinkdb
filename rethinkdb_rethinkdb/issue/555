Issue
  { issueClosedAt = Just 2013 (-04) (-10) 20 : 56 : 01 UTC
  , issueUpdatedAt = 2013 (-04) (-15) 23 : 22 : 37 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/555/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/555"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 555
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 43867
          , simpleUserLogin = N "jdoliner"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/43867?v=3"
          , simpleUserUrl = "https://api.github.com/users/jdoliner"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Make erase_range update secondary indexes."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/555"
  , issueCreatedAt = 2013 (-03) (-29) 18 : 43 : 03 UTC
  , issueBody =
      Just
        "Currently erase_range doesn't update the secondary indexes mostly because the way the code is right now each BTree operation returns a `mod_report_t` which can only remove at most one sindex entry at a time. We could move to a callback scheme for this where rather than passing in a `mod_report_t` for btree operations to fill in we pass in a `sindex_callback_t` which has the following API:\r\n\r\n```C++\r\nclass sindex_callback_t {\r\npublic:\r\n    virtual void remove(boost::shared_ptr<scoped_cJSON_t> s);\r\n    virtual void add(boost::shared_ptr<scoped_cJSON_t> s);\r\n}\r\n```\r\n\r\nAlso as part of this issue we need a unittest to test this behavior it's a bit of a pain to write right now because there's no easy way to send an erase_range using the rdb protocol. We could add one for this unittest though."
  , issueState = "closed"
  , issueId = Id 12614601
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-05) (-15) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 8
          , milestoneClosedIssues = 183
          , milestoneDescription =
              Just "Issues that are absolutely necessary for 1.5."
          , milestoneTitle = "1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/8"
          , milestoneCreatedAt = 2013 (-03) (-20) 02 : 06 : 44 UTC
          , milestoneState = "closed"
          }
  }