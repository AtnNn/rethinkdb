Issue
  { issueClosedAt = Just 2013 (-06) (-05) 17 : 22 : 42 UTC
  , issueUpdatedAt = 2013 (-06) (-05) 17 : 22 : 42 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/946/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/946"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 946
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 258437
          , simpleUserLogin = N "srh"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/258437?v=3"
          , simpleUserUrl = "https://api.github.com/users/srh"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Crash in next on stats request"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/946"
  , issueCreatedAt = 2013 (-06) (-04) 23 : 21 : 05 UTC
  , issueBody =
      Just
        "At the moment, if I start a server on next, then point a web ui towards it, I get the following crash:\r\n\r\n```c\r\nVersion: rethinkdb 1.5.2-210-gcda784 (debug) (GCC 4.6.3)\r\nerror: Error in ../src/containers/scoped.hpp at line 81:\r\nerror: Assertion failed: [ptr_] \r\nerror: Backtrace:\r\nerror: Tue Jun  4 16:13:14 2013\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\r\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:67\r\n       5: scoped_ptr_t<perfmon_result_t>::operator*() const at scoped.hpp:81\r\n       6: perfmon_result_t::perfmon_result_t(perfmon_result_t const&) at core.cc:167\r\n       7: mailbox_t<void (perfmon_result_t)>::read_impl_t::read(mailbox_write_callback_t*) at typed.hpp:176\r\n       8: send(mailbox_manager_t*, raw_mailbox_t::address_t, mailbox_write_callback_t*) at mailbox.cc:101\r\n       9: void send<perfmon_result_t>(mailbox_manager_t*, mailbox_t<void (perfmon_result_t)>::address_t, perfmon_result_t const&) at typed.hpp:210\r\n       10: stat_manager_t::perform_stats_request(mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t) at stat_manager.cc:29\r\n       11: boost::_mfi::mf3<void, stat_manager_t, mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t>::operator()(stat_manager_t*, mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t) const at mem_fn_template.hpp:393\r\n       12: void boost::_bi::list4<boost::_bi::value<stat_manager_t*>, boost::_bi::value<mailbox_addr_t<void (perfmon_result_t)> >, boost::_bi::value<std::set<std::string, std::less<std::string>, std::allocator<std::string> > >, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf3<void, stat_manager_t, mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf3<void, stat_manager_t, mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t>&, boost::_bi::list0&, int) at bind.hpp:457\r\n       13: boost::_bi::bind_t<void, boost::_mfi::mf3<void, stat_manager_t, mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t>, boost::_bi::list4<boost::_bi::value<stat_manager_t*>, boost::_bi::value<mailbox_addr_t<void (perfmon_result_t)> >, boost::_bi::value<std::set<std::string, std::less<std::string>, std::allocator<std::string> > >, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:21\r\n       14: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf3<void, stat_manager_t, mailbox_addr_t<void (perfmon_result_t)> const&, std::set<std::string, std::less<std::string>, std::allocator<std::string> > const&, auto_drainer_t::lock_t>, boost::_bi::list4<boost::_bi::value<stat_manager_t*>, boost::_bi::value<mailbox_addr_t<void (perfmon_result_t)> >, boost::_bi::value<std::set<std::string, std::less<std::string>, std::allocator<std::string> > >, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at runtime_utils.hpp:58\r\n       15: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       16: coro_t::run() at coroutines.cc:178\r\nerror: Exiting.\r\n```\r\n\r\nI imagine this is related to the perfmon changes in commit 5cbe2096."
  , issueState = "closed"
  , issueId = Id 15146619
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-06) (-06) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 31
          , milestoneClosedIssues = 67
          , milestoneDescription =
              Just
                "The primary purpose of this release is to make ReQL improvements we've been waiting to make for so long.\r\n\r\n"
          , milestoneTitle = "1.6"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/31"
          , milestoneCreatedAt = 2013 (-04) (-27) 01 : 30 : 17 UTC
          , milestoneState = "closed"
          }
  }