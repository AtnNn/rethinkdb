Issue
  { issueClosedAt = Just 2014 (-07) (-03) 23 : 48 : 55 UTC
  , issueUpdatedAt = 2014 (-07) (-04) 01 : 51 : 23 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1010/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1010"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      ]
  , issueNumber = 1010
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7032
        , simpleUserLogin = N "anatol"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7032?v=3"
        , simpleUserUrl = "https://api.github.com/users/anatol"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "In place migration tool for rethinkdb data"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1010"
  , issueCreatedAt = 2013 (-06) (-14) 04 : 32 : 35 UTC
  , issueBody =
      Just
        "Recently RethinkDB changed storage format twice 1.4->1.5 and 1.5->1.6 \r\n\r\nVersion bump requires manual migration as described here https://github.com/rethinkdb/rethinkdb/tree/next/scripts/migration\r\nThis script connects old version of database, dumps data locally and then user should export it back. As a package maintainer I think migration could be simplified/improved.\r\n\r\nOne thing I do not like is that it requires user to take action before upgrade. This assumes that users read news and know that for 1.5->1.6 data migration is required. But usually users don't care about underlying storage format until software works. So the user sees package update, install it, and only then learns migration is required. And migration requires previous database version, so users need to downgrade the package dump data and then upgrade again.\r\n\r\nI think it is better to have an in-place migration for storage. Ideally it should be a tool that crunches data files directly without starting up a server. The script should be included into distribution (e.g. in /usr/share/rethinkdb/bin)\r\n\r\nIn this case the package upgrade should look like:\r\n\r\n$ stop service rethinkdb\r\n$ upgrade package rethinkdb\r\n\r\n$ cp -r /var/lib/rethinkdb ~/backup\r\n$ /usr/share/rethinkdb/bin/migrate /var/lib/rethinkdb/default"
  , issueState = "closed"
  , issueId = Id 15542069
  , issueComments = 48
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 64
          , milestoneClosedIssues = 228
          , milestoneDescription =
              Just
                "These issues are no longer relevant to the current version of RethinkDB"
          , milestoneTitle = "outdated"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/64"
          , milestoneCreatedAt = 2014 (-03) (-28) 00 : 17 : 40 UTC
          , milestoneState = "closed"
          }
  }