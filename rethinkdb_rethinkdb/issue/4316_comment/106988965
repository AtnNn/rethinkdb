IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-30) 05 : 10 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 572196
        , simpleUserLogin = N "stuartpb"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/572196?v=3"
        , simpleUserUrl = "https://api.github.com/users/stuartpb"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/106988965"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4316#issuecomment-106988965"
  , issueCommentCreatedAt = 2015 (-05) (-30) 04 : 44 : 10 UTC
  , issueCommentBody =
      "Real-life example on that first point: I use https://github.com/stuartpb/endex to construct my database's db, index, and table creation queries (which are not executed if the db/index/table already exists). `endex`'s `package.json` includes the dependency `\"rethinkdb\": \"^1.16.0\"`, so it will not use any `rethinkdb` module greater than or equal to `2.0.0`.\r\n\r\nI include `endex` in an app that has the dependency `\"rethinkdb\": \"^2.0.0-1\"`. I get a connection using `r.connect(cfg.rethinkdb).then(conn=>{endex.db('myapp').run(conn)}`. The prototype of `conn` is the `Connection` object from `rethinkdb@2.0.0-1`, but the query used by `endex` is comparing it against the `Connection` object from `rethinkdb@1.16.2`. Since these are not the same object, `.run` decides `conn` is not a valid RethinkDB connection, and throws up an error.\r\n\r\n(If the notion of trying to use a value from 1.16 against 2.0 bothers you, imagine the dependencies are `\"rethinkdb\": \"2.0.0\"` and `\"rethinkdb\": \"2.0.0-1\"`, which would still yield the same problem.)"
  , issueCommentId = 106988965
  }