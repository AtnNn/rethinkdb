IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-01) 20 : 42 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/107700479"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4316#issuecomment-107700479"
  , issueCommentCreatedAt = 2015 (-06) (-01) 20 : 40 : 24 UTC
  , issueCommentBody =
      "I think we already have https://github.com/rethinkdb/rethinkdb/issues/3263 for\r\n> Duck typing to make rethinkdb play nicer with connections created by similar versions of rethinkdb (easy)\r\n\r\nSo I suggest that we keep this about\r\n> Designing an abstract connection interface, to allow rethinkdb's query builder to play well with alternative connection implementations, and vice versa (hard) \r\n\r\n(*Edit:* I missed that you had already opened https://github.com/rethinkdb/rethinkdb/issues/4317 as a separate issue. So let's use this to discuss a work around.)\r\n\r\nHaving an official abstract connection interface would be nice. I think it will take a little until we find the time to design one though. For now I suggest that we make the current `run` function work with other classes without explicitly specifying the expected interface, so that users who know what they are doing can mimic the existing connection interface in their own classes and pass them to `run`.\r\n\r\nTo provide a sufficient amount of type safety, I suggest that we add a special method or magic constant to the connection type that we can call / look at to make sure that the passed object is actually a RethinkDB connection. If someone wants to use their own connection implementation, they'd just need to duplicate that magic constant. At the same time it would protect against accidentally passing in something other than a connection and getting a bad error message."
  , issueCommentId = 107700479
  }