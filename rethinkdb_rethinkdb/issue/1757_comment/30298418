IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-11) 06 : 47 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/30298418"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1757#issuecomment-30298418"
  , issueCommentCreatedAt = 2013 (-12) (-11) 06 : 47 : 50 UTC
  , issueCommentBody =
      "We offer no snapshotting guarantees of this type. You should never count on snapshotting to save you from a a read seeing a write in the same query. The only time you can be sure a read won't see a write is when there's a computation barrier. For example:\r\n\r\n```Python\r\ntable.insert({\"count\" : table.count()})\r\n```\r\n\r\nobviously `table.count()` needs to be evaluated eagerly here. So we're not going to accidentally count the document `{\"count\": ...}` in that `count`.\r\n\r\nThe only other guarantees you might need to know about are the ones regarding whether or not you see a consistent view with respect to writes from other connections."
  , issueCommentId = 30298418
  }