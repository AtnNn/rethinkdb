IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-04) 00 : 19 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/10978776"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/140#issuecomment-10978776"
  , issueCommentCreatedAt = 2012 (-12) (-04) 00 : 19 : 26 UTC
  , issueCommentBody =
      "@guersam We're not node.js experts so unfortunately we seem to have gotten the error handling conventions wrong. We're in the midst of a massive protocol and driver overhaul incorporating all the feedback since our launch. We'll certainly be looking into our error handling on the JS driver.\r\n\r\nThe connection constructor is designed to take an optional error callback in case we're unable to establish a TCP connection to the server. That error handler then is associated with the connection indefinitely until changed with the setErrorHandler method. That error handler will be called when any query fails. Of course, you can also pass an optional error handler for each quey.\r\n\r\nHow would you prefer that it work? Any feedback would really be appreciated!"
  , issueCommentId = 10978776
  }