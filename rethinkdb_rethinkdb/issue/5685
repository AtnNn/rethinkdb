Issue
  { issueClosedAt = Just 2016 (-04) (-19) 22 : 40 : 46 UTC
  , issueUpdatedAt = 2016 (-04) (-20) 22 : 30 : 58 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5685/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5685"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5685
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 6145910
        , simpleUserLogin = N "frankleng"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/6145910?v=3"
        , simpleUserUrl = "https://api.github.com/users/frankleng"
        , simpleUserType = OwnerUser
        }
  , issueTitle = ".fold() vs .reduce() performance"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5685"
  , issueCreatedAt = 2016 (-04) (-19) 00 : 46 : 16 UTC
  , issueBody =
      Just
        "Since  ```.reduce()``` simply returns the 1st element if the sequence has 1 element.\r\nI ended up used the new ```.fold()``` instead. It returns the base, so we don't run into inconsistent results when dealing with single and multi element sequences.\r\n\r\nTested them both on a small dataset, but the profiler indicated that ```.fold()``` took consistently 2-3x longer in server time.\r\nIs this because ```.reduce()``` runs in parallel and ```.fold()``` does not?\r\nCan we just have ```.reduce()``` run even when the sequence has 1 element... catch it with ```r.branch()```?"
  , issueState = "closed"
  , issueId = Id 149313254
  , issueComments = 6
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 18
          , milestoneClosedIssues = 180
          , milestoneDescription =
              Just
                "These feature requests, bugs and pull requests have been acknowledged, but will not be fixed."
          , milestoneTitle = "wontfix"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/18"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 24 UTC
          , milestoneState = "closed"
          }
  }