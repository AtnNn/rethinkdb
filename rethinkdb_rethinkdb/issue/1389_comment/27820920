IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-05) 22 : 40 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27820920"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1389#issuecomment-27820920"
  , issueCommentCreatedAt = 2013 (-11) (-05) 22 : 40 : 19 UTC
  , issueCommentBody =
      "So one way in which the SCS could fail in this way is this:\r\nThe semantic checking serializer uses a separate file to persist block information across restarts. On an index write, it writes the updated block infos to this file first, and then calls index_write on the inner serializer.\r\nIf the index_write in the inner serializer does not complete (e.g. because the server crashes), the semantic checking serializer will have outdated information.\r\nIn this specific case, the (inner) log serializer actually claimed that the block was deleted (which is equivalent to it never having existed as far as I understand) , and the SCS thinks that the block should exist.\r\nThis would indicate that the block had just been created shortly before the crash occurred. Wonder if that information is helpful in any way..."
  , issueCommentId = 27820920
  }