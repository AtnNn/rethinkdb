Issue
  { issueClosedAt = Just 2015 (-12) (-04) 19 : 22 : 30 UTC
  , issueUpdatedAt = 2016 (-04) (-19) 17 : 33 : 59 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4541/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4541"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:build"
          , labelName = "cp:build"
          }
      , IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:hygiene"
          , labelName = "tp:hygiene"
          }
      ]
  , issueNumber = 4541
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 863286
        , simpleUserLogin = N "dalanmiller"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/863286?v=3"
        , simpleUserUrl = "https://api.github.com/users/dalanmiller"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Building 2.1 beta on Raspberry Pi 2 fails"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4541"
  , issueCreatedAt = 2015 (-07) (-16) 20 : 16 : 20 UTC
  , issueBody =
      Just
        "Just tried building 2.1 beta from source on a Raspberry Pi 2\r\n\r\n```\r\npi@dalanmiller-pi ~/rethinkdb-2.1.0-0BETA1 $ sudo ./configure --with-system-malloc --allow-fetch\r\n* Reading arguments from 'configure.default'\r\n* Prepending the following arguments: --fetch re2 --fetch gtest --fetch v8\r\n* Detecting system configuration\r\nBash:                           4.2.37(1)-release\r\nUse ccache:                     no\r\nC++ Compiler:                   GCC 4.6.3 (/usr/bin/c++)\r\nHost System:                    arm-linux-gnueabihf\r\nBuild System:                   Linux 4.0.6-v7+ armv7l\r\nCross-compiling:                no\r\nHost Operating System:          Linux\r\nBuild Architecture:             armv7l\r\nC++11:                          ok\r\nPrecompiled web assets:         yes\r\nProtobuf compiler:              /usr/bin/protoc\r\npython:                         python 2.7.3\r\nNode.js package manager:        external/node_0.12.2\r\ncoffee:                         external/coffee-script_1.7.1\r\nBrowserify:                     external/browserify_3.24.13\r\nbluebird:                       external/bluebird_2.9.32\r\nweb UI dependencies:            external/admin-deps_2.0.3\r\nwget:                           /usr/bin/wget\r\ncurl:                           /usr/bin/curl\r\nGoogle Test:                    external/gtest_1.6.0\r\ntermcap:                        no\r\nboost_system:                   external/boost_1.56.0\r\nssl:                            -lssl\r\nprotobuf:                       -lprotobuf\r\nicui18n:                        external/icu_54.1\r\nicuuc:                          external/icu_54.1\r\nicudata:                        external/icu_54.1\r\nv8 javascript engine:           external/v8_3.30.33.16\r\nRE2:                            external/re2_20140111\r\nz:                              -lz\r\ncrypto:                         -lcrypto\r\ncurl:                           external/curl_7.40.0\r\nmalloc:                         system\r\nTest protobuf:                  ok\r\nTest boost:                     ok\r\nInstallation prefix:            /usr/local\r\nConfiguration prefix:           /usr/local/etc\r\nRuntime data prefix:            /usr/local/var\r\n* Warning: ARM support is still experimental\r\n* Wrote configuration to config.mk\r\n```\r\n\r\n```\r\npi@dalanmiller-pi ~/rethinkdb-2.1.0-0BETA1 $ make\r\n    [1/405] CP build/web_assets\r\n    [2/405] GENERATE build/release_system/web_assets/web_assets.cc\r\n    [3/405] INSTALL-INCLUDE gtest_1.6.0\r\n    [4/405] CC build/release_system/obj/web_assets/web_assets.o\r\n    [5/405] PROTOC[CPP] src/rdb_protocol/ql2.proto\r\n    [6/405] PROTOC[CPP] src/rdb_protocol/ql2_extensions.proto\r\n    [7/405] CC build/release_system/obj/rdb_protocol/ql2.pb.o\r\n    [8/405] CC build/release_system/obj/rdb_protocol/ql2_extensions.pb.o\r\n    [9/405] INSTALL-INCLUDE re2_20140111\r\n    [10/405] INSTALL-INCLUDE v8_3.30.33.16\r\n    [11/405] FETCH curl_7.40.0\r\n    [12/405] INSTALL-INCLUDE curl_7.40.0\r\n    [13/405] FETCH icu_54.1\r\n    [14/405] INSTALL-INCLUDE icu_54.1\r\n    [15/405] CC build/release_system/obj/activity_logger.o\r\n    [16/405] CC build/release_system/obj/perfmon/core.o\r\n    [17/405] CC build/release_system/obj/perfmon/filter.o\r\n    [18/405] CC build/release_system/obj/perfmon/collect.o\r\n    [19/405] CC build/release_system/obj/perfmon/perfmon.o\r\n    [20/405] CC build/release_system/obj/rdb_protocol/validate.o\r\n    [21/405] CC build/release_system/obj/rdb_protocol/val.o\r\n    [22/405] CC build/release_system/obj/rdb_protocol/datum.o\r\nIn file included from ./src/rdb_protocol/datum.hpp:24:0,\r\n                 from src/rdb_protocol/datum.cc:2:\r\n./src/rapidjson/writer.h: In member function \8216bool rapidjson::Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator>::WriteString(const Ch*, rapidjson::SizeType) [with OutputStream = rapidjson::GenericStringBuffer<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator>::Ch = char, rapidjson::SizeType = unsigned int]\8217:\r\n./src/rapidjson/prettywriter.h:82:45:   instantiated from \8216bool rapidjson::PrettyWriter<OutputStream, SourceEncoding, TargetEncoding, StackAllocator>::String(const Ch*, rapidjson::SizeType, bool) [with OutputStream = rapidjson::GenericStringBuffer<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::PrettyWriter<OutputStream, SourceEncoding, TargetEncoding, StackAllocator>::Ch = char, rapidjson::SizeType = unsigned int]\8217\r\nsrc/rdb_protocol/datum.cc:1406:17:   instantiated from \8216void ql::datum_t::write_json(json_writer_t*) const [with json_writer_t = rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<> > >]\8217\r\nsrc/rdb_protocol/datum.cc:594:31:   instantiated from here\r\n./src/rapidjson/writer.h:309:18: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\nIn file included from ./src/rapidjson/document.h:26:0,\r\n                 from ./src/rdb_protocol/datum.hpp:22,\r\n                 from src/rdb_protocol/datum.cc:2:\r\n./src/rapidjson/reader.h: In member function \8216rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Token rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Tokenize(rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Ch) [with SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>, rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Ch = char]\8217:\r\n./src/rapidjson/reader.h:1410:41:   instantiated from \8216rapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParse(InputStream&, Handler&) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/reader.h:405:58:   instantiated from \8216rapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Parse(InputStream&, Handler&) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/document.h:1703:9:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::ParseStream(InputStream&) [with unsigned int parseFlags = 16u, SourceEncoding = rapidjson::UTF8<>, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >]\8217\r\n./src/rapidjson/document.h:1779:57:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 16u, SourceEncoding = rapidjson::UTF8<>, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\n./src/rapidjson/document.h:1788:47:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 16u, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\n./src/rapidjson/document.h:1795:45:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\nsrc/rdb_protocol/datum.cc:1677:42:   instantiated from here\r\n./src/rapidjson/reader.h:1069:9: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n./src/rapidjson/reader.h: In member function \8216void rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::ParseStringToStream(InputStream&, OutputStream&) [with unsigned int parseFlags = 16u, SEncoding = rapidjson::UTF8<>, TEncoding = rapidjson::UTF8<>, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, OutputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217:\r\n./src/rapidjson/reader.h:654:13:   instantiated from \8216void rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::ParseString(InputStream&, Handler&, bool) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/reader.h:993:23:   instantiated from \8216void rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::ParseValue(InputStream&, Handler&) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/reader.h:418:13:   instantiated from \8216rapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Parse(InputStream&, Handler&) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/document.h:1703:9:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::ParseStream(InputStream&) [with unsigned int parseFlags = 16u, SourceEncoding = rapidjson::UTF8<>, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >]\8217\r\n./src/rapidjson/document.h:1779:57:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 16u, SourceEncoding = rapidjson::UTF8<>, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\n./src/rapidjson/document.h:1788:47:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 16u, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\n./src/rapidjson/document.h:1795:45:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\nsrc/rdb_protocol/datum.cc:1677:42:   instantiated from here\r\n./src/rapidjson/reader.h:697:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n./src/rapidjson/reader.h: In member function \8216void rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::ParseStringToStream(InputStream&, OutputStream&) [with unsigned int parseFlags = 16u, SEncoding = rapidjson::UTF8<>, TEncoding = rapidjson::UTF8<>, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, OutputStream = rapidjson::GenericReader<rapidjson::UTF8<>, rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >::StackStream<char>, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217:\r\n./src/rapidjson/reader.h:663:13:   instantiated from \8216void rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::ParseString(InputStream&, Handler&, bool) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/reader.h:993:23:   instantiated from \8216void rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::ParseValue(InputStream&, Handler&) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/reader.h:418:13:   instantiated from \8216rapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::Parse(InputStream&, Handler&) [with unsigned int parseFlags = 16u, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >, SourceEncoding = rapidjson::UTF8<>, TargetEncoding = rapidjson::UTF8<>, StackAllocator = rapidjson::MemoryPoolAllocator<>]\8217\r\n./src/rapidjson/document.h:1703:9:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::ParseStream(InputStream&) [with unsigned int parseFlags = 16u, SourceEncoding = rapidjson::UTF8<>, InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >]\8217\r\n./src/rapidjson/document.h:1779:57:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 16u, SourceEncoding = rapidjson::UTF8<>, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\n./src/rapidjson/document.h:1788:47:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with unsigned int parseFlags = 16u, Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\n./src/rapidjson/document.h:1795:45:   instantiated from \8216rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Parse(const Ch*) [with Encoding = rapidjson::UTF8<>, Allocator = rapidjson::MemoryPoolAllocator<>, StackAllocator = rapidjson::CrtAllocator, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator> = rapidjson::GenericDocument<rapidjson::UTF8<> >, rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::Ch = char]\8217\r\nsrc/rdb_protocol/datum.cc:1677:42:   instantiated from here\r\n./src/rapidjson/reader.h:697:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\ncc1plus: all warnings being treated as errors\r\nsrc/build.mk:401: recipe for target 'build/release_system/obj/rdb_protocol/datum.o' failed\r\nmake[1]: *** [build/release_system/obj/rdb_protocol/datum.o] Error 1\r\nMakefile:52: recipe for target 'make' failed\r\nmake: *** [make] Error 2\r\n```"
  , issueState = "closed"
  , issueId = Id 95518170
  , issueComments = 27
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 114
          , milestoneClosedIssues = 19
          , milestoneDescription = Nothing
          , milestoneTitle = "2.2.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/114"
          , milestoneCreatedAt = 2015 (-12) (-15) 22 : 25 : 25 UTC
          , milestoneState = "closed"
          }
  }