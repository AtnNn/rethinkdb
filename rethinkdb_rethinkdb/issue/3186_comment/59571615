IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-17) 20 : 32 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 17789
        , simpleUserLogin = N "gchpaco"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/17789?v=3"
        , simpleUserUrl = "https://api.github.com/users/gchpaco"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/59571615"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3186#issuecomment-59571615"
  , issueCommentCreatedAt = 2014 (-10) (-17) 20 : 32 : 24 UTC
  , issueCommentBody =
      "If you replace `to_string` in `StdStringPrinter` with this code:\r\n```python\r\n    def to_string(self):\r\n        # Make sure &string works, too.\r\n        type = self.val.type\r\n        if type.code == gdb.TYPE_CODE_REF:\r\n            type = type.target()\r\n\r\n        # Calculate the length of the string so that to_string returns\r\n        # the string according to length, not according to first null\r\n        # encountered.\r\n        return self.val['_M_dataplus']['_M_p']\r\n```\r\nit will stop barfing (but it will do the wrong thing with nulls).  I don't know what to do to next here, since clang is actually broken here."
  , issueCommentId = 59571615
  }