IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-11) 23 : 58 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 6947
        , simpleUserLogin = N "cayblood"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/6947?v=3"
        , simpleUserUrl = "https://api.github.com/users/cayblood"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/101075612"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4210#issuecomment-101075612"
  , issueCommentCreatedAt = 2015 (-05) (-11) 23 : 42 : 38 UTC
  , issueCommentBody =
      "@danielmewes consider a simple example. You've got a comments table and a users table. You want to make sure that users can only edit comments that they created. This requires retrieving the currently authenticated user's record from the users table and checking that its id is the same as the createdBy property on the comments table.\r\n\r\nHere's a more complex example we're currently doing in firebase. We have an embeddable web plugin that we track usage on to determine how much to charge our customers. We want to make sure that they aren't bypassing our usage tracking by making sure that they can only read from a comments table if they have recently incremented a pageViews property on another table. This requires us to check if the time interval between the last update to one table is less than a certain amount before allowing them to read from the comments table."
  , issueCommentId = 101075612
  }