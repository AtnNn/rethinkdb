Issue
  { issueClosedAt = Just 2013 (-08) (-05) 23 : 24 : 08 UTC
  , issueUpdatedAt = 2013 (-08) (-05) 23 : 24 : 17 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1219/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1219"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 1219
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Server crash in polyglot tests: fake_archive_exc_t"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1219"
  , issueCreatedAt = 2013 (-08) (-01) 04 : 16 : 38 UTC
  , issueBody =
      Just
        "```c\r\nVersion: rethinkdb 1.7.3-492-gcfefee-dirty (GCC 4.6.3)\r\nerror: Error in ../src/errors.cc at line 110:\r\nerror: Uncaught exception of type \"fake_archive_exc_t\"\r\nerror: Backtrace:\r\nerror: Wed Jul 31 20:59:31 2013\r\n       \r\n       1: ../../build/release/rethinkdb() [0x93b712]\r\n       2: ../../build/release/rethinkdb() [0x936750]\r\n       3: ../../build/release/rethinkdb() [0x93696f]\r\n       4: +0xb5846 at 0x2ad278926846 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       5: +0xb5873 at 0x2ad278926873 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       6: +0xb596e at 0x2ad27892696e (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       7: ../../build/release/rethinkdb() [0x6a7e02] mailbox_t<void ()(rdb_protocol_t::read_response_t)>::read_impl_t::read(read_stream_t*) + 2146\r\n       8: ../../build/release/rethinkdb() [0x90d0ee] mailbox_manager_t::mailbox_read_coroutine(int, unsigned long, string_read_stream_t*) + 238\r\n       9: ../../build/release/rethinkdb() [0x43a91e] coro_t::run() + 46\r\nerror: Exiting.\r\n```\r\n(Notes added for function names)\r\n\r\nIt looks like there's a problem with `rdb_protocol_t::read_response_t` deserialization.  I think I've run into something similar before that when an uninitialized value was serialized, it would crash the receiving side.  Perhaps some recent change to `rdb_protocol_t::read_response_t` has allowed for this."
  , issueState = "closed"
  , issueId = Id 17489956
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-08) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 40
          , milestoneClosedIssues = 96
          , milestoneDescription = Just ""
          , milestoneTitle = "1.8"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/40"
          , milestoneCreatedAt = 2013 (-06) (-29) 01 : 55 : 11 UTC
          , milestoneState = "closed"
          }
  }