IssueComment
  { issueCommentUpdatedAt = 2016 (-01) (-12) 18 : 44 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/171008424"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4928#issuecomment-171008424"
  , issueCommentCreatedAt = 2016 (-01) (-12) 18 : 44 : 23 UTC
  , issueCommentBody =
      "@mglukhovsky and I were talking with @dmitrig01 yesterday, and he was explaining some of their uses of HyperLogLog.  He said that they basically use it to get approximate counts of the number of elements in a large set that match a predicate, and that they were OK having overhead that scaled with the number of different types of predicates.  I think we could get that behavior by adapting our approximate btree count code to be able to get approximate counts of secondary index subranges (where you'd need a separate sindex for each class of predicate).  That might be easier than adding a HyperLogLog implementation."
  , issueCommentId = 171008424
  }