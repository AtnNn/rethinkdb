IssueComment
  { issueCommentUpdatedAt = 2016 (-01) (-12) 21 : 36 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 10422
        , simpleUserLogin = N "dmitrig01"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/10422?v=3"
        , simpleUserUrl = "https://api.github.com/users/dmitrig01"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/171065822"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4928#issuecomment-171065822"
  , issueCommentCreatedAt = 2016 (-01) (-12) 21 : 36 : 47 UTC
  , issueCommentBody =
      "A few more notes here:\r\n\r\nHLLs have well-known (and relatively small) error bounds, so if we were to go this route, we'd want some knowledge of how approximate they actually are.\r\n\r\nI don't understand exactly what \"adapting our approximate btree count code to be able to get approximate counts of secondary index subranges (where you'd need a separate sindex for each class of predicate)\" means - but perhaps it's similar to what Postgres does with count estimates: https://wiki.postgresql.org/wiki/Count_estimate (this page doesn't really say how it does it \8211\160was not able to find the docs after a quick Googling \8211\160but I'm sure it's somewhere).\r\n\r\nIf you do want to go the HLL route, Google came out with a better version (\"HLL++\") that significantly reduces errors especially at lower cardinalities: http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/pubs/archive/40671.pdf.\r\n\r\n"
  , issueCommentId = 171065822
  }