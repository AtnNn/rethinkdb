IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-17) 17 : 35 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/185317111"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/5381#issuecomment-185317111"
  , issueCommentCreatedAt = 2016 (-02) (-17) 17 : 35 : 10 UTC
  , issueCommentBody =
      "On the testing front, this is going to be a bit tricky to do in a proper manner since Python's certificate checking is uneven at best. For building (already at `./configure`, which is currently required to run the tests anyways) we already require either `curl` or `wget`, and at least the former has good support for certificate checking. So at least some of the testing could be done though that binary called with Python's `subprocess` module (I would prefer to avoid the PyCurl module since it requires compiling). That would make the web part easy, and it is possible that you could use `curl`'s telnet support to jerry-rig enough to test client and server connections.\r\n\r\nAlternately, it would probably not be too difficult to create `c`/`c++` tests around `libcurl` or OpenSSL that could handle all of the cases in a less hacky manner. That would require a little `make` work, but I would be happy to help on that."
  , issueCommentId = 185317111
  }