IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-16) 23 : 06 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/157203388"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5093#issuecomment-157203388"
  , issueCommentCreatedAt = 2015 (-11) (-16) 23 : 06 : 39 UTC
  , issueCommentBody =
      "Thanks, this appears to be in the new code that replaced protocol buffers for internally representing queries. I'm currently compiling on a PI2 to reproduce it...\r\n\r\nThe backtrace with newlines:\r\n```\r\n2015-11-15T09:38:36.004853274 7.825774s error: Sun Nov 15 09:38:33 2015\r\n\r\n1 [0x371c40]: backtrace_t::backtrace_t() at backtrace.cc:203 (discriminator 1)\r\n2 [0x371fc8]: format_backtrace(bool) at basic_string.h:275\r\n3 [0x638ea4]: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n4 [0x3aea7c]: linux_thread_pool_t::fatal_signal_handler(int, siginfo_t*, void*) at thread_pool.cc:359\r\n5 [0x76b3a180]: __default_rt_sa_restorer_v2+0 at 0x76b3a180 (/lib/arm-linux-gnueabihf/libc.so.6)\r\n6 [0x769244]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:70\r\n7 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n8 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n9 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n10 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n11 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n12 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n13 [0x76a514]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:163\r\n14 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n15 [0x769a28]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:149\r\n16 [0x76a514]: ql::term_walker_t::walker_frame_t::walk(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, ql::backtrace_id_t) at term_walker.cc:163\r\n17 [0x768c48]: ql::preprocess_term_tree(rapidjson::GenericValue<rapidjson::UTF8<char>, rapidjson::RAllocator>*, rapidjson::RAllocator*, ql::backtrace_registry_t*) at intrusive_list.hpp:13\r\n18 [0x73df38]: ql::json_term_storage_t::preprocess() at term_storage.cc:291\r\n19 [0x74e81c]: ql::query_cache_t::create(ql::query_params_t*, signal_t*) at scoped.hpp:103\r\n20 [0x661580]: rdb_query_server_t::run_query(ql::query_params_t*, ql::response_t*, signal_t*) at query_server.cc:43\r\n21 [0x37b028]: query_server_t::handle(http_req_t const&, http_res_t*, signal_t*) at server.cc:542\r\n22 [0x306530]: routing_http_app_t::handle(http_req_t const&, http_res_t*, signal_t*) at basic_string.h:293\r\n23 [0x306530]: routing_http_app_t::handle(http_req_t const&, http_res_t*, signal_t*) at basic_string.h:293\r\n24 [0x311408]: http_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at basic_string.h:555\r\n25 [0x311cc0]: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), boost::_bi::bind_t<void, boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<http_server_t*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > > >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at mem_fn_template.hpp:280\r\n26 [0x39b294]: linux_nonthrowing_tcp_listener_t::handle(int) at scoped.hpp:70\r\n27 [0x3aaee4]: coro_t::run() at coroutines.cc:214\r\n28 [0x3aaeb8]: coro_t::run() at coroutines.cc:182\r\n```"
  , issueCommentId = 157203388
  }