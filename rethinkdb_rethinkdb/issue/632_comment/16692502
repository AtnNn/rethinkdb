IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-19) 22 : 09 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16692502"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/632#issuecomment-16692502"
  , issueCommentCreatedAt = 2013 (-04) (-19) 22 : 09 : 25 UTC
  , issueCommentBody =
      "The worldview on numbers-as-keys might be a bit different if you're storing \"documents\" and the like.  Such as a sparse array?  I don't know...  However, using numbers as column names would also be incompatible with plenty of languages, such as the statically typed languages for which you might use reflection to map column names to field names.  Also, there are languages such as Javascript where you can't have distinguishable integer field names and string field names.  It would be very bad to support having a field named 3 and a field named \"3\" in the same document.  As for whether an integer gets implicitly converted to string or not in a given driver, I guess that would be up to the language or driver.  You'd might end up having implicit integer->string conversion for field names in Perl, for example.\r\n\r\nI'm not sure what you mean by ordering.  As far as I know, there is no relevant ordering among field names."
  , issueCommentId = 16692502
  }