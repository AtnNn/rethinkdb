IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-19) 18 : 49 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16675743"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/632#issuecomment-16675743"
  , issueCommentCreatedAt = 2013 (-04) (-19) 18 : 49 : 54 UTC
  , issueCommentBody =
      "I don't think this is a matter of following the rules of JSON. We now support a serialization format called RQL Datum that has its own rules that we need to define. This is a matter of nailing down a definition for RQL that hitherto has been left implicit.\r\n\r\nI see three important points to heed in this decision:\r\n\r\n* Presently the protobuf spec itself only support string keys. Properly supporting arbitrary keys would mean changing this field to be a Datum.\r\n* RQL must be embedded in many different environments. Even among the three fairly similar languages we've chosen there are different conventions for serializing objects to strings.\r\n* Any serialization algorithm we might define would have to be implemented in the drivers, opening the door to divergent behavior.\r\n\r\nThis suggests being strict about requiring string keys. If users want to encode different types for keys they will need to explicitly serialize them. This improves clarity by forcing the programmer to acknowledge their serialization algorithm and understand how it works across different environments. Alternatively, relying on native or magical behavior opens up the door to silent inconsistencies that might result in nasty bugs."
  , issueCommentId = 16675743
  }