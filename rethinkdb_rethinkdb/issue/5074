Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 23 : 50 : 11 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5074/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5074"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 5074
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "`subscription_t` in `changefeed.cc` needs additional locking."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5074"
  , issueCreatedAt = 2015 (-11) (-10) 23 : 12 : 48 UTC
  , issueBody =
      Just
        "Currently I think the following bug can occur:\n- A `range_sub_t` is destroyed.\n  - We enter `destructor_cleanup`.\n  - We check that `feed != NULL`, which is true.\n  - We call `del_sub`, which calls `del_sub_with_lock` on the `feed_t`.\n  - We switch to the `feed_t`s home thread.\n- While the thread switch is happening, the `feed_t` is disconnected.\n  - We enter `feed_t::stop_subs`.\n  - We iterate through the range subs, detaching them.  This sets `feed` to `NULL` on them, but that doesn't matter because we're already in a thread switch.\n  - The `feed_t` is destroyed.\n- The thread switch completes, and we attempt to acquire a drainer lock on the deleted feed in `del_sub_with_lock`.\n---\n\nI think the solution is that we need to wrap access to the `feed` pointer in the subscription with a lock, so that we can have the following logic:\n- A `range_sub_t` is destroyed.\n  - It acquires a read lock on its `feed`.\n  - It checks that its `feed` is non-NULL, switches to the feed's thread, and acquires a drainer lock.\n  - It released the read lock on its `feed` (this is necessary to avoid a deadlock since both `del_sub_with_lock` and `stop_subs` acquire a lock on `range_subs_lock` on the `feed_t`).\n  - It continues as normal (but `del_sub_with_lock` will change to no longer do the thread switch and drainer lock acquisition).\n- When the `feed_t` is in `stop_subs`, it needs to acquire this lock for each sub, which means it can't be destroyed until the drainer is constructed.\n---\n\nI haven't actually seen this bug, but it looks wrong by inspection.\n"
  , issueState = "open"
  , issueId = Id 116224121
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 87
          , milestoneNumber = 123
          , milestoneClosedIssues = 22
          , milestoneDescription = Just ""
          , milestoneTitle = "2.4-polish"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/123"
          , milestoneCreatedAt = 2016 (-04) (-28) 19 : 25 : 10 UTC
          , milestoneState = "open"
          }
  }