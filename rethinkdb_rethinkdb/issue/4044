Issue
  { issueClosedAt = Just 2015 (-04) (-10) 01 : 24 : 03 UTC
  , issueUpdatedAt = 2015 (-04) (-10) 02 : 03 : 54 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4044/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4044"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4044
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 189593
        , simpleUserLogin = N "forrestgrant"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/189593?v=3"
        , simpleUserUrl = "https://api.github.com/users/forrestgrant"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Filter deep hash"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4044"
  , issueCreatedAt = 2015 (-04) (-10) 01 : 01 : 06 UTC
  , issueBody =
      Just
        "I have documents that look like this:\n\n``` ruby\n{\n  first: {\n    second: [\n      { foo: 'foo', bar: 'bar' },\n      { foo: 'another foo', bar: 'another bar' },\n    ],\n  },\n}\n```\n\nI'd like to filter by `foo`. With mongo syntax, I think it would look something like this:\n\n``` ruby\nr.table('table').filter { |doc| doc['first']['second.foo'].match('(?i)another') }\n```\n\nAnything?\n"
  , issueState = "closed"
  , issueId = Id 67482273
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }