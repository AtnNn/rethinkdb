IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-11) 22 : 16 : 12 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 17789
        , simpleUserLogin = N "gchpaco"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/17789?v=3"
        , simpleUserUrl = "https://api.github.com/users/gchpaco"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/51848475"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2868#issuecomment-51848475"
  , issueCommentCreatedAt = 2014 (-08) (-11) 22 : 16 : 12 UTC
  , issueCommentBody =
      "I come from the camp where the primary key should never ever change, which I acknowledge is not necessary appropriate for RethinkDB.  I think using UUIDs as primary keys and permitting convenient access to the name field is probably right; your `.get()` on secondary indexes sounds reasonable.\r\n\r\nPut another way, naming things is one of the great difficult problems in CS (the other one being cache invalidation and if you're feeling witty, off-by-one errors).  UUIDs are the appropriate internal tool for something like this because they can be generated locally without (substantive) fear of duplication and they are easy to make, and we should permit convenience methods that allow users to avoid them."
  , issueCommentId = 51848475
  }