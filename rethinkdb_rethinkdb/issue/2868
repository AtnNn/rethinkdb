Issue
  { issueClosedAt = Just 2014 (-08) (-28) 00 : 48 : 27 UTC
  , issueUpdatedAt = 2015 (-01) (-02) 21 : 16 : 50 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2868/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2868"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 2868
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Switch pseudo-tables to use UUIDs as primary keys"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2868"
  , issueCreatedAt = 2014 (-08) (-11) 22 : 08 : 50 UTC
  , issueBody =
      Just
        "The purpose of this issue is to discuss whether the pseudo-tables (like `rethinkdb.table_status` and `rethinkdb.table_config`) should use names or UUIDs as primary keys. This applies to both servers and tables. Here's my (perhaps biased) summary of the discussion so far:\r\n\r\n* Names can change, but UUIDs cannot. Names can have name collisions, but UUIDs cannot.\r\n\r\n* UUIDs are horrible for usability. If the user has to type UUIDs to manage their cluster, that's just atrocious.\r\n\r\n* Our current plan is to automatically resolve name collisions by renaming one of the competing entities. (Of course, we'll try to prevent name collisions as much as possible, but without a true consensus algorithm we can't always prevent them.)\r\n\r\n* Our current plan involves having `rethinkdb.table_config` refer to servers by name. If we don't automatically resolve name collisions, we have to think about what happens if two servers have the same name and that name appears in `rethinkdb.table_config`.\r\n\r\n* We're gonna expose both UUIDs and names; the only question is which one is primary key. Whichever one is not chosen as primary key will have a secondary index on it.\r\n\r\n* I believe that we should allow `.get()` on a secondary index. If multiple rows are found, it should produce an error. So it will be reasonably convenient to find rows by both name and UUID regardless of which is the primary key.\r\n\r\n* If we use UUID as the primary key, we can let people rename tables by writing to the `name` field.\r\n\r\n* When people write automated tools to manage their cluster, they will want to use UUIDs internally.\r\n\r\n* People are already used to the idea of having autogenerated UUIDs as primary keys for documents."
  , issueState = "closed"
  , issueId = Id 40006033
  , issueComments = 18
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }