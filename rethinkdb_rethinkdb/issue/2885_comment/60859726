IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-29) 01 : 21 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60859726"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2885#issuecomment-60859726"
  , issueCommentCreatedAt = 2014 (-10) (-29) 01 : 19 : 28 UTC
  , issueCommentBody =
      "@timmaxw and I talked about this more offline.\r\n- We removed a few entries that were not obviously useful. Those will still be available in a debug table.\r\n- We renamed some stats.\r\n- We restructured the reads and writes per second. One problem that came up was that if we only report written documents per server/table pair, there is no reliable way for computing the writes per table without counting duplicates if the table is replicated. There now is a new per table document that lists the reads/writes per table (in contrast to per table/server pair). For consistency and simplicity of use we also added the reads/writes to the per-server document, and added another single document that lists the total reads/writes in the cluster (like what you see on the Dashboard of the web UI).\r\n- The primary key is now an array starting with the string \"cluster\"|\"server\"|\"table\"|\"table_server\", followed by the UUID of the corresponding server and/or table.\r\n\r\n\r\nHere's the new proposal:\r\n__one globally__\r\n```\r\n{\r\n  id: [\"cluster\"],\r\n  query_engine: {\r\n    queries_per_sec: <NUMBER>,\r\n    read_docs_per_sec: <NUMBER>,\r\n    written_docs_per_sec: <NUMBER>\r\n  }\r\n}\r\n```\r\n\r\n__one per server__\r\n```\r\n{\r\n  id: [\"server\", <UUID>],\r\n  server_id: <UUID>,\r\n  server_name: <STRING>,\r\n  query_engine: {\r\n    queries_per_sec: <NUMBER>,\r\n    queries_total: <NUMBER>,\r\n    read_docs_per_sec: <NUMBER>,\r\n    read_docs_total: <NUMBER>,\r\n    written_docs_per_sec: <NUMBER>,\r\n    written_docs_total: <NUMBER>,\r\n    client_connections: <NUMBER>\r\n  },\r\n}\r\n```\r\n\r\n__one per table__\r\n```\r\n{\r\n  id: [\"table\", <UUID>],\r\n  table_id: <UUID>,\r\n  db_id: <UUID>,\r\n  db_name: <STRING>,\r\n  table_name: <STRING>,\r\n  \r\n  query_engine: {\r\n    read_docs_per_sec: <NUMBER>,\r\n    written_docs_per_sec: <NUMBER>\r\n  }\r\n}\r\n```\r\n\r\n__one per table/server pair__\r\n```\r\n{\r\n  id: [\"table_server\", <UUID>, <UUID>]  // table_id, server_id\r\n  server_id: <UUID>,\r\n  server_name: <STRING>,\r\n  table_id: <UUID>,\r\n  db_id: <UUID>,\r\n  db_name: <STRING>,\r\n  table_name: <STRING>,\r\n  \r\n  query_engine: {\r\n    read_docs_per_sec: <NUMBER>,\r\n    read_docs_total: <NUMBER>,\r\n    written_docs_per_sec: <NUMBER>,\r\n    written_docs_total: <NUMBER>\r\n  },\r\n  storage_engine: {\r\n      cache: {\r\n        in_use_bytes: <NUMBER>              // Should be straight forward to add\r\n      },\r\n      disk: {\r\n        read_bytes_per_sec: <NUMBER>,       // currently serializer_block_reads, must be modified to report bytes\r\n        read_bytes_total: <NUMBER>,\r\n        written_bytes_per_sec: <NUMBER>,    // currently serializer_block_writes, must be modified to report bytes\r\n        written_bytes_total: <NUMBER>,\r\n        space_usage: {\r\n          metadata_bytes: <NUMBER>,         // currently serializer_lba_extents, multiply by extent size (ideally also count metablock)\r\n          data_bytes: <NUMBER>,             // approximate as follows: take serializer_data_extents, multiply by extent size, subtract serializer_old_garbage_block_bytes\r\n          garbage_bytes: <NUMBER>,          // currently serializer_old_garbage_block_bytes\r\n          preallocated_bytes: <NUMBER>      // should be: actual file size minus the three other fields  \r\n        }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\n__for timed out servers__\r\n```\r\n{\r\n  id: [\"server\", <UUID>]\r\n  server_id: <UUID>,\r\n  server_name: <STRING>,\r\n  error: \"Timed out. Unable to retrieve stats.\"\r\n}\r\n```\r\n\r\n@coffeemug does this look ok to you?\r\n\r\n(Edit: Updated the one per server document structure)"
  , issueCommentId = 60859726
  }