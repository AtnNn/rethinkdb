IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-28) 19 : 10 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60813750"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2885#issuecomment-60813750"
  , issueCommentCreatedAt = 2014 (-10) (-28) 19 : 10 : 54 UTC
  , issueCommentBody =
      "Here's a proposal adapted from @Tryneus earlier one. It describes the entries in a unified `stats` table:\r\n\r\n__one per server__\r\n```js\r\n{\r\n  server_id: <UUID>,\r\n  server_name: <STRING>,\r\n  coroutines: {\r\n    active: <NUMBER>,\r\n    allocated: <NUMBER>\r\n  },\r\n  query_server: {\r\n    queries_per_sec: <NUMBER>,\r\n    queries_total: <NUMBER>,\r\n    queries_active: <NUMBER>\r\n  },\r\n  network: {\r\n    intracluster: {\r\n      sent_bytes_per_sec: <NUMBER>,\r\n      sent_bytes_total: <NUMBER>,\r\n      received_bytes_per_sec: <NUMBER>,\r\n      received_bytes_total: <NUMBER>,\r\n      open_connections: <NUMBER>\r\n    },\r\n    clients: {\r\n      sent_bytes_per_sec: <NUMBER>,\r\n      sent_bytes_total: <NUMBER>,\r\n      received_bytes_per_sec: <NUMBER>,\r\n      received_bytes_total: <NUMBER>,\r\n      open_connections: <NUMBER>\r\n    }\r\n  },\r\n  started_at: <TIME>\r\n}\r\n```\r\n\r\n__one per table/server pair__\r\n```js\r\n{\r\n  server_id: <UUID>,\r\n  server_name: <STRING>,\r\n  table_id: <UUID>,\r\n  db_name: <STRING>,\r\n  table_name: <STRING>,\r\n  indexes: {\r\n    <name>: {\r\n      reads_per_sec: <NUMBER>\r\n      reads_total: <NUMBER>\r\n      writes_per_sec: <NUMBER>\r\n      writes_total: <NUMBER>\r\n    },\r\n    ...\r\n  },\r\n  disk: {\r\n    read_bytes_per_sec: <NUMBER>,       // currently serializer_block_reads, must be modified to report bytes\r\n    read_bytes_total: <NUMBER>,\r\n    written_bytes_per_sec: <NUMBER>,    // currently serializer_block_writes, must be modified to report bytes\r\n    written_bytes_total: <NUMBER>,\r\n    commits_per_sec: <NUMBER>,          // currently serializer_index_writes\r\n    commits_total: <NUMBER>,\r\n    space_usage: {\r\n      lba_bytes: <NUMBER>,              // currently serializer_lba_extents, multiply by extent size\r\n      data_bytes: <NUMBER>,             // approximate as follows: take serializer_data_extents, multiply by extent size, subtract serializer_old_garbage_block_bytes\r\n      garbage_bytes: <NUMBER>           // currently serializer_old_garbage_block_bytes\r\n    }\r\n  },\r\n  cache: {\r\n    in_use_bytes: <NUMBER>              // Should be straight forward to add\r\n  }\r\n}\r\n```\r\n__one per server that timed out__\r\n```js\r\n{\r\n    server_id: <UUID>,\r\n    server_name: <STRING>,\r\n    error: \"Timed out. Unable to retrieve stats.\"\r\n}\r\n```\r\n\r\nAll stats have totals, and I think this is ok because they are all reported per server. I've included the `started_at` to the server stat so you can find out if a server has been restarted.\r\n\r\nMost of the stats correspond directly to existing perfmons which should make the implementation relatively easy. The exceptions are the cache.in_use_bytes perfmon and the network.*.open_connections one. I think both of them are very useful, and probably worth adding.\r\n\r\n@wojons you also asked about the GC stats. I've omitted them for now, because I think we should improve them first. For example we have a stat that has the number of extents GCed by the data GC, but we don't know how much of those extents was actually garbage. So that makes it confusing. Instead we should first implement some more meaningful stats such as gc_bytes_reclaimed.\r\nRunning GC processes will be listed in the `jobs` table (see https://github.com/rethinkdb/rethinkdb/issues/3115 ), so you can check that if you want to find out what's going on at the moment (though there's no running total, sorry).\r\n\r\nRemarks? Suggestions? Things that are missing which we absolutely need in the first version?"
  , issueCommentId = 60813750
  }