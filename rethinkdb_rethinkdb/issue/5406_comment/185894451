IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-18) 20 : 07 : 27 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/185894451"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5406#issuecomment-185894451"
  , issueCommentCreatedAt = 2016 (-02) (-18) 20 : 07 : 27 UTC
  , issueCommentBody =
      "I think a protocol version would be better than capabilities.\r\n\r\nCapabilities make sense when you have an extremely complicated ecosystem with multiple providers that have wildly different feature sets (e.g. C++ compilers).  They also make sense when it's reasonable for a client to only support a subset of functionality.  Neither of those are really true here.\r\n\r\nIn this case I think they'd add extra complexity for not much gain, and everyone who wrote a client would have to think about what their capabilities are, instead of just coding exactly to a protocol spec and specifying that they follow that protocol.\r\n\r\nI suppose now that we offer encryption it mightmake sense to let clients specify what encryption algorithms they support or something, so it might make sense to have a capabilities array for something like that, but if we do that I think it should exist in addition to a protocol version."
  , issueCommentId = 185894451
  }