IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-18) 00 : 28 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 762554
        , simpleUserLogin = N "ckmaresca"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/762554?v=3"
        , simpleUserUrl = "https://api.github.com/users/ckmaresca"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/32668713"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1877#issuecomment-32668713"
  , issueCommentCreatedAt = 2014 (-01) (-18) 00 : 28 : 23 UTC
  , issueCommentBody =
      "Just to elaborate on the use case.  The scenario here is that we have a large number of queries started from a web page that take time to process.  To make this work properly, we send the queries to background processes (using Resque) with a callback to a JSON <-> RQL proxy to be executed when the background process finishes.\r\n\r\nAll of the callbacks execute independently, but all the data needs to accumulate inside a single record.  This record has a header identifying it (`metaData` in the example above) which is separate from the data itself (contained in `results`).  Until a process completes, there is no record in Rethink, so the first process to finish should trigger the creation of a record and each subsequent process should append to the `results` array."
  , issueCommentId = 32668713
  }