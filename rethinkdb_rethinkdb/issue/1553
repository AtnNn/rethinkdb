Issue
  { issueClosedAt = Just 2013 (-10) (-18) 04 : 01 : 18 UTC
  , issueUpdatedAt = 2013 (-10) (-22) 20 : 36 : 05 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1553/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1553"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 1553
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "\"Assertion failed: [state == EMPTY]\" when interrupting r.js"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1553"
  , issueCreatedAt = 2013 (-10) (-17) 23 : 12 : 48 UTC
  , issueBody =
      Just
        "I ran the following about 10 times within 3 seconds or so (Ruby):\n\n```\nr.js('while(true);', :timeout=>5).run(:noreply=>true)\n$c.reconnect()\n```\n\nIt triggered the following server crash:\n\n```\nerror: Error in ./src/containers/object_buffer.hpp at line 41:\nerror: Assertion failed: [state == EMPTY] \nerror: Backtrace:\nerror: Thu Oct 17 16:06:42 2013\n\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:150\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\n       3: format_backtrace(bool) at backtrace.cc:197\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:68\n       5: _ZN15object_buffer_tI15socket_stream_tE6createIJiP12fd_watcher_tEEEPS0_DpRKT_+0x4e at object_buffer.hpp:41\n       6: extproc_worker_t::acquired(signal_t*) at extproc_worker.cc:59\n       7: extproc_job_t::extproc_job_t(extproc_pool_t*, bool (*)(read_stream_t*, write_stream_t*), signal_t*) at extproc_job.cc:20\n       8: js_job_t::js_job_t(extproc_pool_t*, signal_t*) at js_job.cc:87\n       9: js_runner_t::job_data_t::job_data_t(extproc_pool_t*, signal_t*) at js_runner.cc:50\n       10: js_runner_t::job_data_t::job_data_t(extproc_pool_t*, signal_t*) at js_runner.cc:51\n       11: js_runner_t::begin(extproc_pool_t*, signal_t*) at js_runner.cc:100\n       12: ql::env_t::get_js_runner() at env.cc:125\n       13: ql::javascript_term_t::eval_impl(ql::scope_env_t*, ql::eval_flags_t) at js.cc:40\n       14: ql::term_t::eval(ql::scope_env_t*, ql::eval_flags_t) at term.cc:368\n       15: ql::run(ql::protob_t<Query>, scoped_ptr_t<ql::env_t>&&, Response*, ql::stream_cache2_t*, bool*) at term.cc:244\n       16: query2_server_t::handle(ql::protob_t<Query>, Response*, query2_server_t::context_t*) at pb_server.cc:59\n       17: boost::_mfi::mf3<bool, query2_server_t, ql::protob_t<Query>, Response*, query2_server_t::context_t*>::operator()(query2_server_t*, ql::protob_t<Query>, Response*, query2_server_t::context_t*) const at mem_fn_template.hpp:393\n       18: bool boost::_bi::list4<boost::_bi::value<query2_server_t*>, boost::arg<1>, boost::arg<2>, boost::arg<3> >::operator()<bool, boost::_mfi::mf3<bool, query2_server_t, ql::protob_t<Query>, Response*, query2_server_t::context_t*>, boost::_bi::list3<ql::protob_t<Query>&, Response*&, query2_server_t::context_t*&> >(boost::_bi::type<bool>, boost::_mfi::mf3<bool, query2_server_t, ql::protob_t<Query>, Response*, query2_server_t::context_t*>&, boost::_bi::list3<ql::protob_t<Query>&, Response*&, query2_server_t::context_t*&>&, long) at bind.hpp:447\n       19: bool boost::_bi::bind_t<bool, boost::_mfi::mf3<bool, query2_server_t, ql::protob_t<Query>, Response*, query2_server_t::context_t*>, boost::_bi::list4<boost::_bi::value<query2_server_t*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >::operator()<ql::protob_t<Query>, Response*, query2_server_t::context_t*>(ql::protob_t<Query>&, Response*&, query2_server_t::context_t*&) at bind_template.hpp:116\n       20: boost::detail::function::function_obj_invoker3<boost::_bi::bind_t<bool, boost::_mfi::mf3<bool, query2_server_t, ql::protob_t<Query>, Response*, query2_server_t::context_t*>, boost::_bi::list4<boost::_bi::value<query2_server_t*>, boost::arg<1>, boost::arg<2>, boost::arg<3> > >, bool, ql::protob_t<Query>, Response*, query2_server_t::context_t*>::invoke(boost::detail::function::function_buffer&, ql::protob_t<Query>, Response*, query2_server_t::context_t*) at function_template.hpp:132\n       21: boost::function3<bool, ql::protob_t<Query>, Response*, query2_server_t::context_t*>::operator()(ql::protob_t<Query>, Response*, query2_server_t::context_t*) const at function_template.hpp:759\n       22: protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.tcc:206\n       23: boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>::operator()(protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at mem_fn_template.hpp:280\n       24: void boost::_bi::list3<boost::_bi::value<protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list1<scoped_ptr_t<linux_tcp_conn_descriptor_t>&> >(boost::_bi::type<void>, boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>&, boost::_bi::list1<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&, int) at bind.hpp:392\n       25: void boost::_bi::bind_t<void, boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t> >(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at bind_template.hpp:32\n       26: boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf2<void, protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<protob_server_t<ql::protob_t<Query>, Response, query2_server_t::context_t>*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > >, void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&>::invoke(boost::detail::function::function_buffer&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at function_template.hpp:154\n       27: boost::function1<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at function_template.hpp:759\n       28: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:799\n       29: boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at mem_fn_template.hpp:165\n       30: void boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> >::operator()<boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>&, boost::_bi::list0&, int) at bind.hpp:314\n       31: boost::_bi::bind_t<void, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> > >::operator()() at bind_template.hpp:20\n       32: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> > > >::run_action() at callable_action.hpp:28\n       33: callable_action_wrapper_t::run() at runtime_utils.cc:67\n       34: coro_t::run() at coroutines.cc:178\nerror: Exiting.\n```\n\nBefore I had another crash in release mode and got a different message:\n\n```\nerror: Error in src/extproc/extproc_worker.cc at line 63:\nerror: Guarantee failed: [interruptor == __null] \n```\n"
  , issueState = "closed"
  , issueId = Id 21191692
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 51
          , milestoneClosedIssues = 14
          , milestoneDescription = Nothing
          , milestoneTitle = "1.10.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/51"
          , milestoneCreatedAt = 2013 (-10) (-22) 20 : 34 : 54 UTC
          , milestoneState = "closed"
          }
  }