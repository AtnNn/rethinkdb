IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-16) 02 : 49 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/164969318"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3736#issuecomment-164969318"
  , issueCommentCreatedAt = 2015 (-12) (-16) 02 : 49 : 54 UTC
  , issueCommentBody =
      "I think having the base first and function second would be nicer too. What about the order of the arguments to the function?\r\n\r\nThe type of `foldl` in Haskell places the accumulator first, which produce a nice symmetry in the order or arguments: `(b -> a -> b) -> (b -> [a] -> b)`.\r\n\r\nTo get a similar symmetry in ReQL, the order of the arguments would have to be like in Erlang: `els.fold(acc0){ |el acc| ... }`"
  , issueCommentId = 164969318
  }