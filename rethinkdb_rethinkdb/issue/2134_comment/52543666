IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-18) 19 : 39 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52543666"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2134#issuecomment-52543666"
  , issueCommentCreatedAt = 2014 (-08) (-18) 19 : 39 : 43 UTC
  , issueCommentBody =
      ":+1: Sounds solid.\r\n\r\nCould we avoid having to add timestamps to the main btree if we instead introduced a guarantee that all writes update the secondary index even if it's still in post construction?\r\n\r\nIn that case we could detect values that fall into the new{t0} category simply by the fact that they already have an entry (possibly a deletion entry) in the secondary index tree when post construction gets to them. Post construction would tag *all* pairs it inserts into the secondary index as old, and every sindex update caused by a regular write would be one of the three possible new{t0} entries."
  , issueCommentId = 52543666
  }