IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-18) 20 : 54 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52553520"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2134#issuecomment-52553520"
  , issueCommentCreatedAt = 2014 (-08) (-18) 20 : 54 : 04 UTC
  , issueCommentBody =
      "> Sure, but we could keep timestamp deprecation and could leave the main btree format unchanged. Not sure how much that would save in terms of implementation costs.\r\n\r\nIf we did that, then if there's an active write workload the secondary index would need arbitrarily many deletion entries, instead of a number bounded by the size of the main b-tree.  Unless post-construction exposed information about what it was currently looking at and we decided to get real clever about not leaving deletion entries most of the time."
  , issueCommentId = 52553520
  }