IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-08) 19 : 05 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/66167514"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3422#issuecomment-66167514"
  , issueCommentCreatedAt = 2014 (-12) (-08) 19 : 05 : 07 UTC
  , issueCommentBody =
      "Hi @joaojeronimo,\r\na few questions ahead:\r\n* Do your servers have SSDs or rotational hard disks?\r\n* How much RAM do they have?\r\n* Have you configured RethinkDB's cache size? It picks a bit less than half of the available RAM on startup automatically if you haven't, but that's not always reliable. You can find the value that it actually selected in the server log (it should say \"Using cache size of ... MB\").\r\n\r\nI think it's pretty likely that one way or another the slowdown is caused by your data set going out of memory, so most of the writes now require reading from disk first.\r\n\r\nThat also explains the slow table scans (`count()` etc.). A 10ms delay for a `get()` is pretty much expected if your data is on hard disks. That's approximately the time for a random disk seek. If you're on an SSD something else might be going on and this would require more investigation.\r\n\r\nA tip regarding the timeouts on `count(), `sum()` etc.: The timeouts you have been seeing are actually generated by the Data Explorer, not the server. If you use a different client (Python, Ruby, node.js, or one of the third-party ones), you should be able to run those queries successfully. Though especially on rotational drives they are definitely going to be slow. That is partially due to the fact that RethinkDB optimizes its on-disk format primarily for SSDs, not for rotational drives like some conventional DBMS do."
  , issueCommentId = 66167514
  }