Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2014 (-09) (-05) 18 : 57 : 28 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/329/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/329"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 329
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Introduce ReQL logging facility"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/329"
  , issueCreatedAt = 2013 (-02) (-13) 22 : 54 : 29 UTC
  , issueBody =
      Just
        "One of the big problems in building up and debugging large ReQL queries is that it's often difficult to determine what things look like in intermediary steps. It feels like if only we could say `r.log(...)`, things would be so much easier, but rethink doesn't allow that.\n\nI don't have good ideas for _how_ to introduce logging, but we should think about what we can do to make people's lives easier. One idea I had is to allow wrapping any ReQL command in an `r.log` command, which would print all input to the command (on the parser server console, or return it back to the client). E.g.:\n\n```\ntable.log(filter(...))\n```\n\nWould print all inputs to `filter`.\n\nThis is a precursor to a reql debugger, but that's a whole other conversation.\n"
  , issueState = "open"
  , issueId = Id 10976437
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }