IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-04) 01 : 51 : 28 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/17426101"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/718#issuecomment-17426101"
  , issueCommentCreatedAt = 2013 (-05) (-04) 01 : 51 : 28 UTC
  , issueCommentBody =
      "So if its only the default database can't we ignore that for now too since\r\nany query that uses that is also non deterministic?\r\nOn May 3, 2013 6:35 PM, \"Michael Lucy\" <notifications@github.com> wrote:\r\n\r\n> After thinking about this for a second, I'm becoming more hesitant to\r\n> simply ban variable access. We would also need to ban access to any global\r\n> optional arguments in the query, and those are much harder to search the\r\n> query for programatically. (Currently the only one in active use is the\r\n> default database, but we could well add more in the future.)\r\n>\r\n> Just running the query isn't good enough either because it might try to\r\n> access something it's missing in a branch.\r\n>\r\n> I think that if we can we should try to store the global optional\r\n> arguments and scope present at the time the function is evaluated.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/718#issuecomment-17425923>\r\n> .\r\n>"
  , issueCommentId = 17426101
  }