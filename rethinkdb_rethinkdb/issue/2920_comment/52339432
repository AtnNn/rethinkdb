IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-15) 18 : 11 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52339432"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2920#issuecomment-52339432"
  , issueCommentCreatedAt = 2014 (-08) (-15) 18 : 11 : 58 UTC
  , issueCommentBody =
      "This sounds fragile, because if a single query invokes `r.uuid()` multiple times, we would have to make sure that they got the same values on each replica. One way to do this is to ensure that queries are always evaluated in a deterministic order; but this interacts badly with parallel traversals. Another option is to hash the context in which the term is being evaluated (backtrace, values of local variables, etc.) and mix that with the random seed. But both options are easy to screw up."
  , issueCommentId = 52339432
  }