IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-20) 18 : 58 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18165545"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/846#issuecomment-18165545"
  , issueCommentCreatedAt = 2013 (-05) (-20) 18 : 58 : 39 UTC
  , issueCommentBody =
      "We currently do not implement the event emitter interface anywhere in the JS driver. It would not be very hard to add to the connection object though.\r\n\r\nWe had a suggestion once before to replace `.run(callback)` with an optional callback argument to each API function like so `table.insert(...).run(callback) => table.insert(..., callback)`. I ended up deciding against it because I thought chaining `.run` was more clear. While it possibly makes more sense for write queries I'd rather not fragment the API. Additionally, write queries do return objects which can be further manipulated in the query, allowing you to say, conditionally insert data into a second table based on the outcome of another insert.\r\n\r\nThanks for your input @fuwaneko. I'll be happy to implement anything we agree on here but if you want fast results feel free to fork the driver. We happily accept pull requests."
  , issueCommentId = 18165545
  }