IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-20) 11 : 44 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18143359"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/846#issuecomment-18143359"
  , issueCommentCreatedAt = 2013 (-05) (-20) 11 : 44 : 07 UTC
  , issueCommentBody =
      "Many of our users find that opening a connection per request works well and doesn't degrade performance. Eventually, we'll add a connection pooling API, but for now connection-per-request seems to work really well.\r\n\r\nWe'll look into JugglingDB -- thanks. What sort of API would you like for insert/update? E.g. `r.table(t).insert_exec(...)` or `r.table(t).update_exec(...)`. We could do that, but that doesn't look much better than chaining `.run()`. I think if we add a Mongoose/JugglignDB backend, that would probably be sufficient. "
  , issueCommentId = 18143359
  }