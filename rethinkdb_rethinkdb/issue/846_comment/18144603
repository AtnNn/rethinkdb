IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-20) 12 : 22 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 34433
        , simpleUserLogin = N "fuwaneko"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/34433?v=3"
        , simpleUserUrl = "https://api.github.com/users/fuwaneko"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18144603"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/846#issuecomment-18144603"
  , issueCommentCreatedAt = 2013 (-05) (-20) 12 : 22 : 30 UTC
  , issueCommentBody =
      "> Many of our users find that opening a connection per request works well and doesn't degrade performance. Eventually, we'll add a connection pooling API, but for now connection-per-request seems to work really well.\r\n\r\nThanks, I'll see how well it works. I think that implementing JugglingDB backend will solve this.\r\n\r\n> What sort of API would you like for insert/update\r\n\r\nLike I said, instead of doing update(param).run(callback) it would be nice to just do update(param, callback). But yeah, JugglingDB will solve this too.\r\n\r\nI'll see what I can do with JugglingDB. I'll keep you informed on my progress. Thanks for answers!"
  , issueCommentId = 18144603
  }