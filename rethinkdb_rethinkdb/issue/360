Issue
  { issueClosedAt = Just 2015 (-09) (-29) 17 : 57 : 55 UTC
  , issueUpdatedAt = 2015 (-09) (-29) 17 : 57 : 58 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/360/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/360"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      ]
  , issueNumber = 360
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 440336
        , simpleUserLogin = N "christopherhesse"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/440336?v=3"
        , simpleUserUrl = "https://api.github.com/users/christopherhesse"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Creation and deletion of tables slows down over time"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/360"
  , issueCreatedAt = 2013 (-02) (-18) 02 : 38 : 03 UTC
  , issueBody =
      Just
        "This seems unlikely to occur in practice, but I noticed it slowing down my tests.  Running rethinkdb 1.3.2-fallback (CLANG 4.1 ((tags/Apple/clang-421.11.65))) on Mac OS X, when you create and delete tables over and over, the creation/deletion queries slow down over time.  Non-meta queries appear to be unaffected.\r\n\r\nI mentioned this to Joe D, and while he thinks it is an unlikely thing for a customer to run across, it may still be an issue worth tracking.\r\n\r\nHere's a script to reproduce it:\r\n\r\n    import time\r\n\r\n    import rethinkdb as r\r\n\r\n    r.connect()\r\n\r\n    i = 0\r\n    while True:\r\n        start_time = time.time()\r\n        r.db(\"test\").table_create(\"example\").run()\r\n        r.db(\"test\").table_drop(\"example\").run()\r\n        end_time = time.time()\r\n        print i, \"elapsed:\", end_time - start_time\r\n        i += 1\r\n\r\nThe first loop takes ~30ms, the 2000th loop,  ~140ms.  The 'metadata' file goes from 2MB to 8MB in the same time.  My tests drop and create tables frequently, so they would tend to slow down from 20 seconds to 100 seconds over the course of a number of runs."
  , issueState = "closed"
  , issueId = Id 11101532
  , issueComments = 13
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 64
          , milestoneClosedIssues = 228
          , milestoneDescription =
              Just
                "These issues are no longer relevant to the current version of RethinkDB"
          , milestoneTitle = "outdated"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/64"
          , milestoneCreatedAt = 2014 (-03) (-28) 00 : 17 : 40 UTC
          , milestoneState = "closed"
          }
  }