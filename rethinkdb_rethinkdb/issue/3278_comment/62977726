IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-13) 22 : 23 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/62977726"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3278#issuecomment-62977726"
  , issueCommentCreatedAt = 2014 (-11) (-13) 22 : 23 : 42 UTC
  , issueCommentBody =
      "@Tryneus that is one of the use cases.\r\n\r\nThe other one is to wait for a table to come back up after a server has temporarily become unavailable without having to poll all the time until your query gets through.\r\nI realize that you still have to use a loop to try multiple times, since there's no guarantee that another query after a `table_wait()` still succeeds.\r\nThis use case also still works ok if `table_wait()` returns success if a server fails in the middle of its execution (it will cause one additional failed attempt at running the query, but who cares).\r\n\r\nIt just feels wrong for the command to say that the table is ready even though it actually has just determined that the opposite is the case.\r\nCouldn't we generate a ReQL error if the wait times out?"
  , issueCommentId = 62977726
  }