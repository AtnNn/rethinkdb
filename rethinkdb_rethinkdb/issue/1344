Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2013 (-08) (-28) 06 : 29 : 19 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1344/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1344"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 1344
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 181337
        , simpleUserLogin = N "pixelspark"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/181337?v=3"
        , simpleUserUrl = "https://api.github.com/users/pixelspark"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Add support for sampled querying based on user-defined time/error constraints"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1344"
  , issueCreatedAt = 2013 (-08) (-22) 05 : 23 : 48 UTC
  , issueBody =
      Just
        "One way to improve a database's performance is to reduce the volume of data that is being read and processed at all for a particular query. A way of doing this is to allow the user to specify the required statistical boundaries for the results, and use the smallest sample possible for answering the query.\r\n\r\nIn BlinkDB (which runs atop of Hive, Shark and Spark) it is possible to specify a time (WITHIN 2 SECONDS) or error constraint (ERROR 0.1 CONFIDENCE 95%). When used, BlinkDB will automatically run the query on a sample so that the constraints are met, and will return confidence intervals for aggregations. For more information, see http://blinkdb.org/index.html#Examples.\r\n\r\nAlthough this is a long shot and probably would need a lot of refactoring, it would still be nice if this sort of think would become possible in the future. I guess syntax could be something like r.db('foo').table('transactions').filter({category: \"Vegetables\"}).groupBy('product', r.avg).bounded({time: 2, confidence: 0.95, error: 0.1})"
  , issueState = "open"
  , issueId = Id 18395384
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }