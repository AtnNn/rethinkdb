IssueComment
  { issueCommentUpdatedAt = 2016 (-10) (-14) 20 : 26 : 08 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/253910591"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/6125#issuecomment-253910591"
  , issueCommentCreatedAt = 2016 (-10) (-14) 20 : 26 : 08 UTC
  , issueCommentBody =
      "Yeah it's a regression in `next`. `r.now` should work because it's replaced by a constant on the parsing node. It's like @srh says.\r\n\r\nThe change to make `r.now` no longer be a rewrite in the AST was to allow it to be included in the new write hook functions.\r\n`r.now` should be deterministic, so we should overwrite `is_deterministic()` on it and make it return `true`. However we also decided that we wanted to disallow it in secondary index functions (and this is critical for correctness, because `r.now` determinism depends on the ReQL context which is not persisted for secondary index evaluation). I don't remember how exactly we thought we would ensure this. Maybe @nighelles remembers?\r\nWe will likely need to add another attribute to determine whether a term can be used in secondary indexes. It could default to forwarding `is_deterministic()`, but could be overwritten for `r.now()`."
  , issueCommentId = 253910591
  }