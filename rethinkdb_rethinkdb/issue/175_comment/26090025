IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-10) 20 : 44 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/26090025"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/175#issuecomment-26090025"
  , issueCommentCreatedAt = 2013 (-10) (-10) 20 : 44 : 40 UTC
  , issueCommentBody =
      "I'm gonna split responses up over a bunch of posts here just so I'm trying to wrangle a huge response.\r\n\r\n> What is a \"subtask\"? Is it basically a subquery or is there a broader definition?\r\n\r\nA bit broader (although I'm not sure I have the most precise definition of a subquery). A subtask is a task whose duration duration is consider part of the other task. So taking the simple query: `r.expr(1) + r.expr(1)` you might get a profile like:\r\n\r\n```Python\r\n{\r\n    \"description\" : \"add\",\r\n    \"duration(ms)\": 1,\r\n    \"sub_tasks\" : [\r\n        {\r\n            \"description\" : \"expr\"\r\n            \"duration(ms)\" : .2\r\n        },\r\n        {\r\n            \"description\" : \"expr\"\r\n            \"duration(ms)\" : .1\r\n         }\r\n    ]\r\n}       \r\n```\r\n\r\nThink of it just like how most profiling tools will annotate function calls. Except when things go over the network they automatically send back their profiling information."
  , issueCommentId = 26090025
  }