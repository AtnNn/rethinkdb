IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-10) 18 : 45 : 16 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/26079883"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/175#issuecomment-26079883"
  , issueCommentCreatedAt = 2013 (-10) (-10) 18 : 43 : 50 UTC
  , issueCommentBody =
      "Wow, that's *awesome*.\r\n\r\nI strongly agree with merging this without even working on the front-end part. I think we should merge this in, use it for a bit (ourselves and with other people), learn how this turns out to work, what's useful and what isn't, may be tweak the API/information a bit, and only add the front-end visualization later. The `profile` command and the visualization for it seem like two separate killer features, not one killer feature.\r\n\r\nOn the API:\r\n\r\n* I like the name `profile` and the optarg to run. It feels right.\r\n* What is a \"subtask\"? Is it basically a subquery or is there a broader definition?\r\n* What is a step? If I have N steps, does that mean that data went back to the machine in question N times?\r\n* I think the API should include a bit more metadata. At least a node id for each task, and table name. Without that it would be really hard to tell what's going on.\r\n* I think in addition to a description we should include a \"type\" of a task, to make checking this programmatically easier (I'd imagine it would be an identifier string like \"READ\"). Actually the whole thing should be programmatically accessible in general -- I shouldn't have to parse the description to determine which shard the task is on. It should be metadata IMO.\r\n\r\nI think it would be really cool to get an internal MVP of this working and post real output from an example query. It would probably make feedback much more constructive, since it's a bit hard to go off a pseudocode example."
  , issueCommentId = 26079883
  }