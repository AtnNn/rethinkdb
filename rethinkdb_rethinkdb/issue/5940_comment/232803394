IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-14) 21 : 51 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/232803394"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5940#issuecomment-232803394"
  , issueCommentCreatedAt = 2016 (-07) (-14) 21 : 51 : 47 UTC
  , issueCommentBody =
      "Looking at [the first one](https://github.com/rethinkdb/rethinkdb/blob/next/test/rql_test/src/mutation/insert.yaml#L183) there is no problem with `true != True` since we have [a line](https://github.com/rethinkdb/rethinkdb/blob/next/test/rql_test/drivers/driver.py/#L183) in the polygon driver (grr) that takes care of that. The reason that one is passing in Python is because we set the expected value to `partial({'changes':[]})`, so we are only looking for a `dict` that has a value `changes`. And the output is:\r\n\r\n`{u'first_error': u'Duplicate primary key `id`:\\n{\\n\\t\"id\":\\t101,\\n\\t\"ordered-num\":\\t1\\n}\\n{\\n\\t\"id\":\\t101,\\n\\t\"ordered-num\":\\t1\\n}', u'errors': 99, u'deleted': 0, u'changes': [], u'unchanged': 0, u'skipped': 0, u'replaced': 0, u'inserted': 0}`\r\n\r\nSince that has that value, we pass... very much not what the test writer was expecting I am sure, but not a general problem in our testing system.\r\n\r\n@nighelles those lines have your name on them, can you rethink them a bit (yes... I am on a roll)."
  , issueCommentId = 232803394
  }