IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-14) 23 : 28 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/14935596"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/468#issuecomment-14935596"
  , issueCommentCreatedAt = 2013 (-03) (-14) 23 : 25 : 16 UTC
  , issueCommentBody =
      "I'll leave this to the driver implementors, but I'm of the opinion that taking a standard, well understood error (such as a connection refused error on the network) and rethrowing it wrapped in a custom error\r\n\r\n* servers no useful purpose\r\n* adds unnecessary wrapper boiler plate to the codebase\r\n* wastes precious developer time\r\n* wastes precious user time (by forcing them to relearn the same exception they already understand fifty times for fifty different libraries and obfuscating the real cause of the error)\r\n* encourages java-esque, eclispsian, j2ee-ish nightmare of a coding style\r\n* discourages clean, pleasant, sensible, and pragmatic unix-like codebase style bliss\r\n* generally awards an extra point to Camp Lucifer\r\n\r\nTL;DR: Concrete is better than abstract. I'd rather catch a file_not_found_error than an EclipseUniformResourceLocationCannotBeReachedError."
  , issueCommentId = 14935596
  }