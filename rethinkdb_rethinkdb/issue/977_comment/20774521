IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-10) 21 : 24 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20774521"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/977#issuecomment-20774521"
  , issueCommentCreatedAt = 2013 (-07) (-10) 21 : 24 : 54 UTC
  , issueCommentBody =
      "> * Comparisons\r\n>   - `time {</<=/>/>=/==/!=} time => bool`\r\n>   - `duration {</<=/>/>=/==/!=} duration => bool`\r\n\r\nThe hidden proposal here is that `__reql_type__` types can have their own notions of comparison that don't match with general object comparison.\r\n\r\nWhat happens if you compare a time with a general object?  What happens if you compare it with a string or number?  We need to define this behavior, and it needs to obey the transitive property -- is this described in the \"how __reql_type__ should work\" proposal?"
  , issueCommentId = 20774521
  }