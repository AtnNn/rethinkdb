IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-02) 17 : 22 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20361107"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/977#issuecomment-20361107"
  , issueCommentCreatedAt = 2013 (-07) (-02) 17 : 22 : 33 UTC
  , issueCommentBody =
      "From a backend perspective I would strongly prefer this to be of the form `{__reql_type__ : \"date\", ...}` rather than adding a native type. Since we're going to have at least a `datetime` and a `duration` type and possibly also a `date` and `time` type this is actually a big increase in the number of native types which is definitely going to make our reql code less nice. I also see no real benefit to it we can easily make the operators we want such as `<` and `-` work on such types. I really don't understand @wmrowan's concern about adding in flexibility for the different formats what are we going to be using this flexibility to do.\r\n\r\nAnother thing to consider is that if dates are represented as native datatypes then we either need a json representation of them or we can't encode rows which contain dates as json and they'll be a lot less efficient. We could of course have a json representation in addition to the native one but since that's what most drivers would be sending and receiving anyways it then seems pretty superfluous to have the native representation."
  , issueCommentId = 20361107
  }