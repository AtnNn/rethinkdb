IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-14) 03 : 33 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 77867
        , simpleUserLogin = N "spiffytech"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/77867?v=3"
        , simpleUserUrl = "https://api.github.com/users/spiffytech"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20931095"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/977#issuecomment-20931095"
  , issueCommentCreatedAt = 2013 (-07) (-14) 03 : 33 : 17 UTC
  , issueCommentBody =
      "I'm not sure ignoring seconds > 60 is necessarily ignoring leap seconds -\r\nat least the Wikipedia article on leap seconds doesn't mention the\r\npossibility of multiple leap seconds in a single minute, and their\r\ninfrequent need suggests we're unlikely to ever be that far off from solar\r\ntime. If you recognize a 60th second for ISO 8601 purposes, and you count\r\nthe 60th second in the same minute as the 59th (which I infer is the\r\ncorrect behavior, given it's attached to a specific minute), you *are\r\n*supporting leap\r\nseconds, yes?\r\n\r\nIt's something of a point of semantics, but one that should be nailed down\r\nif documentation will claim support (or lack thereof) for leap seconds.\r\n\r\n\r\nOn Sat, Jul 13, 2013 at 9:23 PM, Henrique Carvalho Alves <\r\nnotifications@github.com> wrote:\r\n\r\n> Looks solid. Just one note:\r\n>\r\n> We will treat dates ending with 60 seconds as one second after 59 seconds,\r\n> despite the drawbacks.\r\n>\r\n> What does it mean, you store leap seconds or not? One second after 59 is\r\n> 60 itself. Or did you mean treating > 59 seconds as the next minute?\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/977#issuecomment-20929984>\r\n> .\r\n>"
  , issueCommentId = 20931095
  }