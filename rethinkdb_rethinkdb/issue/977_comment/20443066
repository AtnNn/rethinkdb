IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-03) 20 : 32 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 77867
        , simpleUserLogin = N "spiffytech"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/77867?v=3"
        , simpleUserUrl = "https://api.github.com/users/spiffytech"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20443066"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/977#issuecomment-20443066"
  , issueCommentCreatedAt = 2013 (-07) (-03) 20 : 30 : 58 UTC
  , issueCommentBody =
      "I'd like to point out that @coffeemug's proposal to not store timezones on the server precludes use cases where a user would want to perform date math operations, or .weekday() etc., on a table containing timestamps from multiple locales/timezones. For the date math operations, the user would be forced to normalize/denormalize these timestamps on read/write to the DB, and would be forced to carry a separate timezone field with them anyway. \r\n\r\nWorse, however, I'm not sure there's a way to ask the database for e.g., everything that happened on a Monday local time when all timestamps are normalized to UTC. \r\n\r\nUnix time also precludes accurate representation of times with leap seconds (Unix time simply pauses while the [leap second passes](http://en.wikipedia.org/wiki/Unix_time#Encoding_time_as_a_number)), which might be important for some use cases. ISO-8601 time, on the other hand, use the 60th second to denote leap seconds. "
  , issueCommentId = 20443066
  }