IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-02) 18 : 45 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20366820"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/977#issuecomment-20366820"
  , issueCommentCreatedAt = 2013 (-07) (-02) 18 : 45 : 48 UTC
  , issueCommentBody =
      "> From a backend perspective I would strongly prefer this to be of the form `{__reql_type__ : \"date\", ...}` rather than adding a native type [...] I also see no real benefit to it\r\n\r\nOne benefit is storage efficiency. Storing a number with a few bits in front of it denoting the type is significantly more efficient than storing an object with string keys and string type description. Processing would probably be more efficient too since checking whether the datum is of a given type would likely be more efficient.\r\n\r\nIf it's actually easiest to store things in the server this way, I'm not opposed to doing it. I just think that our representation choice on the server shouldn't be constrained by clients or json because these issues are completely orthogonal. We can store things on the server in any way we want, and *always* send them to the clients via the `__reql_type__` trick.\r\n\r\n"
  , issueCommentId = 20366820
  }