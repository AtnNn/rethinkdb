IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-10) 18 : 31 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19217378"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/969#issuecomment-19217378"
  , issueCommentCreatedAt = 2013 (-06) (-10) 18 : 31 : 18 UTC
  , issueCommentBody =
      "@jdoliner -- allowing sequences to exist inside of data introduces a whole host of problems.  Off the top of my head:\r\n\r\n* How do you return them to the user?  All at once, or do you have some sort of composite cursor?  (As @neumino points out, in languages that can't block the latter solution is really clunky.)\r\n* What do you do to forbid people from accessing the data multiple times in RQL?  What if the enclosing object is stored in a variable?\r\n* What do you do if people try to compare two such objects?  Do you consume the stream so it can't be accessed again?  Or do you force the whole thing into memory?\r\n\r\n"
  , issueCommentId = 19217378
  }