IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-12) 00 : 15 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/51858283"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2888#issuecomment-51858283"
  , issueCommentCreatedAt = 2014 (-08) (-12) 00 : 15 : 58 UTC
  , issueCommentBody =
      "Copied my response to @mlucy's comment from #2853:\r\n\r\nOne issue with your first option is that currently we expose these pseudo-tables through the same interface as real tables; i.e. `r.db(\"rethinkdb\").table(\"table_config\")`. If we instead introduce a new method for getting the pseudo-table, then we lose some generality. For example, if we eventually introduce a way to access tables through HTTP, then the current system will expose the pseudo-tables too with no additional overhead. We could consider alternatives like `r.db(\"rethinkdb\").table(\"table_config_<db>\")` or `r.db(\"<db>\").table(\"$reql_table_config$\")`. (But if we do the latter, then we still have to have a `r.db(\"rethinkdb\")` because there are other pseudo-tables like `server_status`.)"
  , issueCommentId = 51858283
  }