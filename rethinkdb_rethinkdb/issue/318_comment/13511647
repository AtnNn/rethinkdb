IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-13) 19 : 13 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13511647"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/318#issuecomment-13511647"
  , issueCommentCreatedAt = 2013 (-02) (-13) 19 : 13 : 18 UTC
  , issueCommentBody =
      "`r.row['id'] > 2` is an operation that resolves to a `BOOLEAN` (which is a `DATUM`). Presently the filter operation takes a `Function(1)` and will throw a type error if any other type is given. We could change the type of filter to be polymorphic and accept either a `Function(1)` or a `BOOLEAN`. Thus `r.row['id'] > 2` would be accepted as would `True`. To support filter object syntax we could add a third type option that accepts a `OBJECT`. This would also allow terms that resolved to objects which might be cool or confusing, e.g `table.filter(r.row.merge({'a': r.row['b']}))` would match all rows where the 'a' field equaled the 'b' field."
  , issueCommentId = 13511647
  }