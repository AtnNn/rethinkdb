Issue
  { issueClosedAt = Just 2015 (-08) (-04) 16 : 51 : 15 UTC
  , issueUpdatedAt = 2015 (-08) (-04) 16 : 51 : 38 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4627/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4627"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4627
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 339696
        , simpleUserLogin = N "weshoke"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/339696?v=3"
        , simpleUserUrl = "https://api.github.com/users/weshoke"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Trapping Connection Errors"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4627"
  , issueCreatedAt = 2015 (-08) (-04) 16 : 35 : 32 UTC
  , issueBody =
      Just
        "When a connection is lost, I get a stream of these errors.  I'd like to be able to trap them and log them through my own system as opposed to having them end up on the console.  The Rethink driver has a connection.on(\"error\", ...) event.  Is there a way to do this with rethinkdbdash?\r\n\r\n```\r\nReqlDriverError: Failed to connect to localhost:28015\r\nFull error:\r\n{\r\n  \"code\": \"ECONNREFUSED\",\r\n  \"errno\": \"ECONNREFUSED\",\r\n  \"syscall\": \"connect\"\r\n}.\r\n    at Socket.<anonymous> (../node_modules/rethinkdbdash/lib/connection.js:89:12)\r\n    at Socket.g (events.js:199:16)\r\n    at Socket.emit (events.js:107:17)\r\n    at net.js:451:14\r\n    at process._tickDomainCallback (node.js:381:11)\r\nFrom previous event:\r\n    at r.connect ../node_modules/rethinkdbdash/lib/index.js:78:11)\r\n    at Pool.createConnection (../node_modules/rethinkdbdash/lib/pool.js:177:18)\r\n    at null._onTimeout (../node_modules/rethinkdbdash/lib/pool.js:279:14)\r\n    at Timer.listOnTimeout (timers.js:110:15)\r\n```\r\n"
  , issueState = "closed"
  , issueId = Id 99008755
  , issueComments = 1
  , issueMilestone = Nothing
  }