Issue
  { issueClosedAt = Just 2013 (-10) (-19) 09 : 47 : 11 UTC
  , issueUpdatedAt = 2013 (-10) (-22) 20 : 44 : 49 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/382/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/382"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:hygiene"
          , labelName = "tp:hygiene"
          }
      ]
  , issueNumber = 382
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Consider breaking `env_t` out into multiple classes when we have more time/info."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/382"
  , issueCreatedAt = 2013 (-02) (-26) 23 : 47 : 05 UTC
  , issueBody =
      Just
        "From sam:\n\nI have been thinking about what I particularly hate about this code for the past couple of hours, and have figured out that the biggest problem is as follows.\n\nYour idiom of putting public methods and private variables together in sections is not followed by other parts of RethinkDB. Our code is littered with classes that mixed public and private variables like this, under similar reasoning as this class. The result is that the code anneals into a nest of variables and functions depending on one another in an ad-hoc fashion. The reader has no reason to believe that this class is any different. Whenever he wants to change this code, he'll have a large set of functions to check for the way it uses certain variables. Also, when calling a function, he'll have no way to know any constraints on how it modifies this object. The only reason you know this is because you wrote the code.\n\nI think that if putting all the variables at the bottom would be so bad, then the class is obviously too big.\n"
  , issueState = "closed"
  , issueId = Id 11434869
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }