Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-02) (-05) 08 : 30 : 42 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3724/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3724"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 3724
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 139396
        , simpleUserLogin = N "wojons"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/139396?v=3"
        , simpleUserUrl = "https://api.github.com/users/wojons"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Limit accept a function and work like reduce"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3724"
  , issueCreatedAt = 2015 (-02) (-04) 01 : 23 : 43 UTC
  , issueBody =
      Just
        "Hey guys,\r\n\r\nRan across a problem that would be cool if it can be directly solved in rethinkdb.\r\n\r\nExample: If i was building an app that booking air planes. The plane as so many seats and can handle so much weight. I need to make sure the passanger manifest does not go over eater limit.\r\n\r\n```js\r\nr.table('manifest').getAll('ABC', {index: 'fligt_number'}).filter(r.row('kg').lt(1000)).limit(r.agg().lte(1000000), function(agg, doc) {\r\nreturn agg.add(doc('kg'))\r\n}).limit(525)\r\n```\r\n\r\nThis would first look in the manifest table and get everyone on the flight abc. and it would filter out anyone that was over 1000kg, then we would have a limit operation. this has 2 parts the check function which is to check to see if the result of the function that falls before is less then or eque to 100000 if its gets over then we will stop accepting docs at the limit and move on to the last limit to sure no more then 525 people get onto the flight. now the second arg takes a function that has 2 args the result from the previus run of the function and the document we are passing on. its simply going to keep adding docs until we get to the limit check we put before."
  , issueState = "open"
  , issueId = Id 56466493
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }