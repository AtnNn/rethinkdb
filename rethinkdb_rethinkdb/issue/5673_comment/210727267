IssueComment
  { issueCommentUpdatedAt = 2016 (-04) (-16) 03 : 54 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/210727267"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/5673#issuecomment-210727267"
  , issueCommentCreatedAt = 2016 (-04) (-16) 03 : 49 : 19 UTC
  , issueCommentBody =
      "Note that in order to implement this, I had to modify the signature of `r.expr`:\r\n\r\n```js\r\nr.expr(val, nestingDepth) // before\r\nr.expr(val, { nestingDepth, arity }) // after\r\n```\r\n\r\nI felt like this was better than adding another positional argument (ad infinitum), but it would be a breaking change. We could make it backwards-compatible by assuming a numeric argument refers to `nestingDepth`.\r\n\r\n`r.expr` will now assume `arity` when wrapping functions of unknown argument length. We should maybe consider having it force the arity (if specified) even for functions of known argument lengths, but I wasn't quite sure of the implications in doing so."
  , issueCommentId = 210727267
  }