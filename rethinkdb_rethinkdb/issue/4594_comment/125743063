IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-28) 20 : 21 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/125743063"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4594#issuecomment-125743063"
  , issueCommentCreatedAt = 2015 (-07) (-28) 20 : 21 : 20 UTC
  , issueCommentBody =
      "It might be better to not overload the `min` and `max` names, and just support `r.min([a, b])` and `r.max([a, b])` because:\r\n\r\n* It is inconsistent with the use of `args`, for example in `r.min(r.args(l))`\r\n* It is inconsistent with other similar operations. Should we do the same for `avg`, `distinct`, `sum`?\r\n\r\nLooking at associative operations I noticed that `add` corresponds to `sum`, but for `mul` there is no corresponding `product` operation. Similarly, `and`, `or`, `union`, `setUnion`, `setIntersection` and `merge` also have no corresponding reduction (related to #1312). I also noticed a small inconsistency between `add` and `sum`: `r.add()` fails but `r.expr([]).sum()` doesn't."
  , issueCommentId = 125743063
  }