IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-15) 21 : 47 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 33037
        , simpleUserLogin = N "segphault"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/33037?v=3"
        , simpleUserUrl = "https://api.github.com/users/segphault"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/164907520"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5188#issuecomment-164907520"
  , issueCommentCreatedAt = 2015 (-12) (-15) 21 : 47 : 39 UTC
  , issueCommentBody =
      "In my experience writing applications, I find that you almost always want to handle changes differently from a delete/insert. Consider a scenario where you have a list of selectable items\8212there's potentially a lot of state on the client side that you are going to lose if you just remove the relevant item from the list and replace it. It could screw up selection, scroll position, list ordering, etc.\r\n\r\nThis is a fairly common example of what I do, taken right out of one of my demos:\r\n\r\n```ruby\r\nif data[:new_val] && !data[:old_val]\r\n  # Add new item\r\nelsif data[:new_val] && data[:old_val]\r\n  # Update existing item\r\nelsif !data[:new_val] && data[:old_val]\r\n  # Remove deleted item\r\nend\r\n```"
  , issueCommentId = 164907520
  }