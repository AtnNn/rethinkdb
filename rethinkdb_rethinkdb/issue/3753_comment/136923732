IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-02) 03 : 20 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/136923732"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3753#issuecomment-136923732"
  , issueCommentCreatedAt = 2015 (-09) (-02) 03 : 20 : 34 UTC
  , issueCommentBody =
      "Ok, so what about this syntax?\r\n```\r\n.insert(documents, {conflict: function(id, old_val, new_val) { ... } })\r\n```\r\n\r\nThe conflict resolution function must be atomic.\r\n\r\nIf the function returns `old_val`, the document will not be changed. If the function returns `null`, the document will be deleted (this is consistent with `replace`). Otherwise, the document will be updated to whatever value the function returns."
  , issueCommentId = 136923732
  }