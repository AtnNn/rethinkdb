IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-26) 18 : 32 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/125025651"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3753#issuecomment-125025651"
  , issueCommentCreatedAt = 2015 (-07) (-26) 18 : 32 : 47 UTC
  , issueCommentBody =
      "We should also think about the question of atomicity. I can think of two options:\r\n1. Require the conflict function to be atomic, fail if it's not\r\n2. Add a `non_atomic` optarg to `insert`, similar to the one for `update` and `replace`. Require it to be set to `true` if the conflict function is not atomic.\r\n\r\nI feel like a non-atomic upsert is kind of pointless, so option 1 might be more reasonable (and easier)."
  , issueCommentId = 125025651
  }