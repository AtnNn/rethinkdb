IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-30) 03 : 02 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20241259"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1097#issuecomment-20241259"
  , issueCommentCreatedAt = 2013 (-06) (-30) 03 : 02 : 05 UTC
  , issueCommentBody =
      "This is going to be a racy behavior I think.\r\n\r\n\r\nOn Sat, Jun 29, 2013 at 7:59 PM, Michel <notifications@github.com> wrote:\r\n\r\n> Note that the query that broke the server is\r\n>\r\n> r.db('race_events').table('locations').update(\r\n>   r.js('(function(row){return {lat:parseFloat(row.lat), long:parseFloat(row.long)};})'),\r\n>   non_atomic=True)\r\n>\r\n> I just tested it and it works fine (on a well defined set -- I haven' t\r\n> try with undefined/unexpected value)\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1097#issuecomment-20241231>\r\n> .\r\n>"
  , issueCommentId = 20241259
  }