IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-10) 21 : 19 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/58717729"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/152#issuecomment-58717729"
  , issueCommentCreatedAt = 2014 (-10) (-10) 21 : 19 : 04 UTC
  , issueCommentBody =
      "> Not when moving mentioned imaginary line (or adding a new one) on a given machine.\r\n\r\nThat's true, but I think 99.9% of the time when people reshard a table they lose availability.  (I think almost nobody is (A) oversharding and (B) manually managing shard boundaries rather than just hitting \"rebalance\" in the web UI.)  Changing it so that people lose availability the other 0.1% of the time doesn't seem that bad compared to `count` being slow.\r\n\r\n> Also, we'd like to not lose availability when resharding. We're hoping to fix this within the next six months.\r\n\r\nThat's sort of a larger problem.  How are we planning on not losing availability?  Would it be easy to use the same infrastructure to keep `count` up-to-date?"
  , issueCommentId = 58717729
  }