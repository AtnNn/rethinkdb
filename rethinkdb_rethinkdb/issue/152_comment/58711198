IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-10) 20 : 22 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/58711198"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/152#issuecomment-58711198"
  , issueCommentCreatedAt = 2014 (-10) (-10) 20 : 22 : 56 UTC
  , issueCommentBody =
      "If we did that, and we could, we would also need to handle the possibility of multiple table-wide count queries going to two shards on the same b-tree.  We already do that for some other query.\r\n\r\nKeeping counts on a subtree basis involves storing them with the replication timestamps in the LBA and some complications around updating them since you have to go back and update them after the fact (which means, in-memory, count queries would have to wait for changes to the count to get propagated back up).  This would have the advantage of us having much more exact key range distributions to do sharding by, and also you'd be able to do counts on a smaller key range in the main b-tree or secondary indexes."
  , issueCommentId = 58711198
  }