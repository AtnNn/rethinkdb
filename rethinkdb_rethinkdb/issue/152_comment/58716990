IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-10) 21 : 12 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/58716990"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/152#issuecomment-58716990"
  , issueCommentCreatedAt = 2014 (-10) (-10) 21 : 12 : 14 UTC
  , issueCommentBody =
      "> Given that we already lose availability when resharding\r\n\r\nNot when moving mentioned imaginary line (or adding a new one) on a given machine.\r\nMaybe we could design a sharding scheme that doesn't rely on that, but I'm not convinced that it's worth changing all kinds of other things just to allow constant time table counts.\r\n\r\nOn a side note, I think linear time count() is also fairly standard even on many non-distributed databases (with some MySQL storage engines being a major exception). However much of the information I could find in a quick search was pretty old and could be outdated (e.g. http://grokbase.com/t/postgresql/pgsql-general/03afzm1qhd/constant-time-count or http://www.percona.com/blog/2006/12/01/count-for-innodb-tables/)."
  , issueCommentId = 58716990
  }