IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-24) 23 : 15 : 16 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27041622"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1566#issuecomment-27041622"
  , issueCommentCreatedAt = 2013 (-10) (-24) 23 : 15 : 16 UTC
  , issueCommentBody =
      "I really don't like the idea of sending back `array`. We should always give the users a cursor and ask them to close it if they don't fetch all the data. That would be much more developer-friendly.\r\nAt some point the JavaScript driver was not providing the same interface for `array` and `stream`, and that was a __huge__ pain to deal with. \r\n\r\nI believe that asking the users to understand the internals of RethinkDB is just not nice. Making a difference between `array` and `stream` is just a way to force them to understand some subtle differences.\r\nAbout `distinct`, the current implementation is not obvious at all. One (like me...) could perfectly think of `distinct` going through the stream and checking each document against previously visited ones (stored in a hash) and send back elements one by one.\r\n\r\n\r\nIf the concern is about leaks, we can still kill a cursor if it has not been used for the last X seconds and dump an error message somewhere.\r\n\r\n\r\nAlso about my comment here https://github.com/rethinkdb/rethinkdb/issues/1567#issuecomment-26972565, the data explorer freeze for a little second when parsing 1000 documents. If you somehow get back a bigger array (up to one million), that would just kill your Chrome tab (or your browser)."
  , issueCommentId = 27041622
  }