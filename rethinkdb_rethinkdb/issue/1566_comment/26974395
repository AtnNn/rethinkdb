IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-24) 08 : 24 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/26974395"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1566#issuecomment-26974395"
  , issueCommentCreatedAt = 2013 (-10) (-24) 08 : 24 : 52 UTC
  , issueCommentBody =
      "I think this is less of a problem than it appears because 99% of apps written with Rethink will open the connection, do some stuff, and close it for each web request (which is < 50ms). It's very rare to hold cursors across requests. Admittedly this is a problem for repls and *some* apps, but I think the solution is to cap the amount of data we can order (and error if the query goes over the cap), not to return an array.\r\n\r\nFor `order_by`, what do we do about `r.table(\"foo\").order_by(\"bar\").limit(5).delete()`? It's a very common query, and returning an array would make it impossible (or much more complicated).\r\n\r\nAlso, what about objections above? (Changing driver interface depending on whether you use an index)\r\n\r\nI would much rather wait to implement per-query memory limit. I think it's a better solution to this problem than returning arrays."
  , issueCommentId = 26974395
  }