Issue
  { issueClosedAt = Just 2016 (-02) (-05) 23 : 09 : 26 UTC
  , issueUpdatedAt = 2016 (-02) (-05) 23 : 09 : 26 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5175/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5175"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5175
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 952451
          , simpleUserLogin = N "nighelles"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/952451?v=3"
          , simpleUserUrl = "https://api.github.com/users/nighelles"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Be smarter about when to display outdated index issue"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5175"
  , issueCreatedAt = 2015 (-12) (-04) 01 : 34 : 26 UTC
  , issueBody =
      Just
        "Currently we just compare the ReQL version of an index to the current version in order to decide whether to display an outdated index issue.\n\nWe should scan the index function and only raise the issue if the particular function was actually affected by the version change.\n\nSince this requires adding and maintaining \"last_changed_at_version\" information to each term, I suggest doing something simpler that will still avoid needless index migration for most users:\n- Check if the index function is a custom function, or a simple `function(x) {return x(\"fieldname\");}`. If it is the latter, don't raise a migration issue.\n- The exception would be ReQL version steps that are explicitly marked to always raise an outdated index issue. An example would be the jump from 1.15 to 1.16, where we changed the key serialization format to address certain bugs.\n\nI think this is important because index migration is perceived as a significant burden against upgrading by many users, to the extend that I've heard from some users that they avoided upgrading just to not having to migrate indexes.\n"
  , issueState = "closed"
  , issueId = Id 120312616
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 110
          , milestoneClosedIssues = 150
          , milestoneDescription = Just ""
          , milestoneTitle = "2.3"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/110"
          , milestoneCreatedAt = 2015 (-10) (-05) 20 : 52 : 53 UTC
          , milestoneState = "closed"
          }
  }