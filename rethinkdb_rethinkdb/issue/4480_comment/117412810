IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-01) 02 : 44 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/117412810"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4480#issuecomment-117412810"
  , issueCommentCreatedAt = 2015 (-07) (-01) 02 : 44 : 00 UTC
  , issueCommentBody =
      "To me, terms like `count` and `contains` seem like the odd-balls here by assuming literals as the first argument. I think `map`, `concat_map`, `order_by`, etc should all consistently accept field-or-function style arguments. Likewise, as @deontologician has suggested in this issue, things like `filter`, `count` and `contains` should accept pathspecs. That being said, perhaps the existing behavior could also be preserved by using `.count(r.literal(3))`?\r\n\r\nI'd very much prefer that terms unify around the pathspecs concept rather than accepting literals in specific cases.\r\n\r\nAs an aside, ReQL has a lot in common with the `lodash` utility library in JS and `lodash` functions are very consistent with regard to the arguments they accept. It might be a good source of inspiration in deciding these issues."
  , issueCommentId = 117412810
  }