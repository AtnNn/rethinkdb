IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-04) 22 : 17 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/109071054"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4299#issuecomment-109071054"
  , issueCommentCreatedAt = 2015 (-06) (-04) 22 : 17 : 01 UTC
  , issueCommentBody =
      "The weird thing is that once RethinkDB gets into that state, htop shows that it spends ~50% CPU in kernel code. However according to dtrace there are virtually no syscalls going on.\r\n\r\nI also tried attaching instruments timing-based profiler and it didn't show anything interesting either.\r\n\r\nHowever I found that increasing the coroutine stack size avoids the issue, so I think the initial theory that this is the same as https://github.com/rethinkdb/rethinkdb/issues/4300 , except that something is broken about our coroutine stack overflow detection on OS X.\r\nWe do call `mprotect` successfully on the watchdog page, so something must go wrong with handling the signal that accessing it should trigger."
  , issueCommentId = 109071054
  }