Issue
  { issueClosedAt = Just 2013 (-12) (-14) 21 : 47 : 56 UTC
  , issueUpdatedAt = 2013 (-12) (-14) 22 : 10 : 58 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/759/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/759"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 759
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 3416
        , simpleUserLogin = N "thoughtpolice"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/3416?v=3"
        , simpleUserUrl = "https://api.github.com/users/thoughtpolice"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "RethinkDB should compress on-disk and/or network data"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/759"
  , issueCreatedAt = 2013 (-05) (-06) 23 : 35 : 32 UTC
  , issueBody =
      Just
        "Issue #310 was originally about this but the problem was misidentified, and now it is home to its own proper discourse.\r\n\r\nThis ticket is to track the original goal: enabling RethinkDB to use compression. There's generally some savings to be had.\r\n\r\nIdeally, RDB would probably compress both on-disk data and network data. IME, these are both normally pretty good wins. Sometimes I/O even gets better due to being able to commit more data to disk (or the network pipe) at once.\r\n\r\nSo there are some things to definitely consider like whether they should be tunable, what algorithm to use, etc. Personally, I have lately used [lz4](http://code.google.com/lz4/) as my compressor, as it's both fast and liberally licensed (BSD.)\r\n\r\nHowever, as Rethink is under the Affero GPL, I would also like to pitch [QuickLZ](http://quicklz.com) as an option (under GPL.) I've used it in the past (commercially even) and it's great. It's very fast and one benefit it has API-wise is that it includes a streaming mode as well as a block compression mode. Particularly for networking it might be worth looking into. Generally the streaming mode can save you a few % in my experience if you use it, but depending on how you transport data (like in consistently sized blocks,) it may be easier to layer in with a traditional API."
  , issueState = "closed"
  , issueId = Id 14026584
  , issueComments = 7
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }