Issue
  { issueClosedAt = Just 2015 (-05) (-07) 23 : 23 : 00 UTC
  , issueUpdatedAt = 2015 (-05) (-07) 23 : 23 : 00 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4185/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4185"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      , IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4185
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 316661
          , simpleUserLogin = N "timmaxw"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/316661?v=3"
          , simpleUserUrl = "https://api.github.com/users/timmaxw"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Branch history crash in raft"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4185"
  , issueCreatedAt = 2015 (-05) (-05) 21 : 38 : 02 UTC
  , issueBody =
      Just
        "Error message: `Guarantee failed: [it != branches.end()] Branch is missing from branch history`\r\n\r\nBacktrace:\r\n\r\n```\r\n1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:100\r\n2: backtrace_t::backtrace_t() at backtrace.cc:203\r\n3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n4: format_backtrace(bool) at backtrace.cc:198\r\n5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n6: branch_history_t::get_branch(uuid_u const&) const at history.cc:61\r\n7: real_branch_history_manager_t::get_branch(uuid_u const&) const at branch_history_manager.cc:46\r\n8: branch_history_reader_t::export_branch_history(uuid_u const&, branch_history_t*) const at history.cc:36\r\n9: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1e19b6f] at 0x1e19b6f ()\r\n10: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1e19b0e] at 0x1e19b0e ()\r\n11: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1e19a31] at 0x1e19a31 ()\r\n12: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1e19821] at 0x1e19821 ()\r\n13: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1e197bc] at 0x1e197bc ()\r\n14: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1e15ce5] at 0x1e15ce5 ()\r\n15: branch_history_reader_t::export_branch_history(region_map_t<version_t> const&, branch_history_t*) const at history.cc:50\r\n16: primary_execution_t::run(auto_drainer_t::lock_t) at exec_primary.cc:102\r\n17: std::_Mem_fn<void (primary_execution_t::*)(auto_drainer_t::lock_t)>::operator()(primary_execution_t*, auto_drainer_t::lock_t) const at functional:551\r\n18: void std::_Bind<std::_Mem_fn<void (primary_execution_t::*)(auto_drainer_t::lock_t)> (primary_execution_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n19: void std::_Bind<std::_Mem_fn<void (primary_execution_t::*)(auto_drainer_t::lock_t)> (primary_execution_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1204\r\n20: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (primary_execution_t::*)(auto_drainer_t::lock_t)> (primary_execution_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n21: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n22: coro_t::run() at coroutines.cc:205\r\n23: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (primary_execution_t::*)(auto_drainer_t::lock_t)> (primary_execution_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (primary_execution_t::*)(auto_drainer_t::lock_t)> (primary_execution_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:58\r\n24: primary_execution_t::primary_execution_t(execution_t::context_t const*, hash_region_t<key_range_t> const&, store_view_t*, perfmon_collection_t*, contract_t const&, std::function<void (contract_ack_t const&)> const&) at exec_primary.cc:25\r\n25: contract_executor_t::update(table_raft_state_t const&, std::set<contract_executor_t::execution_key_t, std::less<contract_executor_t::execution_key_t>, std::allocator<contract_executor_t::execution_key_t> >*) at executor.cc:147\r\n26: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1da4b97] at 0x1da4b97 ()\r\n27: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1da48b2] at 0x1da48b2 ()\r\n28: std::function<void (table_raft_state_t const*)>::operator()(table_raft_state_t const*) const at functional:2161\r\n29: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1cc1c2e] at 0x1cc1c2e ()\r\n30: contract_executor_t::update_blocking(signal_t*) at executor.cc:69\r\n31: std::_Mem_fn<void (contract_executor_t::*)(signal_t*)>::operator()(contract_executor_t*, signal_t*) const at functional:551\r\n32: void std::_Bind<std::_Mem_fn<void (contract_executor_t::*)(signal_t*)> (contract_executor_t*, std::_Placeholder<1>)>::__call<void, signal_t*&&, 0, 1>(std::tuple<signal_t*&&>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n33: void std::_Bind<std::_Mem_fn<void (contract_executor_t::*)(signal_t*)> (contract_executor_t*, std::_Placeholder<1>)>::operator()<signal_t*, void>(signal_t*&&) at functional:1204\r\n34: std::_Function_handler<void (signal_t*), std::_Bind<std::_Mem_fn<void (contract_executor_t::*)(signal_t*)> (contract_executor_t*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, signal_t*) at functional:1780\r\n35: std::function<void (signal_t*)>::operator()(signal_t*) const at functional:2161\r\n36: pump_coro_t::run(auto_drainer_t::lock_t) at pump_coro.cc:77\r\n37: std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)>::operator()(pump_coro_t*, auto_drainer_t::lock_t) const at functional:551\r\n38: void std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n39: void std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1204\r\n40: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n41: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n42: coro_t::run() at coroutines.cc:205\r\n43: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:58\r\n44: pump_coro_t::notify() at pump_coro.cc:28\r\n45: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1da4f5f] at 0x1da4f5f ()\r\n46: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1da4c8d] at 0x1da4c8d ()\r\n47: std::function<void ()>::operator()() const at functional:2161\r\n48: call_function(std::function<void ()> const&) at watchable.hpp:167\r\n49: void publisher_controller_t<std::function<void ()> >::publish<void (*)(std::function<void ()> const&)>(void (* const&)(std::function<void ()> const&)) at pubsub.hpp:139\r\n50: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1cc227a] at 0x1cc227a ()\r\n51: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1cc3762] at 0x1cc3762 ()\r\n52: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1cc36e3] at 0x1cc36e3 ()\r\n53: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1cc3696] at 0x1cc3696 ()\r\n54: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x1cc325d] at 0x1cc325d ()\r\n55: std::function<void ()>::operator()() const at functional:2161\r\n56: call_function(std::function<void ()> const&) at watchable.hpp:167\r\n57: void publisher_controller_t<std::function<void ()> >::publish<void (*)(std::function<void ()> const&)>(void (* const&)(std::function<void ()> const&)) at pubsub.hpp:139\r\n58: watchable_variable_t<raft_member_t<table_raft_state_t>::state_and_config_t>::apply_atomic_op(std::function<bool (raft_member_t<table_raft_state_t>::state_and_config_t*)> const&) at watchable.hpp:205\r\n59: raft_member_t<table_raft_state_t>::update_commit_index(unsigned long, new_mutex_acq_t const*) at raft_core.tcc:985\r\n60: raft_member_t<table_raft_state_t>::on_append_entries_rpc(raft_rpc_request_t<table_raft_state_t>::append_entries_t const&, signal_t*, raft_rpc_reply_t::append_entries_t*) at raft_core.tcc:707\r\n61: raft_member_t<table_raft_state_t>::on_rpc(raft_rpc_request_t<table_raft_state_t> const&, signal_t*, raft_rpc_reply_t*) at raft_core.tcc:243\r\n62: raft_networked_member_t<table_raft_state_t>::on_rpc(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&) at raft_network.tcc:68\r\n63: std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)>::operator()(raft_networked_member_t<table_raft_state_t>*, signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&) const at functional:551\r\n64: void std::_Bind<std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)> (raft_networked_member_t<table_raft_state_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)>::__call<void, signal_t*&&, raft_rpc_request_t<table_raft_state_t>&&, mailbox_addr_t<void (raft_rpc_reply_t)>&&, 0, 1, 2, 3>(std::tuple<signal_t*&&, raft_rpc_request_t<table_raft_state_t>&&, mailbox_addr_t<void (raft_rpc_reply_t)>&&>&&, std::_Index_tuple<0, 1, 2, 3>) at functional:1146\r\n65: void std::_Bind<std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)> (raft_networked_member_t<table_raft_state_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)>::operator()<signal_t*, raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>, void>(signal_t*&&, raft_rpc_request_t<table_raft_state_t>&&, mailbox_addr_t<void (raft_rpc_reply_t)>&&) at functional:1204\r\n66: std::_Function_handler<void (signal_t*, raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>), std::_Bind<std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)> (raft_networked_member_t<table_raft_state_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)> >::_M_invoke(std::_Any_data const&, signal_t*, raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>) at functional:1780\r\n67: std::function<void (signal_t*, raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>)>::operator()(signal_t*, raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>) const at functional:2161\r\n68: mailbox_t<void (raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>)>::read_impl_t::read(read_stream_t*, signal_t*) at typed.hpp:226\r\n69: mailbox_manager_t::mailbox_read_coroutine(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, threadnum_t, unsigned long, std::vector<char, std::allocator<char> >*, long, mailbox_manager_t::force_yield_t) at mailbox.cc:270\r\n70: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x14b641f] at 0x14b641f ()\r\n71: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x14b630c] at 0x14b630c ()\r\n72: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n73: coro_t::run() at coroutines.cc:205\r\n74: /home/tim/rethinkdb/build/debug_clang/rethinkdb() [0x14b5bfd] at 0x14b5bfd ()\r\n75: mailbox_manager_t::on_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, read_stream_t*) at mailbox.cc:232\r\n76: connectivity_cluster_t::run_t::handle(keepalive_tcp_conn_stream_t*, boost::optional<peer_id_t>, boost::optional<peer_address_t>, auto_drainer_t::lock_t, bool*) at cluster.cc:1126\r\n77: connectivity_cluster_t::run_t::on_new_connection(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at cluster.cc:285\r\n78: std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(connectivity_cluster_t::run_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:551\r\n79: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0, 1, 2>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\r\n80: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1204\r\n81: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1780\r\n82: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2161\r\n83: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:928\r\n84: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at functional:551\r\n85: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n86: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::operator()<, void>() at functional:1204\r\n```\r\n\r\nIt looks like we're forgetting to copy the branch history from the backfiller to backfillee during a backfill. It should be an easy fix."
  , issueState = "closed"
  , issueId = Id 73439285
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 316661
                , simpleUserLogin = N "timmaxw"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/316661?v=3"
                , simpleUserUrl = "https://api.github.com/users/timmaxw"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 95
          , milestoneClosedIssues = 217
          , milestoneDescription =
              Just "To-do list before shipping auto-failover"
          , milestoneTitle = "2.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/95"
          , milestoneCreatedAt = 2015 (-03) (-04) 21 : 09 : 42 UTC
          , milestoneState = "closed"
          }
  }