IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-06) 23 : 03 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/58113781"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3126#issuecomment-58113781"
  , issueCommentCreatedAt = 2014 (-10) (-06) 23 : 03 : 46 UTC
  , issueCommentBody =
      "The work-around is to check whether `replaced` is `0` or not.\r\n\r\nI've just talked a bit about this with @wojons. This is not really a bug. The use case - if I understood it correctly - is that you have queries that can either use `get` or `getAll` and you want to use the same code to handle their results. So having the same output for both would make that easier.\r\n\r\nAt the same time the observed result objects are consistent with how `get` and `getAll` work, so they are basically correct.\r\n\r\nThe results could be made consistent bei either returning 0 everywhere in case of a missing key in `get().update()`, i.e. not setting `skipped`, or by having an additional field in the result object. Something like `missing: 1`."
  , issueCommentId = 58113781
  }