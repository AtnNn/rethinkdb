Issue
  { issueClosedAt = Just 2015 (-03) (-24) 01 : 58 : 24 UTC
  , issueUpdatedAt = 2015 (-03) (-24) 01 : 58 : 27 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2336/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2336"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:performance"
          , labelName = "tp:performance"
          }
      ]
  , issueNumber = 2336
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Optimizing insert performance"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2336"
  , issueCreatedAt = 2014 (-04) (-30) 01 : 47 : 43 UTC
  , issueBody =
      Just
        "@nviennot kindly produced two graphs that compare RethinkDB insert performance on a single node to other products. In particular, he's replicating from MongoDB to RethinkDB, and RethinkDB is the bottleneck (https://github.com/rethinkdb/rethinkdb/issues/2335#issuecomment-41751921).\n\nHard durability:\n\n![benchmark-rethinkdb-hard](https://cloud.githubusercontent.com/assets/48436/2836881/e09bd202-d008-11e3-9fd1-e3c674bee645.png)\n\nSoft durability:\n\n![benchmark-rethinkdb-soft](https://cloud.githubusercontent.com/assets/48436/2836884/f2ecc8a8-d008-11e3-960c-4d58f2243d1b.png)\n\nIt's surprising that our performance doesn't significantly improve with soft durability. We haven't optimized for throughput like this for a while, and I think that we should. I suspect that we throttle too quickly and other systems don't -- if you run the workload longer, other systems should either have lower performance, or have too many dirty blocks in memory. However, people still run into this in benchmarks, and it'd be great to either have comparable performance, or better documentation, or a way for users to tune this.\n\nPutting in subsequent.\n"
  , issueState = "closed"
  , issueId = Id 32500448
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 64
          , milestoneClosedIssues = 228
          , milestoneDescription =
              Just
                "These issues are no longer relevant to the current version of RethinkDB"
          , milestoneTitle = "outdated"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/64"
          , milestoneCreatedAt = 2014 (-03) (-28) 00 : 17 : 40 UTC
          , milestoneState = "closed"
          }
  }