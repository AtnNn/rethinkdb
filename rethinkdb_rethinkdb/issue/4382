Issue
  { issueClosedAt = Just 2016 (-01) (-26) 23 : 55 : 04 UTC
  , issueUpdatedAt = 2016 (-03) (-30) 23 : 22 : 26 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4382/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4382"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02d7e1"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:reql"
          , labelName = "cp:reql"
          }
      , IssueLabel
          { labelColor = "007575"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:API_settled"
          , labelName = "tp:API_settled"
          }
      ]
  , issueNumber = 4382
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 952451
          , simpleUserLogin = N "nighelles"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/952451?v=3"
          , simpleUserUrl = "https://api.github.com/users/nighelles"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 2058304
        , simpleUserLogin = N "grandquista"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/2058304?v=3"
        , simpleUserUrl = "https://api.github.com/users/grandquista"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "r.wait without arguments depends on test database existing."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4382"
  , issueCreatedAt = 2015 (-06) (-11) 18 : 56 : 50 UTC
  , issueBody =
      Just
        "I am running this query to clean up at the end of a test suite.\n\n``` js\nr.wait().do( function (wait_res) { return r.db('rethinkdb').table('db_config').delete(); })\n```\n\nIt returns this error even if a database exists. I replicated this in the data explorer by deleting all databases and then creating a database named `foo`. Both `next` and `2.0.2` have the issue.\n\n```\nt: Database `test` does not exist in:\nundefined.wait().do(function(var_120) { return r.db(\"rethinkdb\").table(\"db_config\").delete(); })\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\nWhen the default database is left in place the query runs successfully.\n"
  , issueState = "closed"
  , issueId = Id 87448699
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 110
          , milestoneClosedIssues = 150
          , milestoneDescription = Just ""
          , milestoneTitle = "2.3"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/110"
          , milestoneCreatedAt = 2015 (-10) (-05) 20 : 52 : 53 UTC
          , milestoneState = "closed"
          }
  }