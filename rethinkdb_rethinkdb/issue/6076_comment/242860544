IssueComment
  { issueCommentUpdatedAt = 2016 (-08) (-26) 21 : 51 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 53049
        , simpleUserLogin = N "rocketraman"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/53049?v=3"
        , simpleUserUrl = "https://api.github.com/users/rocketraman"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/242860544"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/6076#issuecomment-242860544"
  , issueCommentCreatedAt = 2016 (-08) (-26) 21 : 50 : 24 UTC
  , issueCommentBody =
      "> We could add a method runIterable which would return an Iterable for a forEach loop, and have run just return the iterator directly.\r\n\r\nWould `runIterable` return an `Iterable` that can be re-used i.e. iterated more than once? If not, then I don't see how this approach addresses the issue -- it would be the same confusion on the return value of a different method."
  , issueCommentId = 242860544
  }