IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-02) 18 : 21 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47815110"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2639#issuecomment-47815110"
  , issueCommentCreatedAt = 2014 (-07) (-02) 18 : 21 : 11 UTC
  , issueCommentBody =
      "Yes, the server should be in Haskell. Then it wouldn't have any bugs.\r\n\r\nBut seriously, here's a reasonable way to do this: Make a function that checks if we're close to overflowing the stack and throws an exception if so. Call it in every function that recurses based on user input. Catch the exception and give the user an error message.\r\n\r\nAnother option is to look into the possibility of either throwing exceptions from signal handlers or converting the signal into an exception directly (i.e. through `-fnon-call-exceptions`). However, this is at best sketchy and platform-dependent."
  , issueCommentId = 47815110
  }