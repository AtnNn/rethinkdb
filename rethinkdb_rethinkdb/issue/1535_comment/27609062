IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-01) 23 : 36 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27609062"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1535#issuecomment-27609062"
  , issueCommentCreatedAt = 2013 (-11) (-01) 23 : 36 : 03 UTC
  , issueCommentBody =
      "Ok, after fixing those, ran across another crash, so there's more to do.\r\n\r\n```c\r\nerror: Error in ../src/buffer_cache/semantic_checking.tcc at line 146:\r\nerror: Assertion failed: [block_id == get_block_id()] \r\nerror: Backtrace:\r\nerror: Sat Oct 19 03:36:07 2013\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\r\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:68\r\n       5: scc_buf_lock_t<mc_cache_t>::scc_buf_lock_t(scc_transaction_t<mc_cache_t>*, unsigned long long, access_t, buffer_cache_order_mode_t, lock_in_line_callback_t*) at semantic_checking.tcc:146\r\n       6: btree_store_t<rdb_protocol_t>::acquire_sindex_block_for_read(read_token_pair_t*, scc_transaction_t<mc_cache_t>*, scoped_ptr_t<scc_buf_lock_t<mc_cache_t> >*, unsigned long long, signal_t*) at btree_store.cc:324\r\n       7: btree_store_t<rdb_protocol_t>::btree_store_t(serializer_t*, std::string const&, long long, bool, perfmon_collection_t*, rdb_protocol_t::context_t*, io_backender_t*, base_path_t const&) at btree_store.cc:78\r\n       8: rdb_protocol_t::store_t::store_t(serializer_t*, std::string const&, long long, bool, perfmon_collection_t*, rdb_protocol_t::context_t*, io_backender_t*, base_path_t const&) at protocol.cc:1096\r\n       9: void do_construct_existing_store<rdb_protocol_t>(std::vector<threadnum_t, std::allocator<threadnum_t> > const&, int, store_args_t<rdb_protocol_t>, serializer_multiplexer_t*, scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*, store_view_t<rdb_protocol_t>**) at file_based_svs_by_namespace.cc:54\r\n       10: void boost::_bi::list6<boost::_bi::value<std::vector<threadnum_t, std::allocator<threadnum_t> > >, boost::arg<1>, boost::_bi::value<store_args_t<rdb_protocol_t> >, boost::_bi::value<serializer_multiplexer_t*>, boost::_bi::value<scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*>, boost::_bi::value<store_view_t<rdb_protocol_t>**> >::operator()<void (*)(std::vector<threadnum_t, std::allocator<threadnum_t> > const&, int, store_args_t<rdb_protocol_t>, serializer_multiplexer_t*, scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*, store_view_t<rdb_protocol_t>**), boost::_bi::list1<int const&> >(boost::_bi::type<void>, void (* const&)(std::vector<threadnum_t, std::allocator<threadnum_t> > const&, int, store_args_t<rdb_protocol_t>, serializer_multiplexer_t*, scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*, store_view_t<rdb_protocol_t>**), boost::_bi::list1<int const&>&, int) const at bind.hpp:594\r\n       11: void boost::_bi::bind_t<void, void (*)(std::vector<threadnum_t, std::allocator<threadnum_t> > const&, int, store_args_t<rdb_protocol_t>, serializer_multiplexer_t*, scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*, store_view_t<rdb_protocol_t>**), boost::_bi::list6<boost::_bi::value<std::vector<threadnum_t, std::allocator<threadnum_t> > >, boost::arg<1>, boost::_bi::value<store_args_t<rdb_protocol_t> >, boost::_bi::value<serializer_multiplexer_t*>, boost::_bi::value<scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*>, boost::_bi::value<store_view_t<rdb_protocol_t>**> > >::operator()<int>(int const&) const at bind_template.hpp:54\r\n       12: void pmap<boost::_bi::bind_t<void, void (*)(std::vector<threadnum_t, std::allocator<threadnum_t> > const&, int, store_args_t<rdb_protocol_t>, serializer_multiplexer_t*, scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*, store_view_t<rdb_protocol_t>**), boost::_bi::list6<boost::_bi::value<std::vector<threadnum_t, std::allocator<threadnum_t> > >, boost::arg<1>, boost::_bi::value<store_args_t<rdb_protocol_t> >, boost::_bi::value<serializer_multiplexer_t*>, boost::_bi::value<scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*>, boost::_bi::value<store_view_t<rdb_protocol_t>**> > > >(int, boost::_bi::bind_t<void, void (*)(std::vector<threadnum_t, std::allocator<threadnum_t> > const&, int, store_args_t<rdb_protocol_t>, serializer_multiplexer_t*, scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*, store_view_t<rdb_protocol_t>**), boost::_bi::list6<boost::_bi::value<std::vector<threadnum_t, std::allocator<threadnum_t> > >, boost::arg<1>, boost::_bi::value<store_args_t<rdb_protocol_t> >, boost::_bi::value<serializer_multiplexer_t*>, boost::_bi::value<scoped_array_t<scoped_ptr_t<rdb_protocol_t::store_t> >*>, boost::_bi::value<store_view_t<rdb_protocol_t>**> > > const&) at pmap.hpp:48\r\n       13: file_based_svs_by_namespace_t<rdb_protocol_t>::get_svs(perfmon_collection_t*, uuid_u, long long, stores_lifetimer_t<rdb_protocol_t>*, scoped_ptr_t<multistore_ptr_t<rdb_protocol_t> >*, rdb_protocol_t::context_t*) at file_based_svs_by_namespace.cc:142\r\n       14: watchable_and_reactor_t<rdb_protocol_t>::initialize_reactor(io_backender_t*) at reactor_driver.tcc:312\r\n       15: boost::_mfi::mf1<void, watchable_and_reactor_t<rdb_protocol_t>, io_backender_t*>::operator()(watchable_and_reactor_t<rdb_protocol_t>*, io_backender_t*) const at mem_fn_template.hpp:163\r\n       16: void boost::_bi::list2<boost::_bi::value<watchable_and_reactor_t<rdb_protocol_t>*>, boost::_bi::value<io_backender_t*> >::operator()<boost::_mfi::mf1<void, watchable_and_reactor_t<rdb_protocol_t>, io_backender_t*>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf1<void, watchable_and_reactor_t<rdb_protocol_t>, io_backender_t*>&, boost::_bi::list0&, int) at bind.hpp:307\r\n       17: boost::_bi::bind_t<void, boost::_mfi::mf1<void, watchable_and_reactor_t<rdb_protocol_t>, io_backender_t*>, boost::_bi::list2<boost::_bi::value<watchable_and_reactor_t<rdb_protocol_t>*>, boost::_bi::value<io_backender_t*> > >::operator()() at bind_template.hpp:21\r\n       18: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf1<void, watchable_and_reactor_t<rdb_protocol_t>, io_backender_t*>, boost::_bi::list2<boost::_bi::value<watchable_and_reactor_t<rdb_protocol_t>*>, boost::_bi::value<io_backender_t*> > > >::run_action() at callable_action.hpp:28\r\n       19: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       20: coro_t::run() at coroutines.cc:178\r\n```"
  , issueCommentId = 27609062
  }