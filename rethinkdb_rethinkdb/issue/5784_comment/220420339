IssueComment
  { issueCommentUpdatedAt = 2016 (-05) (-19) 18 : 58 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/220420339"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5784#issuecomment-220420339"
  , issueCommentCreatedAt = 2016 (-05) (-19) 18 : 58 : 58 UTC
  , issueCommentBody =
      "I'm not sure if I fully understand what you're trying to do, but you can create a node.js script and use our normal JavaScript driver.\r\n\r\nSomething like this:\r\n\r\n```js\r\nvar r = require('rethinkdb');\r\nr.connect({host: 'localhost'})\r\n .then((c) => {\r\n    var conn = c;\r\n    return firstQuery.run(conn);\r\n  })\r\n  .then((firstQueryResult) => {\r\n    // Do something with the first query result\r\n    return secondQuery.run(conn);\r\n  })\r\n  .then((secondQueryResult) => {\r\n    // Do something with the second query result\r\n  });\r\n```\r\n\r\nSave this in `script.js` and then you can run it through `node script.js` (you might need to run `npm install rethinkdb` in the same directory first)."
  , issueCommentId = 220420339
  }