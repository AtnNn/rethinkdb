Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-07) (-06) 22 : 00 : 05 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2236/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2236"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:testing"
          , labelName = "cp:testing"
          }
      ]
  , issueNumber = 2236
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 706854
          , simpleUserLogin = N "AtnNn"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/706854?v=3"
          , simpleUserUrl = "https://api.github.com/users/AtnNn"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Improve the python stress client"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2236"
  , issueCreatedAt = 2014 (-04) (-10) 00 : 08 : 18 UTC
  , issueBody =
      Just
        "@Tryneus, I believe you wrote the python stress client mainly for the X workload, but I've been using it for other things, such as replacing the C++ stress client.\n- The python stress client does not stop until it gets killed.\n\nI have been experimenting with two command-line flags, `--duration` to stop after a given number of seconds, and `--op-count` to stop after a given number of operations.\n- It limits the number of operations per second, which doesn't fully stress the server.\n\nI modified it to not limit the number of operations per second when given the `--ops-per-sec 0` arguments.\n- Arguments cannot be passed directly to the workload. The X workloads look for their arguments in environment variables.\n\nCurrently, the stress script is an executable which imports the workload secified by the `--workload` argument, which is a python module. I think it would work better if each workload was a separate executable and the stress script was turned into module that would be imported by each workload.\n- The C++ stress client has many other options and flags not supported by the python stress client.\n\nBecause it only supports memcache, we've talked about removing the C++ stress client. (@timmaxw you had some reservations about this. Do you remember what they were?)\n\nMost of the options that the C++ stress client supports are not used by any of the scripts in test. Does anyone have a use case that requires one of these options?\n\n```\n        --client-suffix\n                Append a per-client id to key names.\n        --ignore-protocol-errors\n                Do not quit if the protocol throws errors.\n        -w, --workload\n                Target load to generate. Expects a value in format D/U/I/R/A/P/V/RR, where\n                        D - number of deletes\n                        U - number of updates\n                        I - number of inserts\n                        R - number of reads\n                        A - number of appends\n                        P - number of prepends\n                        V - number of verifications\n                        RR - number of range reads\n                Defaults to [1/4/8/64/0/0/0/0]\n        -k, --keys\n                Key distribution in DISTR format (see below). Defaults to [8-16].\n        -K, --keys-prefix\n                Prefix every key with the following string. Defaults to [].\n        -v, --values\n                Value distribution in DISTR format (see below). Maximum possible\n                value size is [10485760]. Defaults to [8-128].\n        -b, --batch-factor\n                A range in DISTR format for average number of reads\n                to perform in one shot. Defaults to [1-16].\n        -R, --range-size\n                A range in DISTR format for average number of values\n                to retrieve per range get. Defaults to [16-128].\n        -l, --latency-file\n                File name to output individual latency information (in us).\n                The information is not outputted if this argument is skipped.\n        -L, --worst-latency-file\n                File name to output worst latency each second.\n                The information is not outputted if this argument is skipped.\n        -q, --qps-file\n                File name to output QPS information. '-' for stdout.\n                The information is not outputted if this argument is skipped.\n        -f, --db-file\n                If present drop kv pairs into sqlite and verify correctness on read.\n        -r, --distr\n                A key access distrubution. Possible values: 'uniform' (default), and 'normal'.\n        -m, --mu\n                Control normal distribution. Percent of the database size within one standard\n                distribution (defaults to 1%).\n        -p, --pipeline\n                Maximum number of operations that may be queued to server (defaults to 1).\n```\n"
  , issueState = "open"
  , issueId = Id 31205589
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 1777134
                , simpleUserLogin = N "mlucy"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/1777134?v=3"
                , simpleUserUrl = "https://api.github.com/users/mlucy"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 53
          , milestoneNumber = 68
          , milestoneClosedIssues = 33
          , milestoneDescription = Just ""
          , milestoneTitle = "tests"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/68"
          , milestoneCreatedAt = 2014 (-04) (-25) 22 : 22 : 22 UTC
          , milestoneState = "open"
          }
  }