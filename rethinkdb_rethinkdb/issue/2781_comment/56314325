IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-21) 22 : 29 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 3847
        , simpleUserLogin = N "evmar"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/3847?v=3"
        , simpleUserUrl = "https://api.github.com/users/evmar"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/56314325"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2781#issuecomment-56314325"
  , issueCommentCreatedAt = 2014 (-09) (-21) 21 : 59 : 01 UTC
  , issueCommentBody =
      "I found this bug because I was idly wondering whether btrfs was related to my write performance.\r\n\r\nOne thing to note, though maybe you got this right already: the manpage for CoW suggests that for btrfs turning off CoW via chattr +C requires that you do it on the directory before any files are made in it, or on files before any data is added.  I think you can check whether the +C on the directory actually affected the files via `lsattr rethinkdb_data`, and it's not exactly clear what adding +C on an existing file does:\r\n\r\n> Note: For btrfs, the 'C' flag should be set on new or empty files.  If it is set on a file which already has data blocks,  it is undefined when the blocks assigned to the file will be fully stable. If the 'C' flag is set on a directory, it will have no  effect  on  the directory,  but  new  files  created  in that directory will the No_COW attribute.\r\n\r\n(Edit: moved some btrfs fragmentation comments to bug #3080.)"
  , issueCommentId = 56314325
  }