Issue
  { issueClosedAt = Just 2014 (-08) (-06) 22 : 13 : 25 UTC
  , issueUpdatedAt = 2014 (-08) (-19) 22 : 30 : 58 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2817/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2817"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2817
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 7431361
          , simpleUserLogin = N "larkost"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/7431361?v=3"
          , simpleUserUrl = "https://api.github.com/users/larkost"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "connection.js test failing when stderr/stdout going to a non-tty"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2817"
  , issueCreatedAt = 2014 (-08) (-05) 23 : 08 : 20 UTC
  , issueBody =
      Just
        "The connections.js test has been failing in buildbot, and taking down our buildbot with a message about `'ascii' codec can't encode character u'\\u2024' in position 163: ordinal not in range(128)`. This is a bit mis-leading, what it really means is that it fell into the wasteland between ascii and unicode code-points (control characters).\r\n\r\nThe immediate solution is to make sure that the Mocha tests don't output control characters. There is a [bug in Mocha](visionmedia/mocha/issues#1304) at the moment that I just filled that prevents them from doing the right thing for non-tty's. The work-around is to pass the `--no-colors` flag to `mocha`. That change to our tests will be in shortly.\r\n\r\nSecondarily we need to harden `test-runner` so it can take garbage like this and still do a reasonable job of outputting it. I found one possibility already, but will need to test it more for the full range of Python versions."
  , issueState = "closed"
  , issueId = Id 39574792
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 71
          , milestoneClosedIssues = 113
          , milestoneDescription = Just ""
          , milestoneTitle = "1.14"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/71"
          , milestoneCreatedAt = 2014 (-06) (-11) 22 : 31 : 05 UTC
          , milestoneState = "closed"
          }
  }