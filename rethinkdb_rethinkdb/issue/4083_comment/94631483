IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-21) 03 : 56 : 22 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/94631483"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4083#issuecomment-94631483"
  , issueCommentCreatedAt = 2015 (-04) (-21) 03 : 56 : 22 UTC
  , issueCommentBody =
      "Hi @gebrits, thank you for the suggestion.\r\n\r\nI'm still reading up on what exactly it requires to work well as an event store, but maybe you can help me by clarifying point 1:\r\nAre the events we would store events generated by an application? In that case I imagine they could just be stored as regular documents that you insert into a RethinkDB table. As you mention, changefeeds would then make sure that those events are distributed to all subscribers.\r\n\r\nOr should the events be generated by RethinkDB itself, like a changelog of a given RethinkDB table that keeps track of every change that has ever been done to the data in it? In that case it sounds like it would require redirecting the output of a changefeed into another table (related: https://github.com/rethinkdb/rethinkdb/issues/3902 , https://github.com/rethinkdb/rethinkdb/issues/3367)."
  , issueCommentId = 94631483
  }