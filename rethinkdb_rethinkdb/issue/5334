Issue
  { issueClosedAt = Just 2016 (-02) (-09) 22 : 45 : 47 UTC
  , issueUpdatedAt = 2016 (-03) (-30) 23 : 22 : 26 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5334/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5334"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02d7e1"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:reql"
          , labelName = "cp:reql"
          }
      , IssueLabel
          { labelColor = "fbda04"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/st:review"
          , labelName = "st:review"
          }
      , IssueLabel
          { labelColor = "007575"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:API_settled"
          , labelName = "tp:API_settled"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 5334
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "orderBy.limit changefeed positions"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5334"
  , issueCreatedAt = 2016 (-01) (-29) 00 : 36 : 22 UTC
  , issueBody =
      Just
        "It would be very useful if we could add positions to the output of `orderBy.limit` changefeeds.\r\n\r\nI propose the following API:\r\n* A new optarg `{includePositions: true}` to `changes`\r\n* Two new fields in the documents generated by the changefield: `old_pos` and `new_pos`\r\n* The `old_pos` field exists exactly if `old_val` exists, and `new_pos` exists exactly if `new_val` exists\r\n* `old_pos` is `null` exactly if `old_val` is `null` and `new_pos` is `null` if `new_val` is `null`\r\n\r\nThis will apply to both initial and subsequent values.\r\n\r\nThe values should be such that if the user wants to maintain an ordered list, they can follow these two steps in this order in order to update it on a change event:\r\n1. Erase the element at `old_pos` from the list if `old_pos` is set and not `null` (all subsequent elements will move up)\r\n2. Insert `new_val` at `new_pos` into the list if `new_pos` is set and not `null` (all subsequent elements will move down)\r\n\r\nThe option should only work on `orderBy.limit` changefeeds.\r\nWe can make it work on `orderBy.map.limit` and `orderBy.limit.map` as well if it's not too hard, but it's somewhat optional. It might be a bit of extra work since we need to change the definition of what a \"trivial\" change is (the positions could change without the values changing).\r\nIt should *not* work on `orderBy.limit.filter`, though it should probably work on `orderBy.filter.limit` (relevant: #5325).\r\n\r\nThe complexity for determining the positions on the server might be linear in the size of the limit, but I think that's ok.\r\n\r\nI'd like to fast-track the discussion on this because a certain other project is waiting on the feature.\r\n@mlucy @deontologician @coffeemug any opinions on the API?"
  , issueState = "closed"
  , issueId = Id 129627568
  , issueComments = 9
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 110
          , milestoneClosedIssues = 150
          , milestoneDescription = Just ""
          , milestoneTitle = "2.3"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/110"
          , milestoneCreatedAt = 2015 (-10) (-05) 20 : 52 : 53 UTC
          , milestoneState = "closed"
          }
  }