IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-10) 23 : 38 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13364094"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/294#issuecomment-13364094"
  , issueCommentCreatedAt = 2013 (-02) (-10) 23 : 38 : 32 UTC
  , issueCommentBody =
      "The nice thing about the object/method notation we're using is that it does place the operation name between the two arguments the way the infix operators do. Consider the following JS example and it's Python equivalent.\r\n```javascript\r\nr.expr(1)  .add  (2)\r\n```\r\n```python\r\nr.expr(1)    +    2\r\n```\r\nThe only thing weird about the JS example is the need to add parens around second argument.\r\n\r\nThe additional redundancy of optional prefix forms will come greater code surface (adding to our testing and documentation load) as well as the potential for confusion among users.\r\n\r\nThe benefits, that I can see, are that prefix forms could be much more standardized across the drivers and match very closely the underlying S-expression query representation.\r\n\r\nIt would be trivial to support prefix forms in the JS driver."
  , issueCommentId = 13364094
  }