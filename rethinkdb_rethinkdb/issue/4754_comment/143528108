IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-27) 08 : 09 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 167416
        , simpleUserLogin = N "VeXocide"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/167416?v=3"
        , simpleUserUrl = "https://api.github.com/users/VeXocide"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/143528108"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4754#issuecomment-143528108"
  , issueCommentCreatedAt = 2015 (-09) (-27) 08 : 02 : 43 UTC
  , issueCommentBody =
      "@williamstein -- I'll give this a shot, but note that I might be insufficiently caffeinated.\r\n\r\n`ready_for_writes` is relatively straightforward, it takes the configuration the system is running on and verifies that for each configured shard the primary is available, and a majority of the replicas. This essentially reports whether, had a write been issued at the time, it would have successfully made it to disk and be acknowledged.\r\n\r\nUnfortunately this is insufficient for your changefeeds case because it is based on the configuration the system is currently using, not the configuration the system is configured to use. In other words, it will not wait for a configuration changes to be applied, which include rebalancing, and reconfigurations that change the sharding and replication factors.\r\n\r\nIf you were to watch the `ready_for_writes` during a configuration change it'd start off as true. It would then change to false for a moment as the primary and secondaries restart with the new configuration, be false while a majority is unavailable due to backfilling if this needed to happen due to shard boundaries changing. Subsequently it would become true again.\r\n\r\nNext is `all_replicas_ready` whose name unfortunately doesn't do it's justice, and there's an issue discussing the renaming of it, https://github.com/rethinkdb/rethinkdb/issues/4334. This mode verifies that every replica is available for each shard, and that all the configurations match the latest configuration set by the user. I'm still of the opinion that `running_as_configured` would be a better name.\r\n\r\nThis would work for your changefeed case because, contrary to `ready_for_writes` above, it does wait for configuration changes to be applied and the system to be running using the latest configuration set by the user. However, it is likely too strong as it requires every replica to be available for each shard. As such would report false when the primary and a majority, but not every replica, is available and running using the latest configuration.\r\n\r\nIf you were to watch the `all_replicas_ready` during a configuration change it would become false the moment the change is accepted by raft. It would then remain false until all shards and replicas were running with that configuration.\r\n\r\nNow it's once again become clear why I'm a systems engineer and not a technical writer -- it's surprisingly hard to describe things in a way that's both clear and technically correct. At least I hope this is clear, please let me know if it's not.\r\n\r\nFinally it's time to actually answer your questions. Using your case where you have a cluster of three nodes, and every table consists of one shard and three replicas. When you kill one of the nodes `all_replicas_ready` will remain false until one of two things happen. It will, obviously, become true again when it's restarted, and it will also become true again when the configuration is changed to no longer include the replica that was killed.\r\n\r\nThe cluster would function fine however, that is it would select a new primary through the automatic failover and be available for writes and everything. I'm no expert on changefeeds (@mlucy is, and please correct me if I'm wrong) but they should work fine as well.\r\n\r\nWhat you really need is a mode that verifies whether the primary and a majority of replicas is available, and running the latest configuration set by the user. Unfortunately we don't have such a mode at the moment, but we should be able to add it.\r\n\r\nHope this helped, now it's time for some coffee."
  , issueCommentId = 143528108
  }