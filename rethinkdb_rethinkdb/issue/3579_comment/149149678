IssueComment
  { issueCommentUpdatedAt = 2015 (-10) (-19) 08 : 52 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 6277212
        , simpleUserLogin = N "tatsujin1"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/6277212?v=3"
        , simpleUserUrl = "https://api.github.com/users/tatsujin1"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/149149678"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3579#issuecomment-149149678"
  , issueCommentCreatedAt = 2015 (-10) (-19) 08 : 52 : 35 UTC
  , issueCommentBody =
      "Question: would the initial state stream be possible to sort?\r\nIn my system I want to return the documents in the same order they arrived, so for the consumer it will be   received as if it was live (just faster!).\r\nCurrently I do a current-value query (sorted by modify time) and a `changes()` query in a thread each and serialize the output from those threads so they're emitted externally in \"initial-then-changes\"-order. This is a somewhat cumbersome solution (and notably slower). Having `changes()` natively return initial state first is a great win for this use case. However, there is the sorting issue...\r\n"
  , issueCommentId = 149149678
  }