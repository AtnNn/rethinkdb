IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-27) 20 : 19 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/76464598"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3817#issuecomment-76464598"
  , issueCommentCreatedAt = 2015 (-02) (-27) 20 : 19 : 33 UTC
  , issueCommentBody =
      "I wonder if we could do this in the web UI only, without changing the server logic. It would look something like this: For each column in the result, scan the query string for a string literal with the column's name. Show the columns in the order that the string literals were found. Put any columns that weren't found at the end in alphabetical order.\r\n\r\nFor example, `r.table(\"foo\").pluck(\"bar\", \"baz\").merge({\"blah\": 1})` would order the columns as `bar`, `baz`, `blah`. Of course it's easy to get false positives: `r.table(\"x\").pluck(\"y\", \"x\")` would put `x` before `y`. So I'm not sure if this is useful or confusing."
  , issueCommentId = 76464598
  }