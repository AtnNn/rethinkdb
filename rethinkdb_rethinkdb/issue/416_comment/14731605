IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-11) 18 : 33 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/14731605"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/416#issuecomment-14731605"
  , issueCommentCreatedAt = 2013 (-03) (-11) 18 : 33 : 32 UTC
  , issueCommentBody =
      "I'm made most of the changes that y'all suggested as well as cleaned up the code *a lot*. I feel like I should explain a few things though.\r\n\r\nThe class hierarchy used to be a lot more complex and the `compose` defining mixins made more sense. We had a distinction between scalar Rql values and sequence Rql values that limited your choices as to which methods could be called. We simplified it down to one class when Slava decreed that most operations should be polymorphic and that the server would be responsible for returning type errors when a given operation is not performable on that type.\r\n\r\nThe use of the empty tuple is my attempt to invoke a kind of \"undefined\" value for when optional arguments cannot be supplied. `NULL` (expressed as `None` in Python) is a user value in RQL and can't be reserved for special purposes within the driver. JavaScript conveniently has `undefined` for this purpose. In Python the best I could come up with was empty tuple."
  , issueCommentId = 14731605
  }