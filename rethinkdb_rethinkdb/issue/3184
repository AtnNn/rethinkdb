Issue
  { issueClosedAt = Just 2015 (-11) (-06) 19 : 47 : 06 UTC
  , issueUpdatedAt = 2015 (-11) (-06) 19 : 47 : 06 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3184/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3184"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 3184
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 139396
        , simpleUserLogin = N "wojons"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/139396?v=3"
        , simpleUserUrl = "https://api.github.com/users/wojons"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Distribute ChangeFeed"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3184"
  , issueCreatedAt = 2014 (-10) (-12) 08 : 02 : 44 UTC
  , issueBody =
      Just
        "#2953 which has redundancy.\r\n\r\nI sugguesed that there were names to change feeds so that you can reconnect and get changes that were not processed another useful think would be that you would be able to use the same name system and connect many server to the same change feed system. This way you are now able have many processes look at the same feed and negiocate who gets what. lets call it roundrobin. \r\n\r\nLets say i have 3 processes connected to the same chagne feed with the same name. All processes connect and start to wait. when a change comes in a random changefeed process is selfect and then is unable to get a change. if another change comes in before the first busy one acklaoges its finshed then another process will get the feed. if no process is avaialable then it will buffer until a process is able to process it. this way 100s of processes can work together on a single change feed. There may need to be sytems in place so that if its never acklaged after timeout it goes back into change feed."
  , issueState = "closed"
  , issueId = Id 45572774
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }