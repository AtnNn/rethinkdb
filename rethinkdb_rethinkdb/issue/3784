Issue
  { issueClosedAt = Just 2015 (-02) (-17) 02 : 06 : 20 UTC
  , issueUpdatedAt = 2015 (-02) (-17) 02 : 06 : 31 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3784/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3784"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3784
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 265071
        , simpleUserLogin = N "kofalt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/265071?v=3"
        , simpleUserUrl = "https://api.github.com/users/kofalt"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Bundle import-export dep with distributable"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3784"
  , issueCreatedAt = 2015 (-02) (-15) 23 : 23 : 15 UTC
  , issueBody =
      Just
        "While running `rethinkdb restore example.tar.gz`:\r\n\r\n```text\r\nError: Incompatible server version found, expected >= 1.16.0\r\nError: rethinkdb-import failed\r\n```\r\n\r\nIn this case, the failure occured because one particular developer trying to use our data set happened to run `sudo pip install rethinkdb` a few days later than her colleagues :( \r\n\r\nI can sympathize with not wanting to support multiple major versions in an import script, but it would be really nice to be able to import & export data from a ~17 day old version of the software, even if there's a few bugs in the script :D\r\n\r\nWould it be possible to have `rethinkdb dump` & `rethinkdb restore` rely on a bundled version of the python library, so as to avoid the \"suddenly-I-can't\" problem? \r\n\r\nI can also sympathize with possibly wanting to patch an import/export script separately from the main database product itself. How about a non-default option flag to use the vendored python lib?"
  , issueState = "closed"
  , issueId = Id 57751433
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }