IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-25) 07 : 34 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 572196
        , simpleUserLogin = N "stuartpb"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/572196?v=3"
        , simpleUserUrl = "https://api.github.com/users/stuartpb"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/115147095"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3771#issuecomment-115147095"
  , issueCommentCreatedAt = 2015 (-06) (-25) 07 : 34 : 45 UTC
  , issueCommentBody =
      "That, or `r()`-constructed connection objects could be designed to pull double-duty, using their config object as an `r.expr` if called with an interface that only makes sense when used as `r.expr()`, and running a query when called in a way that would only work as `r.connection()`, just as an *ugly* compatibility hack until `r()`-as-expr's deprecation can fully take and be fully replaced. (The most frustrating thing would be that `r()`-as-either would have to defer the connection establishment to do this, in a way that `r.connection()` would not.)"
  , issueCommentId = 115147095
  }