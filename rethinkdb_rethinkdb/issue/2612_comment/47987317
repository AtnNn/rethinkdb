IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-03) 21 : 32 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47987317"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2612#issuecomment-47987317"
  , issueCommentCreatedAt = 2014 (-07) (-03) 21 : 32 : 40 UTC
  , issueCommentBody =
      "> binary gives the wrong impression: We are not storing the data in binary. It isn't a boolean. The size function does not return the number of bits. We are not defining bitwise operations for it.\r\n\r\nIt doesn't give me this impression.  Granted, this might be because of preexisting knowledge of how things work.  It might also be because SQL Server has a binary type and its size is measured in bytes.  Regardless, the term \"binary\" generally doesn't mean boolean data, in programming.  I think the most common meaning is to mean that any 8-bit value is possible -- as opposed to formats that are restricted to 7-bit ASCII, or extended ASCII without control characters, and the like.\r\n\r\n>  I think at a minimum we should accept both 3548 and 2045 and store them internally as the common subset.\r\n\r\nI have no idea what you're talking about, but binary datums will surely be stored with a varint length N, followed by N bytes consisting of the binary data.\r\n"
  , issueCommentId = 47987317
  }