IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-26) 21 : 09 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47280428"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2612#issuecomment-47280428"
  , issueCommentCreatedAt = 2014 (-06) (-26) 21 : 09 : 07 UTC
  , issueCommentBody =
      "> How would it do that?\r\n\r\n`r.binary` would be a term on the server that takes a string and returns a `binary` pseudotype.  (If passed a binary pseudotype, it just returns what it was passed.)\r\n\r\nI think we should try hard to turn binary pseudotypes into a reasonable native type in the clients.  In Ruby, if I have `x = \"a\\0b\".encode('binary')`, I really want `r(x).run` to give me back that same string with a binary encoding."
  , issueCommentId = 47280428
  }