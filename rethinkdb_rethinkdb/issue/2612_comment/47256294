IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-26) 17 : 43 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47256294"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2612#issuecomment-47256294"
  , issueCommentCreatedAt = 2014 (-06) (-26) 17 : 43 : 15 UTC
  , issueCommentBody =
      "@srh For Python2.x we are pretty much stuck converting non-binary objects since even a read on a file in binary mode results in a plain string object. Probably the best approach would be to use the same format at the `bytes` instantiator uses in Python3.x:\r\n```\r\nclass bytes(object)\r\n |  bytes(iterable_of_ints) -> bytes\r\n |  bytes(string, encoding[, errors]) -> bytes\r\n |  bytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer\r\n |  bytes(int) -> bytes object of size given by the parameter initialized with null bytes\r\n |  bytes() -> empty bytes object\r\n```\r\nJust subclassing the `bytes` object gets us this already on Python3. However, on Python2 `bytes` is just an alias to `str`, and so there we probably would have to call the encode methods ourselves."
  , issueCommentId = 47256294
  }