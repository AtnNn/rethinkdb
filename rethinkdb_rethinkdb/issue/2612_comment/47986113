IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-03) 21 : 19 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47986113"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2612#issuecomment-47986113"
  , issueCommentCreatedAt = 2014 (-07) (-03) 21 : 19 : 51 UTC
  , issueCommentBody =
      "@coffeemug in MySQL, blobs are treated differently. They are not stored inline. Only the first 1024 bytes are used when sorting.\r\n\r\n`binary` gives the wrong impression: We are not storing the data in binary. It isn't a boolean. The size function does not return the number of bits. We are not defining bitwise operations for it.\r\n\r\n> I think at a minimum we should accept both 3548 and 2045 and store them internally as the common subset.\r\n\r\nWe might also want to, on the server, convert datums in queries into a canonical representation. We could then assume that all stored data is in that representation. Also, comparison and ordering could work directly on the md5 representation."
  , issueCommentId = 47986113
  }