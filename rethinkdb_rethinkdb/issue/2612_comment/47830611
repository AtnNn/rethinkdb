IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-02) 20 : 21 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47830611"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2612#issuecomment-47830611"
  , issueCommentCreatedAt = 2014 (-07) (-02) 20 : 21 : 50 UTC
  , issueCommentBody =
      "> we don't really need comparison operators for the first version,\r\n\r\nYes we do, comparisons (and orderBy, distinct queries, etc) must work for all values.  Comparing two objects for equality will require comparing the binary values they contain.\r\n\r\n> probably not length\r\n\r\nI think we want length for sure.  I can remember many times, for example, querying Windows for files with a length greater than X, to see what humongous files I had that could be deleted.  Suppose the developer has avatars uploaded in a table as binary values (and not files, because they're small, or because the user is new to RethinkDB and thinks binary values are more comfortable) but eventually realizes that users uploaded avatars that are too big."
  , issueCommentId = 47830611
  }