IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-26) 22 : 19 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47287559"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2612#issuecomment-47287559"
  , issueCommentCreatedAt = 2014 (-06) (-26) 22 : 19 : 06 UTC
  , issueCommentBody =
      "I think it's reasonable to automatically convert `bytes` to blobs, since their meanings are the same in Python3. The `r.binary()` wrapper should probably allow bytes in the Python3 driver though. And yeah, there's no good way to automatically convert in python2.\r\n\r\nThe issue I see with r.binary accepting unicode strings is that we'd have to decide on an encoding for the user. I think it's better if it blows up and says \"pick an encoding first\", because then the user won't accidentally shoot themselves in the foot by storing their string in a format they aren't sure how to decode. It's basically the same conflation python2 does: \"this blob is probably arbitrary bytes, but it also might be a string in some encoding which was not recorded anywhere\".\r\n\r\nPlus, what's the use case for writing text strings into a blob field? Don't you really want an actual string field? I think if the user is confused enough to be doing that, we could help them out by throwing an error.\r\n\r\nWhile I was writing this @AtnNn 's comment came in, which I agree with"
  , issueCommentId = 47287559
  }