IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-28) 02 : 03 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/96875554"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4100#issuecomment-96875554"
  , issueCommentCreatedAt = 2015 (-04) (-28) 02 : 03 : 13 UTC
  , issueCommentBody =
      "General ideas: since it's not happening in firefox, I'm assuming it's something with how surfaces/textures etc are managed in chrome. This is corroborated by the memory consumption going up once you switch tabs. If you don't have to actually render it to the screen, the graph library can crank through memory that much faster.\r\n\r\nHere's the heap profile I'm seeing (peak is 36MB js objects):\r\n\r\n![selection_030](https://cloud.githubusercontent.com/assets/1366/7361584/0204d518-ed10-11e4-9c2a-24b7d21c8c62.png)\r\n\r\nIt's hard to get a profile of memory usage in the native code (task memory = JS heap + native heap), but I'm compiling a custom chrome now that has compile flags turned on for deep memory profiling.\r\n\r\nWhen I look at counts of dom node usage (something else that doesn't show up in the JS heap directly), it doesn't seem to be growing without bound either, so I don't think it's that."
  , issueCommentId = 96875554
  }