IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-14) 22 : 02 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 265071
        , simpleUserLogin = N "kofalt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/265071?v=3"
        , simpleUserUrl = "https://api.github.com/users/kofalt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/66931966"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3438#issuecomment-66931966"
  , issueCommentCreatedAt = 2014 (-12) (-14) 22 : 02 : 00 UTC
  , issueCommentBody =
      "In the SQL world (for example) there's a relatively foolproof way to have peace of mind: parameterized queries. Even though RDB is not as vulnerable to this sort of attack thanks to its functional query design (which I love!), it currently lacks the same dead-simple option.\r\n\r\nAs RDB is presumably going to see a lot of use in web-facing applications, dealing with untrusted JSON all day every day is expected, and it'd be great to have an answer for that use case."
  , issueCommentId = 66931966
  }