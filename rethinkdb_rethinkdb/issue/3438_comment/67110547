IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-16) 04 : 18 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/67110547"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3438#issuecomment-67110547"
  , issueCommentCreatedAt = 2014 (-12) (-16) 04 : 18 : 35 UTC
  , issueCommentBody =
      "Yes, basically you still have to check your JSON input, but you don't have to worry about SQL-ish injections.\r\n\r\nIf you don't, it's pretty easy for someone to break your query. You just have to create an incomplete pseudo types, use `undefined`, use the wrong type etc.\r\n\r\n`r.const` doesn't seem to solve that many problems from my point of view (or to be fair none?). For example it doesn't help with\r\n```\r\nr.table(\"users\").filter(r.const(data)).run(...)\r\n```\r\n`data = true` is still a constant datum but is probably something you want to forbid. I feel like it's more or less impossible to build something safe without the user doing the work."
  , issueCommentId = 67110547
  }