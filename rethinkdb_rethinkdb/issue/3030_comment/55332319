IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-11) 21 : 34 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55332319"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3030#issuecomment-55332319"
  , issueCommentCreatedAt = 2014 (-09) (-11) 21 : 34 : 25 UTC
  , issueCommentBody =
      "So what should we do instead?\r\n\r\n* We considered storing server UUIDs instead of server names, and translating between names and UUIDs when presenting to the user. The problem is that to translate between names and UUIDs, you need a persistent global table of server names; we currently have such a table in the semilattices, but we're trying to get rid of it as part of getting rid of \"permanently remove\" and \"ghost servers\". There might be some sort of workaround, but it's not obvious to me.\r\n\r\n* Should we forbid renaming servers?\r\n\r\n* Should we automatically change names in the config every time someone renames a server? This will handle typical cases well, but it has race conditions, so it's possible that a config might not get updated. So this would change it from a predictable problem that happens every time to an unpredictable problem that users don't know how to handle.\r\n\r\n* Should we let people rename servers, but only in such a way that the problem is obvious? For example, we could require them to restart a server to rename it.\r\n\r\n* Or should the web UI present a warning when renaming a server, explaining what will happen?"
  , issueCommentId = 55332319
  }