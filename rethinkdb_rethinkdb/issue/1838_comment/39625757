IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-05) 01 : 39 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39625757"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1838#issuecomment-39625757"
  , issueCommentCreatedAt = 2014 (-04) (-05) 01 : 39 : 21 UTC
  , issueCommentBody =
      "> Replace `upsert:true` with `on_conflict:{'error','replace','update'}`.  If we add support for function pseudotypes, we could later update it to also take a conflict resolution function.\r\n\r\nI'm cool with that. Amazingly, this semantic juggling actually puts me at ease (you see, `'error'` is just a shortcut for a predefined resolution function so you don't have to write one; we don't expose custom ones for now, btw, but we will if someone asks for it).\r\n\r\n:+1: "
  , issueCommentId = 39625757
  }