IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-04) 21 : 32 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39613837"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1838#issuecomment-39613837"
  , issueCommentCreatedAt = 2014 (-04) (-04) 21 : 32 : 29 UTC
  , issueCommentBody =
      "Having thought about it, I really like `on_conflict` for the name.  It reads nicely and it's obvious what it means.  `overwrite` is less obvious, at least to me.  @neumino, @mglukhovsky -- does the name `on_conflict` strongly suggest to you that there's a callback in play?\r\n\r\nModulo the name, I think we should:\r\n* Replace `upsert:true` with `on_conflict:{'error','replace','update'}`.  If we add support for function pseudotypes, we could later update it to also take a conflict resolution function.\r\n* Not keep support for the `upsert` optarg, but make it return a clear error when it's used (saying \"replace `upsert:true` with `on_conflict:'replace'`\")."
  , issueCommentId = 39613837
  }