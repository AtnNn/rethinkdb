Issue
  { issueClosedAt = Just 2014 (-11) (-24) 19 : 41 : 58 UTC
  , issueUpdatedAt = 2015 (-01) (-02) 21 : 16 : 51 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2869/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2869"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      ]
  , issueNumber = 2869
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Migrate semilattice configuration when ReQL admin API is introduced"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2869"
  , issueCreatedAt = 2014 (-08) (-11) 22 : 29 : 10 UTC
  , issueBody =
      Just
        "When we switch over to the new ReQL admin API, the format of the semilattices will change. We'll probably want to migrate peoples' configuration to the closest equivalent under the new system. There are two parts to this issue: how to map the old configuration onto the new one, and how to actually perform the migration in practice.\n\nMapping the old configuration onto the new one is pretty easy, I think. We can translate each datacenter into a server tag, and we can translate the old blueprint into a new table configuration by translating servers' UUIDs into their names.\n\nWe're going to be encouraging users to maintain a set of scripts that configure their cluster. We can jump-start the process by translating the old configuration's goals into a script that contains a series of calls to `r.table_reconfigure()`.\n\nActually performing the migration is a bit harder. This will involve changing the format of the metadata file. It might be easier if we call the new metadata file `metadata_v1.[x]`, where `[x]` is the RethinkDB version when we release the ReQL admin API. I haven't thought very hard about this, though.\n"
  , issueState = "closed"
  , issueId = Id 40007635
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }