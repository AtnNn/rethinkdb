IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-09) 06 : 01 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/119829798"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/162#issuecomment-119829798"
  , issueCommentCreatedAt = 2015 (-07) (-09) 06 : 01 : 06 UTC
  , issueCommentBody =
      "In the constructor, the driver creates a function that maps to `bracket`, switches its internal prototype (`__proto__`) to Termbase. This is what let you do things like\r\n```\r\nr.expr({foo: \"bar\"})(\"foo\")\r\n// instead of\r\nr.expr({foo: \"bar\"}).bracket(\"foo\")\r\n```\r\n\r\nYou could have TermBase be an empty constructor and everything will work fine. You'll have to use `.bracket(...)` instead of `(...)` though.\r\nIf you really want to remove `__proto__` without changing the same behavior, you can use ES6 proxy, but I think it's supported on Chrome and Firefox only :) It's also heavy-ish to do as you have to define the getter for all methods every time"
  , issueCommentId = 119829798
  }