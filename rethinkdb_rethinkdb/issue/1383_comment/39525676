IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-04) 02 : 08 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39525676"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1383#issuecomment-39525676"
  , issueCommentCreatedAt = 2014 (-04) (-04) 02 : 08 : 35 UTC
  , issueCommentBody =
      "Here is the updated proposal following an in-person API discussion:\r\n\r\n## Syntax\r\n`r.web(<STRING>, <DATUM>)`\r\n\r\nFirst parameter - the url to access\r\nSecond parameter - the request data (following the header)\r\n - `<STRING>` will be written directly\r\n - `<DATUM>` will be converted to a JSON string and written\r\n\r\nResult: `<STRING>` or `<STREAM>` depending on the content type and `result_format` optarg.\r\n\r\n## Optargs\r\n - `timeout=<NUMBER>`: seconds before aborting the operation (similar to `r.js`); default=30\r\n - `method=( GET | POST | PUT | DELETE | HEAD )`: HTTP method to use; default=\"GET\"\r\n - `params=<DATUM>`: URL parameters to append; default=None\r\n - `header=<DATUM>`: header lines to include, may be a string, array of strings, or object; default=None\r\n - `reattempts=<NUMBER>`: number of attempts to perform while temporary or connection errors occur; default=5\r\n - `allow_redirect=<BOOL>`: follow redirects/location; default=False\r\n - `verify=<BOOL>`: verify the server's SSL certificate ; default=True\r\n - `depaginate=<BOOL>`: follow `next` links and aggregate (see below); default=True\r\n - `auth=<OBJECT>`: authentication information (see below); default=None\r\n - `result_format=( text | json | auto )`: choose how to format the result (see below); default=\"auto\"\r\n\r\n## Details\r\n\r\n`depaginate=<BOOL>`\r\nWhen True (default), this will follow `Link: ... rel=\"next\"` headers and concatenate results onto the result stream.\r\n\r\n`auth=<OBJECT>`\r\nThe given object shall contain information regarding the authentication to use with the server, such as basic HTTP or OAuth.  Example:\r\n`{ type: \"basic\", user: \"grey\", pass: \"hunter2\" }`\r\n\r\n`result_format=( text | json | auto )`\r\n`text` will return the result as a string, always\r\n`json` will attempt to parse the result as json, and will error if a parse cannot be completed\r\n`auto` will disambiguate based on the content-type of the result\r\n\r\n## Server Configuration\r\n\r\nAs mentioned in the previous proposal, we will need a proxy command-line option for configuring a given machine to use an HTTP proxy: `--http-proxy <STRING>`.  This may also be specified through the config file."
  , issueCommentId = 39525676
  }