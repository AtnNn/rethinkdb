IssueComment
  { issueCommentUpdatedAt = 2014 (-05) (-08) 19 : 18 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/42593542"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1383#issuecomment-42593542"
  , issueCommentCreatedAt = 2014 (-05) (-08) 19 : 18 : 38 UTC
  , issueCommentBody =
      "> This you'll gave people bad instrument to make bad things.\r\n\r\nHaving played with the command, I strongly disagree. It's extraordinarily convenient for interactive use, getting started with the database, walking people through examples, etc. Want to load GitHub comments into RethinkDB, for example? It turns from a ten minute affair into a ten second one. Playing with analytics on a form your users filled out and want to convert IPs to locations? Again, ten minutes turn into ten seconds. It's *awesome*.\r\n\r\nNow, it's debatable whether you'd want to use the command in production for all the reasons you specified, but we decided that interactive convenience outweighs the danger of adding such a feature. You can use the command when playing with the db interactively to great effect, but never use it in production code and it would still be immensely valuable. If we discover that people end up using it in production and it turns out to be a bad tool, we can fix that in various ways (for example, by adding an interactive mode and a deployment mode). So I'm excited to wait and see how it works out!"
  , issueCommentId = 42593542
  }