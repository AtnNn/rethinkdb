IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-04) 08 : 42 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39543170"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1383#issuecomment-39543170"
  , issueCommentCreatedAt = 2014 (-04) (-04) 08 : 41 : 31 UTC
  , issueCommentBody =
      "> Does someone has a use case with `depaginate`?\r\n\r\nA lot of APIs use pagination like that with JSON. For example, suppose I want to grab all RethinkDB GitHub stargazers and dump them into a table. I'd need to set `depaginate` to true for that. That was the original use case.\r\n\r\n>  `depaginate` should be set to `false` by default.\r\n\r\nHmm... @mglukhovsky -- what do you think?\r\n\r\nAlso, I think `depaginate` should accept an integer, which will specify how many pages to download (so if I set it to `5` it will only get five pages worth of data). We can also provide a function, which will accept the downloaded document and return whether to continue paginating. That would be super cool, though it's an overkill for the first implementation.\r\n\r\n> What happens if the server send back a 40x error? What does `r.web` returns?\r\n\r\nAh, we missed that in the spec. Presumably `r.error('40x - error message')`\r\n\r\n> What happens if the server redirect somewhere?\r\n\r\nIf `allow_redirect` is set to `true` it will retry. If it's set to false, we'll throw `r.error('40x - error message')`\r\n\r\n> I'm not a big fan of `r.web`, it's kind of ambiguous.\r\n\r\nIt seemed like a good idea when we thought about it, but may be you're right, `r.curl` might be better because it's more concrete. @mglukhovsky -- what do you think?"
  , issueCommentId = 39543170
  }