IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-04) 07 : 16 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39537509"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1383#issuecomment-39537509"
  , issueCommentCreatedAt = 2014 (-04) (-04) 07 : 11 : 58 UTC
  , issueCommentBody =
      "Some changes I'd like to make:\r\n\r\n- I think the second argument (the request data datum) should be an optarg. You usually don't need it for `GET` requests, and having to always pass `null`/`{}` would be annoying.\r\n- The `--http-proxy` command line arg sounds like a proxy for the web server or some such. Could we find a better name? Perhaps `--rweb-proxy`, `--r-web-proxy` or `--reql-web-proxy`?\r\n\r\nPotential additions:\r\n\r\n- I'd consider adding a cookies optarg. It's not hard to do, and it might be the only way to deal with some APIs (though I'm not sure; if our two-three target APIs don't require them, I wouldn't worry about them).\r\n\r\nSome clarifications (for people who weren't in the room with us):\r\n\r\n- `depaginate` will convert multiple arrays into a single stream (i.e. concatenate them), and multiple datums into a single stream. If there is no `next` link, it will return an array or a datum. Presumably the implementation will follow links lazily as users read from the cursor -- that would be __amazing__.\r\n- you said result is either `string` or `stream`, but it could also be a `datum` if `depaginate` is `false`, or there is no `next` link, correct?\r\n\r\nOpen questions:\r\n\r\n- We need to spec the `auth` optarg better for different authentication types.\r\n- Please find out what `cert` does in http://docs.python-requests.org/en/latest/api/, and whether we need it."
  , issueCommentId = 39537509
  }