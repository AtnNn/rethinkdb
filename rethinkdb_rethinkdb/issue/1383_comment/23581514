IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-30) 18 : 44 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/23581514"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1383#issuecomment-23581514"
  , issueCommentCreatedAt = 2013 (-08) (-30) 18 : 44 : 19 UTC
  , issueCommentBody =
      "This seems to have a number of downsides to it. One this introduces a huge security flaw in to RethinkDB. I doubt there are many admins who'd be willing to open up their database servers to do http requests to the outside world so this feature is all but useless in production.\r\n\r\nSecond as @flipchart very rightly points out I think this is becoming a case of creep featurism. One I'm not entirely sure how big these savings are. It seems like you'd get to write:\r\n\r\n```Python\r\ntable.insert(r.json(r.wget(...))\r\n# instead of\r\ntable.insert(json.loads(curl(...)))\r\n```\r\n\r\nwhich really doesn't seem like that big of an improvement to me. In fact it's probably going to be a lot less usable because we're unlikely to build in most of the features that curl has such as sending cookes and authentication data.\r\n\r\nTacking this feature on does seem to run the risk that some people start to thinking of us as a data ingestion system which I think would be a mixed message which distracted from the things we're really good at. I think it's a much better idea to focus on getting things we already have and are good at to a salable state rather than delving in to new categories of products."
  , issueCommentId = 23581514
  }