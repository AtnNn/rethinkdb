Issue
  { issueClosedAt = Just 2015 (-04) (-24) 20 : 17 : 03 UTC
  , issueUpdatedAt = 2015 (-08) (-26) 12 : 10 : 32 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4074/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4074"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4074
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 572196
        , simpleUserLogin = N "stuartpb"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/572196?v=3"
        , simpleUserUrl = "https://api.github.com/users/stuartpb"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Integrate SSH into client driver"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4074"
  , issueCreatedAt = 2015 (-04) (-17) 09 : 05 : 53 UTC
  , issueBody =
      Just
        "As originally proposed (obliquely) in https://github.com/rethinkdb/rethinkdb/issues/266#issuecomment-18477141\r\n\r\nAs long as SSH tunneling is the official way to secure RethinkDB traffic ([and the only supported interface to RethinkDB by Compose](https://blog.compose.io/tunneling-from-heroku-to-compose-rethinkdb/)), it should be a feature of the client driver to handle connecting to the remote through an SSH tunnel (if the options to r.connect include a `privateKey` and `username`).\r\n\r\nIn the JS driver, this could be handled with the [ssh2](https://github.com/mscdex/ssh2) module - I don't know about Python or Ruby, but it sounds like they have analogous native-SSH modules such functionality could be built upon.\r\n\r\nAlso, this is unrelated, but while we're on the subject of SSH-as-mechanism in RethinkDB, I should probably add `sshd` (and maybe `iptables` although the Docker bridge already handles 50% of what you'd use `iptables` for) to the official RethinkDB Docker images, y/n?"
  , issueState = "closed"
  , issueId = Id 69099354
  , issueComments = 25
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 18
          , milestoneClosedIssues = 180
          , milestoneDescription =
              Just
                "These feature requests, bugs and pull requests have been acknowledged, but will not be fixed."
          , milestoneTitle = "wontfix"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/18"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 24 UTC
          , milestoneState = "closed"
          }
  }