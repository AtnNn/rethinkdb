IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-15) 10 : 10 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 2115079
        , simpleUserLogin = N "techdragon"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/2115079?v=3"
        , simpleUserUrl = "https://api.github.com/users/techdragon"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/74411502"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2622#issuecomment-74411502"
  , issueCommentCreatedAt = 2015 (-02) (-15) 10 : 10 : 44 UTC
  , issueCommentBody =
      "Ideally the outcome would be to refactor the python code to be event loop agnostic. The same \"protocol\" code reused in event loop drivers so their feature compatibility is ensured. I feel I have to point this out because unfortunately few libraries are written this way. I dont want to see a future where I'll be installing with ```pip install rethinkdb-twisted``` in one codebase and ```pip install rethinkdb-asyncio``` in another.\r\n\r\nThe Autobahn project has a great structure for this kind of thing,  https://github.com/tavendo/AutobahnPython/\r\n\r\nThe Autobahn code is structured so if/when people need to use the protocol with some other unsupported event loop, they just have to rewrite the much smaller driver code to use their event loop.\r\nIn the case of rethinkdb there would be an additional 'synchronous' driver branch."
  , issueCommentId = 74411502
  }