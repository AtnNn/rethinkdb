IssueComment
  { issueCommentUpdatedAt = 2016 (-08) (-01) 16 : 10 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1638387
        , simpleUserLogin = N "foliot"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1638387?v=3"
        , simpleUserUrl = "https://api.github.com/users/foliot"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/236625830"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5345#issuecomment-236625830"
  , issueCommentCreatedAt = 2016 (-08) (-01) 16 : 04 : 50 UTC
  , issueCommentBody =
      "Anybody know how much garbage is produced by these reactive frameworks? I'm hoping to minimize garbage collection in my application to keep latency under control. \r\n\r\nWhat I'm envisioning is to have a single buffer for each connection that is never de-allocated, and provide a way for users to define a callback that would be notified when the buffer has changed. The callback could clone the data from the buffer and send it off into a reactive stream or handle it in any other way, but the buffer will be reused for the next response from the server and can be considered unsafe to use after the callback has completed. \r\n\r\nEDIT: After a little more reflection, I realize that this would probably cause problems with the thread safety of the connection. My concern stands though, that I'm worried about excess garbage. "
  , issueCommentId = 236625830
  }