IssueComment
  { issueCommentUpdatedAt = 2016 (-08) (-11) 20 : 50 : 27 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/239288108"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2751#issuecomment-239288108"
  , issueCommentCreatedAt = 2016 (-08) (-11) 20 : 50 : 27 UTC
  , issueCommentBody =
      "@fixpunkt One option for doing arbitrary recursions with `fold` is emulating a call stack in the accumulator.  That's not necessary for a BFS traversal though, since all you need for BFS is a first-in-first-out queue of nodes that still need to be processed.\r\n\r\nYou can generally do any computation with `fold` (see https://github.com/rethinkdb/rethinkdb/issues/5948 ), but as @deontologician said they are not necessarily nice to write nor efficient.\r\n\r\nFor the particular case of a BFS, `fold` should work ok, as long as the graph stays fairly small."
  , issueCommentId = 239288108
  }