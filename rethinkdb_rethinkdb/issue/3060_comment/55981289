IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-18) 00 : 36 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55981289"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3060#issuecomment-55981289"
  , issueCommentCreatedAt = 2014 (-09) (-18) 00 : 36 : 21 UTC
  , issueCommentBody =
      "> Saying \"you can call `.to_geojson` on it\" doesn't solve this problem.\r\n\r\nThat's true. If we're worried about nested fields, we could allow passing `geo_format='geojson'`, which would feel consistent with what we do with other pseudotypes and would also work with the nested use case. I wouldn't worry about it until it actually shows up (especially since `toGeojson` is a doable workaround), but it's something we could easily add.\r\n\r\nI think there is quite a jump from \"the pseudotypes should be meaningful\" to \"for geo data that means following geojson spec\". That's especially true if the user wanted to interact with the a different system -- they'd still have to strip out our reql type field. In general, I don't think it's unreasonable to use our own format for pseudotypes.\r\n\r\nThis isn't the only issue holding the release (although it'll probably be the last showstopper), so we could flip lat/long if we wanted to. Unfortunately I don't know enough about geo to form a good opinion. @neumino @Tryneus @mglukhovsky @danielmewes (if you're around) @anyone-else-who-has-an-opinion -- what do you think we should do?"
  , issueCommentId = 55981289
  }