IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-04) 18 : 19 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/45129515"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2498#issuecomment-45129515"
  , issueCommentCreatedAt = 2014 (-06) (-04) 18 : 19 : 55 UTC
  , issueCommentBody =
      "It has been my experience that no-one uses the multiple tables in a single file option of MySQL anymore. Mostly it is about making replication easier, but there are also some nice benefits when your tables get really large.\r\n\r\nAnd I think that the PostreSQL example is being misread: every table lives on one or more (in the case of > 1GiB tables) files, with no two tables living in the same file. The \"tablespace\" that is being referred to in the linked section refers to a folder that these files go in. The partitioning they are mostly talking about allows you to have different segments of the data of a single table in different directories. An example for using this would be to have the latest \"hot\" data stored on a folder on a SSD, while older \"cold\" data could live on larger spinning disks."
  , issueCommentId = 45129515
  }