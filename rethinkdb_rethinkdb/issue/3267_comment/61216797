IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-31) 04 : 40 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/61216797"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3267#issuecomment-61216797"
  , issueCommentCreatedAt = 2014 (-10) (-31) 04 : 38 : 40 UTC
  , issueCommentBody =
      "Hmm, I really like that syntax for the reasons you point out, and that was initially what I had been thinking. However, a big difference between the way something like `hasFields` and bracket `()` work, is that the former is able to return multiple results. For example, it's totally expected to do something like:\r\n\r\n```js\r\nr.expr({foo: {a: 'A', b: 'B', c: 'C'}, bar: 'BAR'}).pluck({foo: {a: true, b: true}});\r\n// => {foo: {a: 'A', b: 'B'}}\r\n```\r\n\r\nFor bracket, though, I'm not entirely sure what we would do:\r\n\r\n```js\r\nr.expr({foo: {a: 'A', b: 'B', c: 'C'}, bar: 'BAR'})({foo: {a: true, b: true}});\r\n// => ???\r\n```\r\n\r\nPerhaps it would throw an error if multiple values are requested?\r\n\r\nAnd thanks for the lightning-fast reply, btw! You guys are incredible.\r\n"
  , issueCommentId = 61216797
  }