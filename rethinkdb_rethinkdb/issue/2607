Issue
  { issueClosedAt = Just 2014 (-06) (-26) 22 : 01 : 30 UTC
  , issueUpdatedAt = 2014 (-06) (-26) 22 : 01 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2607/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2607"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 2607
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "segmentation fault caused by polyglot/joins.rb"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2607"
  , issueCreatedAt = 2014 (-06) (-25) 23 : 23 : 54 UTC
  , issueBody =
      Just
        "The `polyglot/joins.rb` test is failing consistently for me on newton. \r\n```bash\r\n./test-runner -i rb polyglot/joins.rb\r\n```\r\nI am running from the `larkost/2531-python-3` branch, but the latest `next` point is recent at 4f55510.\r\nHere is the output I am seeing:\r\n```\r\n== Running polyglot/joins.rb (ruby)\r\nRethinkDB server failed: Error: rethinkdb process 8000 failed with error code -5\r\ninfo: Our machine ID: fca34a0f-b1c2-45b6-a381-1510f8f27423\r\ninfo: Created directory '/home/ssd2/larkost/rethinkdb/test/rql_test/run/server_33692/rdb' and a metadata file inside it.\r\ninfo: Running rethinkdb 1.13.0-335-g04df13-dirty (debug) (GCC 4.6.3)...\r\ninfo: Running on Linux 3.2.0-61-generic x86_64\r\ninfo: Using cache size of 1024 MB\r\nwarn: Requested cache size is larger than available memory.\r\ninfo: Loading data from directory /home/ssd2/larkost/rethinkdb/test/rql_test/run/server_33692/rdb\r\ninfo: Our machine ID is fca34a0f-b1c2-45b6-a381-1510f8f27423\r\ninfo: Listening for intracluster connections on port 19595\r\ninfo: Listening for client driver connections on port 33692\r\ninfo: Listening for administrative HTTP connections on port 35832\r\ninfo: Listening on addresses: 127.0.0.1, 127.0.1.1, ::1\r\ninfo: To fully expose RethinkDB on the network, bind to all addresses\r\ninfo: by running rethinkdb with the `--bind all` command line option.\r\ninfo: Server ready\r\nVersion: rethinkdb 1.13.0-335-g04df13-dirty (debug) (GCC 4.6.3)\r\nerror: Error in src/arch/runtime/thread_pool.cc at line 343:\r\nerror: Segmentation fault from reading the address 0xffffffffffffffe8.\r\nerror: Backtrace:\r\nerror: Wed Jun 25 16:18:48 2014\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:202\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:282\r\n       4: format_backtrace(bool) at backtrace.cc:197\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6: linux_thread_pool_t::sigsegv_handler(int, siginfo*, void*) at thread_pool.cc:343\r\n       7: /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f71903a2cb0] at 0x7f71903a2cb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       8: std::string::compare(std::string const&) const at 0x7f7190b6068c (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       9: bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) at basic_string.h:2512\r\n       10: std::less<std::string>::operator()(std::string const&, std::string const&) const at stl_function.h:236\r\n       11: std::_Rb_tree<std::string, std::pair<std::string const, ql::wire_func_t>, std::_Select1st<std::pair<std::string const, ql::wire_func_t> >, std::less<std::string>, std::allocator<std::pair<std::string const, ql::wire_func_t> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<std::string const, ql::wire_func_t> > const*, std::_Rb_tree_node<std::pair<std::string const, ql::wire_func_t> > const*, std::string const&) const at stl_tree.h:1106\r\n       12: std::_Rb_tree<std::string, std::pair<std::string const, ql::wire_func_t>, std::_Select1st<std::pair<std::string const, ql::wire_func_t> >, std::less<std::string>, std::allocator<std::pair<std::string const, ql::wire_func_t> > >::find(std::string const&) const at stl_tree.h:1549\r\n       13: std::map<std::string, ql::wire_func_t, std::less<std::string>, std::allocator<std::pair<std::string const, ql::wire_func_t> > >::count(std::string const&) const at stl_map.h:769\r\n       14: ql::global_optargs_t::get_optarg(ql::env_t*, std::string const&) at env.cc:92\r\n       15: ql::batchspec_t::user(ql::batch_type_t, ql::env_t*) at batching.cc:86\r\n       16: ql::concatmap_trans_t::lst_transform(std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > >*) at shards.cc:753\r\n       17: ql::ungrouped_op_t::operator()(std::map<counted_t<ql::datum_t const>, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > >, std::less<counted_t<ql::datum_t const> >, std::allocator<std::pair<counted_t<ql::datum_t const> const, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > > > > >*, counted_t<ql::datum_t const> const&) at shards.cc:577\r\n       18: ql::eager_datum_stream_t::next_grouped_batch(ql::env_t*, ql::batchspec_t const&, std::map<counted_t<ql::datum_t const>, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > >, std::less<counted_t<ql::datum_t const> >, std::allocator<std::pair<counted_t<ql::datum_t const> const, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > > > > >*) at datum_stream.cc:624\r\n       19: ql::eager_datum_stream_t::next_batch_impl(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:654\r\n       20: ql::datum_stream_t::next_batch(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:574\r\n       21: ql::zip_datum_stream_t::next_raw_batch(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:880\r\n       22: ql::eager_datum_stream_t::next_grouped_batch(ql::env_t*, ql::batchspec_t const&, std::map<counted_t<ql::datum_t const>, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > >, std::less<counted_t<ql::datum_t const> >, std::allocator<std::pair<counted_t<ql::datum_t const> const, std::vector<counted_t<ql::datum_t const>, std::allocator<counted_t<ql::datum_t const> > > > > >*) at datum_stream.cc:619\r\n       23: ql::eager_datum_stream_t::next_batch_impl(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:654\r\n       24: ql::datum_stream_t::next_batch(ql::env_t*, ql::batchspec_t const&) at datum_stream.cc:574\r\n       25: ql::stream_cache_t::serve(long, Response*, signal_t*) at stream_cache.cc:54\r\n       26: ql::run(ql::protob_t<Query>, rdb_context_t*, signal_t*, ql::stream_cache_t*, Response*) at term.cc:278\r\n       27: rdb_query_server_t::run_query(ql::protob_t<Query> const&, Response*, client_context_t*) at query_server.cc:71\r\n       28: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, client_context_t*) at protob.cc:318\r\n       29: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.cc:282\r\n       30: std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()(query_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at functional:551\r\n       31: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0, 1, 2>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0, 1, 2>) at functional:1146\r\n       32: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&&&) at functional:1206\r\n       33: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1780\r\n       34: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2162\r\n       35: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:939\r\n       36: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at functional:551\r\n       37: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1147\r\n       38: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::operator()<, void>() at functional:1206\r\n       39: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >::run_action() at callable_action.hpp:28\r\n       40: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       41: coro_t::run() at coroutines.cc:199\r\n       42: void coro_t::spawn_now_dangerously<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> const&) at coroutines.hpp:52\r\n       43: linux_nonthrowing_tcp_listener_t::accept_loop(auto_drainer_t::lock_t) at network.cc:907\r\n       44: std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)>::operator()(linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t) const at functional:551\r\n       45: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n       46: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       47: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:28\r\n       48: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       49: coro_t::run() at coroutines.cc:199\r\n       50: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> const&) at coroutines.hpp:58\r\n       51: linux_nonthrowing_tcp_listener_t::begin_listening() at network.cc:686\r\n       52: linux_tcp_listener_t::linux_tcp_listener_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)> const&) at network.cc:972\r\n       53: query_server_t::query_server_t(rdb_context_t*, std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, query_handler_t*, boost::shared_ptr<semilattice_readwrite_view_t<auth_semilattice_metadata_t> >) at protob.cc:178\r\n       54: rdb_query_server_t::rdb_query_server_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, rdb_context_t*) at query_server.cc:17\r\n       55: do_serve(io_backender_t*, bool, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, serve_info_t const&, os_signal_cond_t*) at serve.cc:307\r\n       56: serve(io_backender_t*, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, serve_info_t const&, os_signal_cond_t*) at serve.cc:422\r\n       57: run_rethinkdb_serve(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:815\r\n       58: void std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)>::__call<void, , 0, 1, 2, 3, 4, 5, 6, 7, 8>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6, 7, 8>) at functional:1147\r\n       59: void std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)>::operator()<, void>() at functional:1206\r\n       60: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:1780\r\n       61: std::function<void ()>::operator()() const at functional:2162\r\n       62: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\r\n       63: std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()(starter_t*, std::function<void ()> const&) const at functional:551\r\n       64: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1147\r\n       65: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::operator()<, void>() at functional:1206\r\n       66: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:1780\r\n       67: std::function<void ()>::operator()() const at functional:2162\r\n       68: callable_action_instance_t<std::function<void ()> >::run_action() at callable_action.hpp:28\r\n       69: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       70: coro_t::run() at coroutines.cc:199\r\n       71: coro_t* coro_t::spawn_sometime<std::function<void ()> >(std::function<void ()> const&) at coroutines.hpp:58\r\n       72: starter_t::on_thread_switch() at runtime.cc:57\r\n       73: linux_message_hub_t::on_event(int) at message_hub.cc:154\r\n       74: epoll_event_queue_t::run() at epoll.cc:115\r\n       75: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:160\r\n       76: /lib/x86_64-linux-gnu/libpthread.so.0(+0x7e9a) [0x7f719039ae9a] at 0x7f719039ae9a (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       77: clone+0x6d at 0x7f71900c73fd (/lib/x86_64-linux-gnu/libc.so.6)\r\nerror: Exiting.\r\n== Failed polyglot/joins.rb test with result code 1 (/home/ssd2/larkost/rethinkdb/test/rql_test/src/joins.yaml) Output:\r\nFailed 6 tests\r\npolyglot/joins.rb/31-CPP: Error: Connection closed by server! when comparing #<RethinkDB::Cursor:8241660 (exhausted): r.table(\"messages\").orderby({\"index\" => \"id\"}).eq_join(\r\n  \"sender_id\",\r\n  r.table(\"senders\")\r\n).without({\"right\" => {\"id\" => true}}).zip.eq_join(\r\n  \"receiver_id\",\r\n  r.table(\"receivers\")\r\n).without({\"right\" => {\"id\" => true}}).zip> and [{:receiver_id=>1,\r\n  :sender=>\"Sender One\",\r\n  :receiver=>\"Receiver One\",\r\n  :msg=>\"Message One\",\r\n  :sender_id=>1,\r\n  :id=>10},\r\n {:receiver_id=>1,\r\n  :sender=>\"Sender One\",\r\n  :receiver=>\"Receiver One\",\r\n  :msg=>\"Message Two\",\r\n  :sender_id=>1,\r\n  :id=>20},\r\n {:receiver_id=>1,\r\n  :sender=>\"Sender One\",\r\n  :receiver=>\"Receiver One\",\r\n  :msg=>\"Message Three\",\r\n  :sender_id=>1,\r\n  :id=>30}]\r\nTEST FAILURE: polyglot/joins.rb/32-CPP\r\nTEST BODY: r.db('test').table_drop('test1')\r\n\tVALUE: <RqlRuntimeError \"Error: Connection Closed.\">\r\n\tEXPECTED: {:dropped=>1}\r\n\r\n\r\nTEST FAILURE: polyglot/joins.rb/33-CPP\r\nTEST BODY: r.db('test').table_drop('test2')\r\n\tVALUE: <RqlRuntimeError \"Error: Connection Closed.\">\r\n\tEXPECTED: {:dropped=>1}\r\n\r\n\r\nTEST FAILURE: polyglot/joins.rb/34-CPP\r\nTEST BODY: r.db('test').table_drop('test3')\r\n\tVALUE: <RqlRuntimeError \"Error: Connection Closed.\">\r\n\tEXPECTED: {:dropped=>1}\r\n\r\n\r\nTEST FAILURE: polyglot/joins.rb/35-CPP\r\nTEST BODY: r.db('test').table_drop('senders')\r\n\tVALUE: <RqlRuntimeError \"Error: Connection Closed.\">\r\n\tEXPECTED: {:dropped=>1}\r\n\r\n\r\nTEST FAILURE: polyglot/joins.rb/36-CPP\r\nTEST BODY: r.db('test').table_drop('messages')\r\n\tVALUE: <RqlRuntimeError \"Error: Connection Closed.\">\r\n\tEXPECTED: {:dropped=>1}\r\n\r\n\r\nTEST FAILURE: polyglot/joins.rb/37-CPP\r\nTEST BODY: r.db('test').table_drop('receivers')\r\n\tVALUE: <RqlRuntimeError \"Error: Connection Closed.\">\r\n\tEXPECTED: {:dropped=>1}\r\n\r\n\r\nRuby: 26 of 33 tests passed. 7 tests failed.\r\n```"
  , issueState = "closed"
  , issueId = Id 36532009
  , issueComments = 7
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 71
          , milestoneClosedIssues = 113
          , milestoneDescription = Just ""
          , milestoneTitle = "1.14"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/71"
          , milestoneCreatedAt = 2014 (-06) (-11) 22 : 31 : 05 UTC
          , milestoneState = "closed"
          }
  }