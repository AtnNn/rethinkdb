IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-16) 22 : 37 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/55824361"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3065#issuecomment-55824361"
  , issueCommentCreatedAt = 2014 (-09) (-16) 22 : 37 : 07 UTC
  , issueCommentBody =
      "Actually there is a backtrace:\r\n\r\n```\r\nVersion: rethinkdb 1.14.1-495-gda05dc (debug) (GCC 4.6.3)\r\nerror: Error in src/errors.cc at line 104:\r\nerror: Segmentation fault.\r\nerror: Backtrace:\r\nerror: Tue Sep 16 15:36:25 2014\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:203\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n       4: format_backtrace(bool) at backtrace.cc:198\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6: generic_crash_handler(int) at errors.cc:104\r\n       7: /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f315de57cb0] at 0x7f315de57cb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       8: shared_buf_t::size() const at shared_buffer.cc:31\r\n       9: shared_buf_ref_t<char>::get_safety_boundary() const at shared_buffer.hpp:83\r\n       10: datum_string_t::size() const at datum_string.cc:56\r\n       11: ql::datum_serialized_size(datum_string_t const&) at serialize_datum.cc:883\r\n       12: ql::datum_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:474\r\n       13: ql::datum_object_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:348\r\n       14: ql::datum_serialized_size(ql::datum_t const&, ql::check_datum_serialization_errors_t, std::vector<ql::size_tree_node_t, std::allocator<ql::size_tree_node_t> >*) at serialize_datum.cc:471\r\n       15: ql::datum_serialize(write_message_t*, ql::datum_t const&, ql::check_datum_serialization_errors_t) at serialize_datum.cc:558\r\n       16: void ql::serialize<(cluster_version_t)3>(write_message_t*, ql::datum_t const&) at serialize_datum.hpp:81\r\n       17: void ql::serialize<(cluster_version_t)3>(write_message_t*, empty_ok_t<ql::datum_t const> const&) at serialize_datum.cc:932\r\n       18: void http_result_t::rdb_serialize<(cluster_version_t)3>(write_message_t*) const at http_runner.cc:8\r\n       19: void serialize<(cluster_version_t)3>(write_message_t*, http_result_t const&) at http_runner.hpp:28\r\n       20: http_job_t::worker_fn(read_stream_t*, write_stream_t*) at http_job.cc:232\r\n       21: worker_run_t::main_loop() at extproc_spawner.cc:61\r\n       22: spawner_run_t::main_loop() at extproc_spawner.cc:144\r\n       23: extproc_spawner_t::fork_spawner() at extproc_spawner.cc:200\r\n       24: extproc_spawner_t::extproc_spawner_t() at extproc_spawner.cc:164\r\n       25: main_rethinkdb_porcelain(int, char**) at command_line.cc:1750\r\n       26: main+0x335 at main.cc:28\r\n       27: __libc_start_main+0xed at 0x7f315daaa76d (/lib/x86_64-linux-gnu/libc.so.6)\r\n       28: ../build/debug/rethinkdb() [0x157ba99] at 0x157ba99 ()\r\n\r\n```"
  , issueCommentId = 55824361
  }