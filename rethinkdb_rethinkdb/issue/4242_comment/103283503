IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-19) 00 : 44 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/103283503"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4242#issuecomment-103283503"
  , issueCommentCreatedAt = 2015 (-05) (-19) 00 : 44 : 57 UTC
  , issueCommentBody =
      "Similar error, though it may not be related:\r\n\r\n```\r\nr.map(r.db('test').table('test').changes(), r.range(), function(left, right) {\r\n  return left.merge({num: right})\r\n})\r\n```\r\n```\r\nRqlRuntimeError: SANITY CHECK FAILED: [arg_values[i].has()] at `src/rdb_protocol/var_types.cc:69` (server is buggy).  Backtrace:\r\nMon May 18 17:45:01 2015\r\n\r\n1: backtrace_t::backtrace_t() at 0x97e280 (rethinkdb)\r\n2: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at 0x97e54e (rethinkdb)\r\n3: ql::runtime_sanity_check_failed(char const*, int, char const*, std::string const&) at 0xac9394 (rethinkdb)\r\n4: ql::var_scope_t::with_func_arg_list(std::vector<ql::sym_t, std::allocator<ql::sym_t> > const&, std::vector<ql::datum_t, std::allocator<ql::datum_t> > const&) const at 0xa1531e (rethinkdb)\r\n5: ql::reql_func_t::call(ql::env_t*, std::vector<ql::datum_t, std::allocator<ql::datum_t> > const&, ql::eval_flags_t) const at 0xa526f3 (rethinkdb)\r\n6: ql::map_datum_stream_t::next_raw_batch(ql::env_t*, ql::batchspec_t const&) at 0xad6698 (rethinkdb)\r\n7: ql::eager_datum_stream_t::next_grouped_batch(ql::env_t*, ql::batchspec_t const&, std::map<ql::datum_t, std::vector<ql::datum_t, std::allocator<ql::datum_t> >, optional_datum_less_t, std::allocator<std::pair<ql::datum_t const, std::vector<ql::datum_t, std::allocator<ql::datum_t> > > > >*) at 0xad48a7 (rethinkdb)\r\n8: ql::eager_datum_stream_t::next_batch_impl(ql::env_t*, ql::batchspec_t const&) at 0xad4e5d (rethinkdb)\r\n9: ql::datum_stream_t::next_batch(ql::env_t*, ql::batchspec_t const&) at 0xad27b2 (rethinkdb)\r\n10: ql::query_cache_t::ref_t::serve(ql::env_t*, Response*) at 0xae76b0 (rethinkdb)\r\n11: ql::query_cache_t::ref_t::fill_response(Response*) at 0xae9ac2 (rethinkdb)\r\n12: ql::run(ql::query_id_t&&, ql::protob_t<Query>, Response*, ql::query_cache_t*, signal_t*) at 0xacd6e0 (rethinkdb)\r\n13: rdb_query_server_t::run_query(ql::query_id_t&&, ql::protob_t<Query> const&, Response*, ql::query_cache_t*, signal_t*) at 0xaf2c2f (rethinkdb)\r\n14: query_server_t::handle(http_req_t const&, http_res_t*, signal_t*) at 0x924562 (rethinkdb)\r\n15: routing_http_app_t::handle(http_req_t const&, http_res_t*, signal_t*) at 0x96437c (rethinkdb)\r\n16: routing_http_app_t::handle(http_req_t const&, http_res_t*, signal_t*) at 0x96437c (rethinkdb)\r\n17: http_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at 0x975dab (rethinkdb)\r\n18: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), boost::_bi::bind_t<void, boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<http_server_t*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > > >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at 0x976686 (rethinkdb)\r\n19: linux_nonthrowing_tcp_listener_t::handle(int) at 0xbc574c (rethinkdb)\r\n20: coro_t::run() at 0xbb13e8 (rethinkdb)\r\n in:\r\nr.db(\"test\").table(\"test\").changes().map(r.range(), function(var_59, var_60) { return var_59.merge({num: var_60}); })\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n```"
  , issueCommentId = 103283503
  }