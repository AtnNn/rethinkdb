Issue
  { issueClosedAt = Just 2015 (-05) (-25) 19 : 53 : 14 UTC
  , issueUpdatedAt = 2015 (-05) (-26) 05 : 52 : 48 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4278/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4278"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4278
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 4806944
        , simpleUserLogin = N "thaiat"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/4806944?v=3"
        , simpleUserUrl = "https://api.github.com/users/thaiat"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "changeFeed question"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4278"
  , issueCreatedAt = 2015 (-05) (-25) 15 : 04 : 52 UTC
  , issueBody =
      Just
        "the result i get between 2 different change feed are confusing:\n\n``` js\nr.table('Customer').changes(); \n```\n\nreturns nothing untill there is a change in Customer table\n\n``` js\nr.table('Customer').limit(10).changes();\n```\n\nreturns an initial feed with 10 entries.\n\nIs this the expected behavior ?\n\nI'm trying to implement a generic mechanism for executing reactive queries on the client side.\nAs i don't know if the client will use `limit` or not, is my best option to always returns a first `run()` resultset and then execute the `changes()` and emit them to the client ?\n"
  , issueState = "closed"
  , issueId = Id 80564172
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }