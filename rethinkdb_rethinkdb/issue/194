Issue
  { issueClosedAt = Just 2013 (-06) (-10) 22 : 46 : 37 UTC
  , issueUpdatedAt = 2013 (-06) (-10) 22 : 48 : 06 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/194/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/194"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02d7e1"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:reql"
          , labelName = "cp:reql"
          }
      ]
  , issueNumber = 194
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 65574
        , simpleUserLogin = N "kareemk"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/65574?v=3"
        , simpleUserUrl = "https://api.github.com/users/kareemk"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Add ability to return the result of a RQL expression in an update"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/194"
  , issueCreatedAt = 2012 (-12) (-27) 00 : 08 : 44 UTC
  , issueBody =
      Just
        "I'm looking to mimic the findandmodify feature in MongoDB. \n\nA basic use case is a document that contains a count field that is being updated by concurrent processes where the application needs to trigger an event once and only once the count field crosses a boundary. Without the ability to return the new value of the RQL expression that was used to atomically increment the field this is not possible AFAIK in RethinkDB.\n"
  , issueState = "closed"
  , issueId = Id 9529244
  , issueComments = 21
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }