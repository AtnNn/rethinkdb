Issue
  { issueClosedAt = Just 2014 (-09) (-03) 22 : 40 : 59 UTC
  , issueUpdatedAt = 2014 (-09) (-19) 21 : 28 : 29 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1915/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1915"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:performance"
          , labelName = "tp:performance"
          }
      ]
  , issueNumber = 1915
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Replace types in datum_t by ones which can be efficiently serialized/deserialized"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1915"
  , issueCreatedAt = 2014 (-01) (-28) 02 : 59 : 26 UTC
  , issueBody =
      Just
        "We waste a lot of CPU cycles on memory allocation and copying data around when deserializing `datum_t`s.\n\nA major reason for this are the types that we use to represent the data. `std::string`, `std::vector` and `std::map` are all designed to be modifiable, which we don't need in `datum_t`.\n\nI've started replacing `std::string` by a custom type which is specifically tweaked for being efficient in the context of `datum_t`. The conversion is not complete, but I'm already getting 3-5% more read throughput in YCSB.\n\n@mlucy: Please let me know if there's anything you think I should keep in mind when doing this.\n"
  , issueState = "closed"
  , issueId = Id 26413327
  , issueComments = 38
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 1777134
                , simpleUserLogin = N "mlucy"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/1777134?v=3"
                , simpleUserUrl = "https://api.github.com/users/mlucy"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 76
          , milestoneClosedIssues = 60
          , milestoneDescription = Just ""
          , milestoneTitle = "1.15"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/76"
          , milestoneCreatedAt = 2014 (-07) (-30) 21 : 42 : 02 UTC
          , milestoneState = "closed"
          }
  }