IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-31) 18 : 01 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7724
        , simpleUserLogin = N "mrkurt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7724?v=3"
        , simpleUserUrl = "https://api.github.com/users/mrkurt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18759677"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/266#issuecomment-18759677"
  , issueCommentCreatedAt = 2013 (-05) (-31) 17 : 35 : 57 UTC
  , issueCommentBody =
      "@coffeemug For EC2 proper, I wouldn't bother with auth and instead lean on security groups. If you hope you have something that people can you from Heroku or similar, though, IP/security group restrictions aren't good enough (you have to allow Heroku's entire security group). I think a key based auth for use inside EC2's network is reasonably easy way to let those users get going quickly.\r\n\r\nI do think this is an interesting problem with probably a better solution out there, though. We've toyed around with various ways of securing Redis/Mongo connections from \"untrusted\" app server networks (SSH tunnels, proxies, etc), but they're difficult to roll out in an unofficial way to general users without solid driver support. If you guys can come up with a straightforward way to let Rethink clients talk \"into\" a firewalled cluster, that would be cool."
  , issueCommentId = 18759677
  }