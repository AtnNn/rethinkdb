IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-10) 07 : 07 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/48571954"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2673#issuecomment-48571954"
  , issueCommentCreatedAt = 2014 (-07) (-10) 07 : 07 : 35 UTC
  , issueCommentBody =
      "> What if they write `r.expr(...)({compounds: {id: true, mz: true}})`?\r\n>> That would throw an error, you can retrieve only one field with `getField`.\r\n\r\nThus far we adopted a policy that if a command may accept multiple field specs (like in `pluck`) it should accept pathspecs, but if it can't (like in `getField`) it should only accept lambdas. We might want to revisit this -- it's nice to be able to provide a consistent pathspec everywhere, and get an error if we specify two paths where it's inappropriate.\r\n\r\n> Also, as an aside, the original implementation of array polymorphism would have had `[[{a: 1}]]('a')` return `[[1]]`, but we cut that because we thought it was too confusing.\r\n\r\nAlso worth revisiting IMO."
  , issueCommentId = 48571954
  }