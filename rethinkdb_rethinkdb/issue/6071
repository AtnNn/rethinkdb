Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-09) (-30) 07 : 13 : 32 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6071/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/6071"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 6071
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 372365
        , simpleUserLogin = N "analytik"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/372365?v=3"
        , simpleUserUrl = "https://api.github.com/users/analytik"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Erroneous, frozen backfill, network traffic and 1000x slowdown"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6071"
  , issueCreatedAt = 2016 (-08) (-24) 13 : 17 : 46 UTC
  , issueBody =
      Just
        "I guess the title about sums it up.\r\n\r\nWe have a table which had ~3.5M rows, 5:5 replicas, total disk space used ~20GB (so 4GB per 1 replica). One indexed read usually takes 10~50ms, returns a few dozen documents, a few kB of data. There's a continuous 100~600 writes per second, mostly updates. It's the most active table, and is business critical. We have about 3 changefeeds on it.\r\n\r\nI think our issue might be related to #5427, but it's hard to tell, since I didn't save all information, and I haven't remembered to check `_debug_table_status` when the problems were happening (and this is production, so we resorted to quick solutions).\r\n\r\nI think this is what happened, in order:\r\n- Node `rethinkdb1` has suspicious ongoing traffic, 14MB/s, later 20MB/s, later 30MB/s, each for 15-30 minutes at a time. This was suspicious as there was no reason for this traffic; plus other nodes didn't have any increase. No backup running. No complex reports running. Overall performance seemed normal. (EDIT: I previously mentioned `invalid clustering header` errors here - those were found to be unrelated.)\r\n- I experimented with scaling this one table down to 2 replicas, 5 shards\r\n- site became slower as backfill was running - this was to be expected\r\n- the site didn't speed up after backfill was completed\r\n- I tried to run rebalance on the table\r\n- most backfills completed quickly and the table was available again\r\n- jobs table showed 3-4 leftover backfill jobs, even when the table showed 10 green replicas, all tables were in Ready state\r\n- another node showed 30-40MB/s network bandwith. Curious, since again, there was no receiving node visible, none of the other machines had network traffic higher than 1-3MB/s.\r\n- at this point, our site was basically dead. From RethinkDB admin UI, I ran one simple indexed query. Instead of 30ms it took literally over 30s. Even `r.db('rethinkdb').table('jobs').filter({type:'backfill'});` often took several seconds to finish.\r\n- I tried waiting for the backfill jobs to finish. They moved at around 0.01% per 30 seconds.\r\n- I gave up, killed one rethinkdb node.\r\n- some of these backfill jobs disappeared (some of them were still at zero)\r\n- killed more rethinkdb nodes\r\n- backfill jobs disappeared\r\n- speed was back to acceptable\r\n- tried to clean up the table in small batches (3-10k documents, then sleep) - took 10-20s per one batch\r\n\r\nOver the next few days, the problem appeared again - it has several variants, sometimes with a massive network traffic seemingly going nowhere (possibly related to my comment in #5897), usually at 40MB/s, once even reaching 80MB/s; sometimes also with slowdown, sometimes without any side effects.\r\n\r\nFrom what I can tell - again, my will to experiment is limited, as it happens in production - the easiest way I managed to reproduce is\r\n- run rebalance\r\n- both normal and frozen backfill jobs appear \r\n- table gets ready, a few frozen backfills stay hanging (for days, if not taken care of)\r\n- sometimes, mysterious network traffic appears\r\n- site slows down\r\n- I kill one rethinkdb node\r\n- site speed goes up\r\n- I kill another rethinkdb node(s)\r\n- backfills disappear, all is back to normal\r\n\r\nInteresting enough, after this last incident, I tried to run our cleanup script again - basically, `getAll(<array of fifty IDs, using sindex>).delete(soft durability)` and this time it ran in 0.5~2s per batch, 3k-8k documents per batch. Also with almost zero network traffic going on (previously each of these batches would be visible in our network graphs).\r\n\r\nI know it's a very vague and lengthy description, but how do we investigate? Would it be useful if I try to reproduce this broken backfill, and send annotated screenshots of network graphs, plus the output of `_debug_table_status`? Should we try to capture network traffic and send you some of that? I know `rebalance()` isn't something that should be run on production carelessly, but still the behavior is disconcerting, especially since \"restart to fix\" seems like such a Windows 95 approach.\r\n\r\nEDIT 2016-08-25: Maybe unrelated, but we discovered a network problem which caused some DNS requests to take 5 seconds. This affected 3 proxies, no db nodes were located on those machines."
  , issueState = "open"
  , issueId = Id 172949115
  , issueComments = 9
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 54
          , milestoneNumber = 119
          , milestoneClosedIssues = 8
          , milestoneDescription = Nothing
          , milestoneTitle = "2.3.x"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/119"
          , milestoneCreatedAt = 2016 (-04) (-06) 18 : 05 : 18 UTC
          , milestoneState = "open"
          }
  }