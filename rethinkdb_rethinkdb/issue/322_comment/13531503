IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-14) 03 : 27 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13531503"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/322#issuecomment-13531503"
  , issueCommentCreatedAt = 2013 (-02) (-14) 03 : 27 : 11 UTC
  , issueCommentBody =
      "In essence, NULL would no longer be a normal user value that follows the normal rules.  I think this is a better interface for a few reasons:\r\n* There are two conventions in JSON, one where you omit a missing attribute and one where you map a missing attribute to NULL so that all your objects have the same schema.  This lets users write the same code for both cases.\r\n* A lot of nasty branches go away with the OR syntax, the same way they do in Ruby.  Filter, and other operations we might add in the future that take predicates, all magically have the correct behavior when there are missing attributes.\r\n* I think it's already normal in database land for NULL to not just be a plain old value, but I might be wrong about this.\r\n\r\nI think we should also introduce an `is_null` operator and special case `r(nil).eq(nil)` to return true."
  , issueCommentId = 13531503
  }