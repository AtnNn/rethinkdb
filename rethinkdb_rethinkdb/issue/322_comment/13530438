IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-14) 02 : 38 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13530438"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/322#issuecomment-13530438"
  , issueCommentCreatedAt = 2013 (-02) (-14) 02 : 38 : 45 UTC
  , issueCommentBody =
      "Ok, just had a long discussion about this with @mlucy, and we arrived at something we think is beautiful.\r\n\r\n1. If the user stores `{a: null}` object in the database, they get `{a: null}` object back when they query it (because if we dropped `a` on the way in, they'd get back a different document than the one they stored, and it could confuse people).\r\n2. We treat `null` as our bottom/maybe type. So, we define `null x anything` (where x is any operator) to be `null`.\r\n3. The only exception to above is boolean ops. We automatically convert `null` to false, which gives us a very nice property that we can do `row['foo'] | \"value\"`. This would also give us the right semantics for `filter` without doing anything special.\r\n\r\n"
  , issueCommentId = 13530438
  }