IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-13) 22 : 14 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13521555"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/322#issuecomment-13521555"
  , issueCommentCreatedAt = 2013 (-02) (-13) 22 : 14 : 46 UTC
  , issueCommentBody =
      "Having two operators with similar names but slightly different semantics seems bound to cause confusion. It seems like a big part of the issue is how the host language handles this. Ruby and javascript treat a null value as very similar (identical even) to a nonexistent value while python doesn't. It seems like this might be a case where we want different drivers to implement slightly different semantics since it will let the driver be as natural as possible to users of the host language. It seems like we could implement both on the server and have the client map its host language's existential operator to the same meaning as it has in the host language itself."
  , issueCommentId = 13521555
  }