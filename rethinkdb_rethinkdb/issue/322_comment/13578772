IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-14) 21 : 11 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13578772"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/322#issuecomment-13578772"
  , issueCommentCreatedAt = 2013 (-02) (-14) 21 : 11 : 14 UTC
  , issueCommentBody =
      "So the NaN and data loss issues are fixable. The reason why NaN sucks in JS is because it attaches no information about where that happened. In our case, the `maybe` type will contain backtrace info of where the transition occurred, so debugging would be easy.\r\n\r\nAs for data loss, @mlucy suggested having a `maybe` type that `null` automatically converts to if one does an operation on it. This way write ops (update, insert, etc.) would throw when they see it, but the user will almost never have to worry about null being different from undefined.\r\n\r\nAs for Joe's example, that's unfortunately a showstopper for converting `maybe/null` to `bool`, but the rest of the proposal is still sound (and quite good) I think.\r\n\r\n"
  , issueCommentId = 13578772
  }