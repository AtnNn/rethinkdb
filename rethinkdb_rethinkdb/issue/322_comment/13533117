IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-14) 04 : 51 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13533117"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/322#issuecomment-13533117"
  , issueCommentCreatedAt = 2013 (-02) (-14) 04 : 51 : 54 UTC
  , issueCommentBody =
      "Yeah the fear of accidentally deleting data is a very legitimate one and I think we just can't have that gotcha lying around.\r\n\r\nAlso converting to `false` in a boolean context seems like it can give some weird behaviors too. Suppose I do something like this:\r\n\r\n    users.filter(!row[\"articles\"].empty())\r\n\r\nHere articles is an array and I'm trying to find the users who have written an article Because `not` evaluates its argument in a boolean context it converts null to `false` then it negates it and gets `true` so we wind up with users who either have written an article or don't have that attribute. If I then run this through a reduce I'm just going to wind up getting `null` back and it won't be immediately obvious why."
  , issueCommentId = 13533117
  }