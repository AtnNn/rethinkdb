IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-17) 03 : 42 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19525190"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1016#issuecomment-19525190"
  , issueCommentCreatedAt = 2013 (-06) (-17) 03 : 42 : 41 UTC
  , issueCommentBody =
      "I went with __reql_type__ over __type__ mostly because it seemed like a\r\n.001% chance of collision instead of a .1% chance of collision. Also in the\r\ncase that someone does get the raw dict version of the object back there's\r\na chance they could not know that __type__ is a reql thing rather than\r\nsomething another developer added. Especially considering we have an\r\nexample in this thread of a user who's done something similar himself.\r\nOn Jun 16, 2013 4:53 PM, \"Michael Lucy\" <notifications@github.com> wrote:\r\n\r\n> I like this idea as well. We should bikeshed for a bit about the magic\r\n> keyword once this is moved into a milestone, though -- I would prefer\r\n> __type__ to __reql_type__.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1016#issuecomment-19518912>\r\n> .\r\n>"
  , issueCommentId = 19525190
  }