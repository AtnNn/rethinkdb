IssueComment
  { issueCommentUpdatedAt = 2016 (-07) (-02) 00 : 27 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 67937
        , simpleUserLogin = N "encryptio"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/67937?v=3"
        , simpleUserUrl = "https://api.github.com/users/encryptio"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/230072897"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1905#issuecomment-230072897"
  , issueCommentCreatedAt = 2016 (-07) (-02) 00 : 27 : 41 UTC
  , issueCommentBody =
      "@VeXocide @mlucy and I discussed this and came up with yet another alternative:\r\n\r\nIf your cluster ID isn't set, don't listen for inter-cluster connections. That way, you can still spin up an unclustered node for testing purposes, but you are forced to learn about `cluster_id`s before actually using them. That means you won't reach the case where you didn't know about the `cluster_id`, and in production accidentally merged two clusters.\r\n\r\nIt does come with an odd gotcha: if you're running a single node in production, and did not set a `cluster_id`, you need to be able to set one at runtime to deal with adding clustering to a live application. Not too difficult, but something to keep in mind."
  , issueCommentId = 230072897
  }