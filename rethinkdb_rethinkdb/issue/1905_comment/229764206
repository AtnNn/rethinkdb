IssueComment
  { issueCommentUpdatedAt = 2016 (-06) (-30) 19 : 31 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 67937
        , simpleUserLogin = N "encryptio"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/67937?v=3"
        , simpleUserUrl = "https://api.github.com/users/encryptio"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/229764206"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1905#issuecomment-229764206"
  , issueCommentCreatedAt = 2016 (-06) (-30) 19 : 31 : 18 UTC
  , issueCommentBody =
      "This is a deal-breaker for having multiple rethinkdb clusters safely in Kubernetes (#5897).\r\n\r\nI think if you choose the \"no cluster id\" startup phase to choose a single default value, say `\"\"` or `\"no_cluster_id_set\"`, which would have the same joining semantics (it joins servers only with `cluster_id` values equal to it), you could have the best (and worst) of both worlds; if no cluster id is set, then the nodes can join (low impact on simple use cases), and you have a `cluster_id` parameter you can set to different values to avoid problems when you have multiple clusters.\r\n\r\nA random cluster id more \"pure\", but I think it'd be too much of a pain for people testing out rethinkdb clustering.\r\n\r\nThe only issue I can see with it is people running multiple clusters in production with no cluster id, unaware of the risks; I think printing a scary message to the logs on cluster join (could link to the docs on `cluster_id`) would be sufficient (just like the default for `--bind` prints a message to the logs on startup.)"
  , issueCommentId = 229764206
  }