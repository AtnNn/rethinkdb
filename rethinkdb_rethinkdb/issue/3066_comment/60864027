IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-29) 02 : 19 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60864027"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3066#issuecomment-60864027"
  , issueCommentCreatedAt = 2014 (-10) (-29) 02 : 19 : 40 UTC
  , issueCommentBody =
      "@danielmewes: I don't think that your `ack_groups` actually satisfies @coffeemug's use case of requiring a majority of acks from the primary datacenter plus at least one ack from another datacenter. We could satisfy that with something like `voting_replicas: [machines in primary datacenter], extra_acks: 1`. But that proposal is narrowly tailored to @coffeemug's use case. @coffeemug: Are there any important use cases other than the one you mentioned?\r\n\r\nAlso, requiring a majority of acks within all replicas of each shard might be too restrictive. For example, suppose that the user wants three replicas in the primary datacenter and one in each of three other datacenters, but they don't want to wait for acks from the other datacenters before replying. I don't know if that's actually a typical use case or not."
  , issueCommentId = 60864027
  }