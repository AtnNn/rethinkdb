IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-04) 00 : 42 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/61575921"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3066#issuecomment-61575921"
  , issueCommentCreatedAt = 2014 (-11) (-04) 00 : 42 : 56 UTC
  , issueCommentBody =
      "OK, here's the latest proposal after some offline discussion with @coffeemug.\r\n\r\nFor the ReQL admin release, `table_config` will have a new top-level field `write_acks`. It takes one of the following values:\r\n\r\n  * `\"majority\"` (the default): writes must be acknowledged by a majority of the replicas for the shard.\r\n\r\n  * `\"single\"`: writes must be acknowledged by the primary for the shard.\r\n\r\n  * `[{replicas: [\"<server1>\", \"<server2>\", ...], count: <number>}, ...]`: For each document in the list, each write must be acknowledged by at least \"count\" of the servers listed in \"replicas\". So `\"majority\"` is equivalent to:\r\n    \r\n    ```js\r\n    write_acks: [{\r\n        replicas: [<all replicas of all shards>],\r\n        count: ceil((<replication factor> + 1) / 2)\r\n        }]\r\n    ```\r\n    \r\n    and `\"single\"` is equivalent to:\r\n    \r\n    ```js\r\n    [{replicas: [<all replicas of all shards>], count: 1}]\r\n    ```\r\n    \r\n    But the user can also use this syntax for more interesting things, like:\r\n    \r\n    ```js\r\n    [{replicas: [<primary datacenter replicas>], count: 2},\r\n     {replicas: [<other datacenter replicas>], count: 1}]\r\n     ```\r\n\r\nWe'll also allow the user to override this on a per-write basis, but this might not be worth the trouble for the first release.\r\n\r\nHere are the nitty-gritty details:\r\n  * Internally we'll store what the user entered; we won't automagically expand `\"majority\"` and `\"single\"` into their equivalents. This way, the user can write to `shards` without breaking `write_acks`.\r\n  * If the user specifies a non-trivial setting for `write_acks`, we'll validate it against `shards` to make sure that it's satisfiable.\r\n  * We'll automatically remove servers from `write_acks[n].replicas` if they're permanently removed, but we won't adjust `write_acks[n].count`\r\n  * If permanently removing a server makes `write_acks` unsatisfiable, we'll show an issue.\r\n  * `\"majority\"` will calculate `<replication_factor>` by picking the shard with the most replicas. So `\"majority\"` will sometimes be unsatisfiable; for example, if the user has two shards of three replicas each, then permanently removes two replicas from one of the shards, then it will become unsatisfiable.\r\n\r\nFor the Raft release, we'll have a concept of a \"failover threshold\". The failover threshold has the same format as the write ack threshold, in the sense that it's a predicate on a set of machines; the automatic failover system will guarantee that any write that is acknowledged with an ack setting at least as strong as the failover threshold is guaranteed to be preserved by the automatic failover. By default, the failover threshold is `\"majority\"`. We'll let the user set the failover threshold manually through a field in `table_config`. Often the failover threshold will be the same as the write ack threshold, but the user might want something different; for example, they might want writes to be acknowledged as soon as they're written to the primary, but they might want to retain the ability to fail over even if they lose a machine. If the user sets the failover threshold stronger than the write ack threshold, then they can lose some writes during auto-failover.\r\n\r\nOpen questions:\r\n  * Can we improve the format for specifying non-trivial ack requirements?\r\n  * Should `table.reconfigure()` set `write_acks`? "
  , issueCommentId = 61575921
  }