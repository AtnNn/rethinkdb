IssueComment
  { issueCommentUpdatedAt = 2016 (-08) (-17) 23 : 36 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/240581863"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/6060#issuecomment-240581863"
  , issueCommentCreatedAt = 2016 (-08) (-17) 23 : 36 : 50 UTC
  , issueCommentBody =
      "> I would appreciate if someone could comment on exactly why restoring onto a cluster isn't always faster than a single node, though.\r\n\r\nThat's surprising to me too. If all replicas are on the local machine that `rethinkdb restore` is connecting to, that makes sense because it reduces the CPU and network overhead required for re-routing the writes to the appropriate node. However if you use a single shard in a cluster, RethinkDB will still pick a random server for the shard of each table. It will not necessarily be on the server that the `restore` script connects to. So I wouldn't expect this to provide any performance benefit."
  , issueCommentId = 240581863
  }