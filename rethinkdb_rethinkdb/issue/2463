Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-08) (-27) 00 : 06 : 45 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2463/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2463"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2463
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Arity errors"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2463"
  , issueCreatedAt = 2014 (-05) (-24) 18 : 31 : 35 UTC
  , issueBody =
      Just
        "For\r\n```\r\nr.table(\"test\").zip(1)\r\n```\r\n\r\nThe server will send back this error:\r\n```\r\nRqlCompileError: Expected 1 argument(s) but found 2. in:\r\nr.db(\"test\").table(\"test\").zip(1)\r\n```\r\n\r\nThe error we send back is not super-friendly because\r\n- There is no backtrace\r\n- We do not report the name of the function that was called with the wrong number of arguments\r\n- The server suppose that everything uses the notation `r.zip(r.table('test'), 1)`\r\n\r\nAbout the last point, `r.and` is a valid syntax, so we can't just suppose that we always chain methods. But if the function that triggered the error was reported, the driver could catch the error and update the number of arguments depending of the method.\r\n\r\n\r\nPutting in polish."
  , issueState = "open"
  , issueId = Id 34239747
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }