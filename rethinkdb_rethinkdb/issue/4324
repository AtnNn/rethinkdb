Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2015 (-06) (-02) 03 : 06 : 16 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4324/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4324"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4324
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Create issues from mblair's gist \"An Operator's look at RethinkDB\""
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4324"
  , issueCreatedAt = 2015 (-06) (-02) 02 : 04 : 06 UTC
  , issueBody =
      Just
        "@mblair gave a lightning talk recently at our SF meetup and had a lot of good input. This is a placeholder issue so we don't forget to break it out into individual issues. Not everything in the paste below is a problem, lots are us doing it right. Some of these are also issues of documentation.\r\n\r\nOriginally from: https://gist.github.com/mblair/748064f461c0950cb7d6\r\n\r\n# An Operator's Look at RethinkDB\r\n## Matt Blair - @mattyblair - Flipboard\r\n\r\n## The Getting Started Experience\r\n\r\n* It's in Homebrew and *just runs* (relative to, say, HBase): awesome!\r\n* Having packages for popular Linux distros (I use Ubuntu personally and at work): awesome!\r\n* Serving the GPG key over HTTP: not so awesome :-/\r\n* `apt-get -y install rethinkdb`\r\n* It didn't start by default- great! I hate when services do this. I then looked at the start script to see how it knew (usually daemons use `/etc/default/blah`, but it has custom logic to see if there's anything in `/etc/rethinkdb/instances.d`, which is cool).\r\n* I then wondered if it would restart upon upgrade, so...\r\n* I looked at the default conf; it's just comments, sweet that it starts without having to configure it!\r\n* Also, it's SHORT. I'm sure it'll grow over time, but compared to, say, Cassandra (~900 lines, including comments and blanks), this is awesome!\r\n* It's ini-style; does the last value win for duplicate keys? It's often handy to just append and keep it moving, instead of having to write sed invocations.\r\n* `cd /etc/rethinkdb && cp default.conf.sample instances.d/`\r\n* `sudo service rethinkdb start`\r\n* Oh cool, it mentioned where it's listening.\r\n* `echo \"bind=all\" > /etc/rethinkdb/instances.d/default.conf`\r\n* `apt-get -y install rethinkdb=2.0.1`\r\n* Couldn't be found :-(\r\n* `apt-cache show rethinkdb | head -n25`\r\n* ah, add `~0trusty`\r\n* `apt-get -y --force-yes install rethinkdb=2.0.1~0trusty`\r\n* Oh, it does restart upon upgrades :-( - less than ideal because I often stage upgrades by installing binaries everywhere, then doing rolling restarts.\r\n* The source compilation steps say to run `./configure --allow-fetch`; What is it fetching? Some shops don't allow machines with compilers to access the internet, and vice versa. It'd be good to enumerate what dependencies can be staged ahead of time.\r\n\r\n## Ops Documentation Questions\r\n* The memory usage page talks about expecting \"each query and background process to use 1-20MB of memory\"; what about connections? MySQL has memory overhead for each open connection, which can become a bottleneck. Is this an issue for RethinkDB?\r\n* Hot backup- \"it will use some cluster resources, but it will not lock out any of the clients, so you can safely run it on a live cluster.\" A little more detail would be great here; HBase 1.1 has added request throttling, so folks doing scripted backups or analytical queries (for example) can throttle by table or user. I don't think request throttling is needed, but some more information about how the hot backup job affects interactive queries would be great.\r\n* Monitoring- system info is just a RethinkDB table, no reporters :-(\r\n  * Important for integration into existing tools (Nagios, OpenTSDB,\r\n   Graphite, Riemann...); to write an integration, you need a RethinkDB client.\r\n  * JSON over HTTP would be cool!\r\n  * What to monitor? If I wanted to throw together a RethinkDB dashboard, what metrics would I choose? Riak has a 'Riak Metrics to Graph' section of their docs, for example.\r\n  * Latency numbers, not just throughput! (Riak has median/95/99/max)\r\n* Version migration- can it be done in a rolling fashion? The docs don't say either way.\r\n* systemd support appears to be in progress- Ubuntu 16.04 will (probably) use it by default, so having an answer here would be cool.\r\n* Log syntax docs?\r\n* Log rotation- built in? No? (no is just fine, ops people know how to use logrotate)\r\n* Log levels? Are they configurable? Without restarting?\r\n\r\n### Clustering\r\n* I haven't tested it because I'm waiting for the Raft stuff to land in 2.1 to really give it a workout.\r\n\r\n### Other random thoughts\r\n* 'Writing RethinkDB drivers'- very well written...now I might have to write one :-)\r\n* Mike mentioned deletes during his talk- are they soft deletes, or real deletes? Since it's log-structured, I'm guessing they're soft and compaction needs to occur for the space to be freed?\r\n* Is there a preferred filesystem? EXT4/XFS/ZFS?\r\n* What do latency and throughput look like when the data size is larger than the amount of memory you've allocated to RethinkDB? I get that it's not a memory-first DB like MongoDB, but a quick answer here would alleviate the inevitable \"is this thing web scale?\" questions.\r\n* Official benchmarks, for both bare metal and AWS. I know that Scientific Benchmarking\226\8222\162 is hard, so even just code users can run themselves to do their own stress tests would be great.\r\n* AWS instance recommendations! Surely it'll run well on i2s, but what about r3s? c3s? EBS with PIOPS?\r\n* Spreading over multiple disk volumes? \"Note: it is possible to attach more specialized EBS volumes and have RethinkDB store your data on them, but this option is not yet available out of the box.\" (http://rethinkdb.com/docs/paas/) Cassandra has a JBOD mode where they'll spread the data across volumes; striping (or RAID10) is fine for now.\r\n* For backup/restore, if the restored node has a different FQDN, do you need to mark the old node as \"down\" before bringing the new one up? Does DNS matter at all (please say no)?\r\n* What happens when disks die, or fill up? Can reads still occur when disks are full? Cassandra has a blog post about this (http://www.datastax.com/dev/blog/handling-disk-failures-in-cassandra-1-2), some answers here would be great.\r\n"
  , issueState = "open"
  , issueId = Id 83789672
  , issueComments = 1
  , issueMilestone = Nothing
  }