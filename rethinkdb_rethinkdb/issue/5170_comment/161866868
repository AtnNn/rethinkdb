IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-04) 03 : 53 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1339007
        , simpleUserLogin = N "rlancer"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1339007?v=3"
        , simpleUserUrl = "https://api.github.com/users/rlancer"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/161866868"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5170#issuecomment-161866868"
  , issueCommentCreatedAt = 2015 (-12) (-04) 03 : 53 : 14 UTC
  , issueCommentBody =
      "Very true about not knowing the type till the query runs but would it be\npossible to do some introspection of queries?\n\nOn Thu, Dec 3, 2015 at 8:00 PM Daniel Mewes <notifications@github.com>\nwrote:\n\n> @rlancer <https://github.com/rlancer> Yes, but you would also get the\n> result of the query in the same request, so it wouldn't be an additional\n> roundtrip like when first running with .typeOf().\n>\n> Or do you need to know if a given query returns an object or sequence, and\n> then run a completely different query depending on what the answer is?\n>\n> Determining whether a query is going to return a sequence or not without\n> running it first is not trivial in general, and sometimes not possible. For\n> example consider the query\n>\n> r.branch(r.random(2).eq(0), r.range(10000), \"str\")\n>\n> This query will return a string in half of the cases, and a sequence in\n> the other half. You can have similar (more realistic) queries where the\n> type depends on the data in a particular table.\n>\n> \8212\n> Reply to this email directly or view it on GitHub\n> <https://github.com/rethinkdb/rethinkdb/issues/5170#issuecomment-161841282>\n> .\n>\n"
  , issueCommentId = 161866868
  }