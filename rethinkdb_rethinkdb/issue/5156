Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 46 : 43 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5156/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5156"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/JavaScript%20/%20Coffee"
          , labelName = "JavaScript / Coffee"
          }
      ]
  , issueNumber = 5156
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 499088
        , simpleUserLogin = N "electerious"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/499088?v=3"
        , simpleUserUrl = "https://api.github.com/users/electerious"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Misleading error when using connection with different module instance"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5156"
  , issueCreatedAt = 2015 (-11) (-30) 11 : 44 : 57 UTC
  , issueBody =
      Just
        "Hi, I'm using RethinkDB in Node.js. My main application passes an open connection to a plugin. Using the connection inside the main-script works fine, but running something inside a plugin throws the following error:\r\n\r\n```\r\nUnhandled rejection ReqlDriverError: First argument to `run` must be an open connection.\r\n```\r\n\r\nIt took me a while to find the problem as the provided error is misleading. It's not the connection casing the issue, it's the rethinkdb module! I import/require it in the main application and inside plugins. It's the same module, but a different instance of it. The connection itself is the same and still open.\r\n\r\nPassing the connection *and* the rethinkdb instance to plugins works. Passing the connection to plugins and using their rethinkdb does not. The connection must be from the same instance as later used to get data from the database.\r\n\r\nHere's an abstract code example of the problem:\r\n\r\n```js\r\n// ----- Main application -----\r\nimport r from 'rethinkdb'\r\n\r\n// Connect to db and pass connection to plugin\r\nr.connect({ host, port, db, authKey }, plugin.setAndTestConnection)\r\n```\r\n```js\r\n// ----- Plugin -----\r\nimport r from 'rethinkdb'\r\n\r\nconst setAndTestConnection = function(err, connection) {\r\n    r.table('users').run(connection, (err, cursor) => {})\r\n    // => Unhandled rejection ReqlDriverError: First argument to `run` must be an open connection.\r\n    // Connection is still open, but mainApp.r !== plugin.r\r\n}\r\n```\r\n\r\nHere're some more details about my problem and the solution: http://stackoverflow.com/questions/33973820/rethinkdb-connection-must-be-open-but-never-gets-closed/33984885?noredirect=1#comment55732938_33984885\r\n\r\nRethinkDB version: 2.2.1\r\nhapi.js version: 11.1.2"
  , issueState = "open"
  , issueId = Id 119476021
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }