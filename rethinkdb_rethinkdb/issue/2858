Issue
  { issueClosedAt = Just 2014 (-08) (-12) 23 : 50 : 22 UTC
  , issueUpdatedAt = 2014 (-08) (-20) 03 : 58 : 19 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2858/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2858"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 2858
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "\"r.table_elect_directors()\" command"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2858"
  , issueCreatedAt = 2014 (-08) (-11) 21 : 06 : 33 UTC
  , issueBody =
      Just
        "As part of #2680, we need a command to select new directors (i.e. masters) for a namespace.\r\n\r\nI propose the following API:\r\n* `r.table_elect_directors(\"db.table\")` chooses a new director for each shard of the given table. The procedure for choosing a director is as follows: Look at the list of director servers in the shard's config (see #2853). Go through them in order. Choose the first server that's available and up-to-date. If none are available and up-to-date, choose the first server that's available. If none are available, give the user an error message.\r\n* `r.table_elect_directors(\"db.table\", [\"server_1_name\", \"server_2_name\"])` manually selects the directors for the given table.\r\n* `r.table_elect_directors()` elects new directors for all tables. It's equivalent to calling the first version on each table individually.\r\n\r\nAny time that the user writes to a row in `rethinkdb.table_config`, the system will automatically do the equivalent of `r.table_elect_directors(<the modified row>)`.\r\n\r\nAs part of my work on #2853, I made a barely-usable stub implementation of the director election system, but it needs to be fleshed out and exposed to the user.\r\n\r\nWe also need to review this API and decide if it's good or not. One problem is that it's inconsistent with `table_create()` and `table_drop()`; they can be called on a database, but the proposed API is top-level."
  , issueState = "closed"
  , issueId = Id 40000695
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 18
          , milestoneClosedIssues = 180
          , milestoneDescription =
              Just
                "These feature requests, bugs and pull requests have been acknowledged, but will not be fixed."
          , milestoneTitle = "wontfix"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/18"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 24 UTC
          , milestoneState = "closed"
          }
  }