IssueComment
  { issueCommentUpdatedAt = 2016 (-04) (-25) 23 : 36 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/214555695"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5707#issuecomment-214555695"
  , issueCommentCreatedAt = 2016 (-04) (-25) 22 : 55 : 12 UTC
  , issueCommentBody =
      "~~I think this term should be named something like `map_values`. I think the name `map_object` might confuse people into thinking `.map(...)` doesn't work on objects.~~\r\n\r\n**[edit]**: just realized `map` still isn't supported on single selections (#2768), so ignore that.\r\n\r\nI also think the signature should be three-arguments: `function(val, key, row)` with `val` as the first argument since that's all you need in the most common case.\r\n\r\n@danielmewes: I'm not sure I'm a fan of returning `[k', v']` as a way to rename/drop a key. You would run into problems if you were trying to build array values or if your value is already an array. I certainly like the idea and it would be really useful, but I think the behavior is a unexpected. Perhaps this could be prevented by wrapping the value in an `r.literal(...)`, but I still think that's a bit subtle."
  , issueCommentId = 214555695
  }