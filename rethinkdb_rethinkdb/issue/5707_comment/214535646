IssueComment
  { issueCommentUpdatedAt = 2016 (-04) (-25) 21 : 42 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/214535646"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5707#issuecomment-214535646"
  , issueCommentCreatedAt = 2016 (-04) (-25) 21 : 42 : 13 UTC
  , issueCommentBody =
      "Thanks for the proposal @mike-thompson-day8 . Having a special command for this makes sense I think.\r\n\r\nMy suggestion for a name is `map_object`.\r\n\r\nOne question is whether the function should be able to manipulate keys or just values. In the simplest case, the mapping function `function(k, v) -> v'` would return the new value for the key `k`, but couldn't change the key itself. This avoids a bunch of edge cases, but is obviously less powerful.\r\n\r\nAs a next step, we can allow the function to return a pair `[k', v']` like in your proposal that might rename the key, but cannot delete it. Finally, we could also allow returning a `null` key such as `[null, v]` to drop a key from the result.\r\n\r\nWe'll try to discuss this proposal for one of the upcoming releases."
  , issueCommentId = 214535646
  }