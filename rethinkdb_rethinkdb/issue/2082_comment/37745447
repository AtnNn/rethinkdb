IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-16) 01 : 50 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 4996067
        , simpleUserLogin = N "matanster"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/4996067?v=3"
        , simpleUserUrl = "https://api.github.com/users/matanster"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/37745447"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2082#issuecomment-37745447"
  , issueCommentCreatedAt = 2014 (-03) (-16) 01 : 50 : 04 UTC
  , issueCommentBody =
      "In node.js, being an evented server, wouldn't a connection be unsafe the same as in a multi-threaded environment? the way node.js programming works, it would be quite hard to keep track of queuing work for a connection so that it is only used linearly. Practically meaning that would mean opening a connection per query, rather than engineering non-blocking code to serialize queries, wouldn't it?\r\n\r\nIt is very unproductive to serialize access to a connection in the node.js programing paradigm...\r\n\r\nIs it confirmed that rethinkdb is not thread safe right now? that would mean it's not node.js safe unless each query uses its own connection wouldn't it?\r\n\r\n"
  , issueCommentId = 37745447
  }