IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-06) 18 : 38 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 167416
        , simpleUserLogin = N "VeXocide"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/167416?v=3"
        , simpleUserUrl = "https://api.github.com/users/VeXocide"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/192827921"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5485#issuecomment-192827921"
  , issueCommentCreatedAt = 2016 (-03) (-06) 08 : 19 : 18 UTC
  , issueCommentBody =
      "I come bearing both good and bad news, and 'll start with the latter.\r\n\r\nIf you currently run `conn.server()` on a connection to a proxy it crashes the proxy with the failed guarantee below. Unfortunately we assume the server we're connected to has a name, which a proxy doesn't.\r\n\r\nThe solution however should be pretty simple, and this being a bug we should straighten it out as soon as possible.\r\n\r\n```\r\nVersion: rethinkdb 2.2.1-516-gcd6809-dirty (debug) (CLANG 3.5.0 (tags/RELEASE_350/final))\r\nerror: Error in src/rdb_protocol/query_server.cc at line 87:\r\nerror: Guarantee failed: [server_conf] \r\nerror: Backtrace:\r\nerror: Sun Mar  6 00:00:38 2016\r\n       \r\n       1 [0x201b78b]: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:108\r\n       2 [0x201c3d0]: backtrace_t::backtrace_t() at backtrace.cc:210 (discriminator 1)\r\n       3 [0x201d78c]: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:331\r\n       4 [0x201c057]: format_backtrace(bool) at backtrace.cc:205\r\n       5 [0x203136a]: report_fatal_error(char const*, int, char const*, ...) at errors.cc:85\r\n       6 [0x1c39c21]: rdb_query_server_t::fill_server_info(ql::response_t*) at query_server.cc:87 (discriminator 5)\r\n       7 [0x1c3998e]: rdb_query_server_t::run_query(ql::query_params_t*, ql::response_t*, signal_t*) at query_server.cc:59\r\n       8 [0x202d8a5]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const::{lambda()#1}::operator()() const at server.cc:551\r\n       9 [0x202d4a3]: void save_exception<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const::{lambda()#1}>(std::__exception_ptr::exception_ptr*, std::string*, cond_t*, void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const::{lambda()#1}&&) at server.cc:501\r\n       10 [0x202d185]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}::operator()() const at server.cc:549\r\n       11 [0x202cffc]: callable_action_instance_t<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}>::run_action() at callable_action.hpp:32\r\n       12 [0x149d676]: callable_action_wrapper_t::run() at runtime_utils.cc:48\r\n       13 [0x14973cc]: coro_t::run() at coroutines.cc:205 (discriminator 1)\r\n       14 [0x202cddd]: void coro_t::spawn_now_dangerously<void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}>(void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*)::{lambda()#1}&&) at coroutines.hpp:57\r\n       15 [0x202c616]: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*) at server.cc:539\r\n       16 [0x20290b5]: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at server.cc:440\r\n       17 [0x202dee0]: void std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, auto_drainer_t::lock_t&, void>(query_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, auto_drainer_t::lock_t&) const at functional:601\r\n       18 [0x202de1b]: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::__call<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&, 0ul, 1ul, 2ul>(std::tuple<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&&, std::_Index_tuple<0ul, 1ul, 2ul>) at functional:1295\r\n       19 [0x202dd6d]: void std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)>::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t>&, void>(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:1353\r\n       20 [0x202da52]: std::_Function_handler<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&), std::_Bind<std::_Mem_fn<void (query_server_t::*)(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t)> (query_server_t*, std::_Placeholder<1>, auto_drainer_t::lock_t)> >::_M_invoke(std::_Any_data const&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at functional:2073\r\n       21 [0x147b698]: std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at functional:2471\r\n       22 [0x147783c]: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:994\r\n       23 [0x147de19]: void std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)>::operator()<int&, void>(linux_nonthrowing_tcp_listener_t*, int&) const at functional:601\r\n       24 [0x147dd80]: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) at functional:1295\r\n       25 [0x147dd06]: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>::operator()<, void>() at functional:1353\r\n       26 [0x147dc7c]: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >::run_action() at callable_action.hpp:32\r\n       27 [0x149d676]: callable_action_wrapper_t::run() at runtime_utils.cc:48\r\n       28 [0x14973cc]: coro_t::run() at coroutines.cc:205 (discriminator 1)\r\n       29 [0x147b2bd]: void coro_t::spawn_now_dangerously<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(int)> (linux_nonthrowing_tcp_listener_t*, int)>&&) at coroutines.hpp:57\r\n       30 [0x147672a]: linux_nonthrowing_tcp_listener_t::accept_loop(auto_drainer_t::lock_t) at network.cc:961\r\n       31 [0x147facb]: void std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)>::operator()<auto_drainer_t::lock_t&, void>(linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t&) const at functional:601\r\n       32 [0x147fa20]: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) at functional:1295\r\n       33 [0x147f9a6]: void std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1353\r\n       34 [0x147f8ec]: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:32\r\n       35 [0x149d676]: callable_action_wrapper_t::run() at runtime_utils.cc:48\r\n       36 [0x14973cc]: coro_t::run() at coroutines.cc:205 (discriminator 1)\r\n       37 [0x147a51d]: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (linux_nonthrowing_tcp_listener_t::*)(auto_drainer_t::lock_t)> (linux_nonthrowing_tcp_listener_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:63\r\n       38 [0x1476172]: linux_nonthrowing_tcp_listener_t::begin_listening() at network.cc:753 (discriminator 1)\r\n       39 [0x1477be1]: linux_tcp_listener_t::linux_tcp_listener_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, std::function<void (scoped_ptr_t<linux_tcp_conn_descriptor_t>&)> const&) at network.cc:1025 (discriminator 1)\r\n       40 [0x202771b]: query_server_t::query_server_t(rdb_context_t*, std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, query_handler_t*, unsigned int) at server.cc:211 (discriminator 1)\r\n       41 [0x1c39661]: rdb_query_server_t::rdb_query_server_t(std::set<ip_address_t, std::less<ip_address_t>, std::allocator<ip_address_t> > const&, int, rdb_context_t*, server_config_client_t*, uuid_u const&) at query_server.cc:20\r\n       42 [0x15c2d13]: do_serve(io_backender_t*, bool, base_path_t const&, metadata_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:503\r\n       43 [0x15c4565]: serve_proxy(serve_info_t const&, os_signal_cond_t*) at serve.cc:668 (discriminator 2)\r\n       44 [0x1598e2e]: run_rethinkdb_proxy(serve_info_t*, bool*) at command_line.cc:912\r\n       45 [0x15ac096]: void std::_Bind<void (*(serve_info_t*, bool*))(serve_info_t*, bool*)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) at functional:1295\r\n       46 [0x15ac016]: void std::_Bind<void (*(serve_info_t*, bool*))(serve_info_t*, bool*)>::operator()<, void>() at functional:1353\r\n       47 [0x15abddd]: std::_Function_handler<void (), std::_Bind<void (*(serve_info_t*, bool*))(serve_info_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:2073\r\n       48 [0x1495c1e]: std::function<void ()>::operator()() const at functional:2471\r\n       49 [0x1495ce1]: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\r\n       50 [0x149644a]: void std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()<std::function<void ()>&, void>(starter_t*, std::function<void ()>&) const at functional:601\r\n       51 [0x14963b0]: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) at functional:1295\r\n       52 [0x1496336]: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::operator()<, void>() at functional:1353\r\n       53 [0x1495eed]: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:2073\r\n       54 [0x1495c1e]: std::function<void ()>::operator()() const at functional:2471\r\n       55 [0x1495b89]: callable_action_instance_t<std::function<void ()>&>::run_action() at callable_action.hpp:32\r\n       56 [0x149d676]: callable_action_wrapper_t::run() at runtime_utils.cc:48\r\n       57 [0x14973cc]: coro_t::run() at coroutines.cc:205 (discriminator 1)\r\n       58 [0x149597d]: coro_t* coro_t::spawn_sometime<std::function<void ()>&>(std::function<void ()>&) at coroutines.hpp:63\r\n       59 [0x1495919]: starter_t::on_thread_switch() at runtime.cc:57\r\n       60 [0x148d9f6]: linux_message_hub_t::on_event(int) at message_hub.cc:154\r\n       61 [0x1485be7]: epoll_event_queue_t::run() at epoll.cc:115\r\n       62 [0x148f3b7]: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:172\r\n       63 [0x7f3c34a17182]: /lib/x86_64-linux-gnu/libpthread.so.0(+0x8182) [0x7f3c34a17182] at 0x7f3c34a17182 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       64 [0x7f3c3474447d]: clone+0x6d at 0x7f3c3474447d (/lib/x86_64-linux-gnu/libc.so.6)\r\nerror: Exiting.\r\n```"
  , issueCommentId = 192827921
  }