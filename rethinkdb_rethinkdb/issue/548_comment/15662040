IssueComment
  { issueCommentUpdatedAt = 2013 (-03) (-29) 21 : 41 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15662040"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/548#issuecomment-15662040"
  , issueCommentCreatedAt = 2013 (-03) (-29) 21 : 41 : 24 UTC
  , issueCommentBody =
      "Bases are mostly useful in the case of empty streams I agree that we can deal with this in other ways but basically every implementation of reduce (I checked underscore, python and ruby) that I've found allows passing a base so I think this is the more familiar way to handle this. In fact I think it would look weird for us to have a function called reduce that didn't take a base when basically every other reduce function does.\r\n\r\nFurthermore I'm not convinced that taking away the base is going to stop people from being confused. The confusion here stems fundamentally from the fact that doing a distributed reduction is different from non distributed reductions and we haven't done a great job of presenting these differences but I think that's what we should try to do through documentation and better error messages. I don't think just dropping the base is going to make this understandable."
  , issueCommentId = 15662040
  }