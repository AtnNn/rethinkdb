IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-01) 22 : 07 : 55 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 91093
        , simpleUserLogin = N "mfenniak"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/91093?v=3"
        , simpleUserUrl = "https://api.github.com/users/mfenniak"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15740394"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/548#issuecomment-15740394"
  , issueCommentCreatedAt = 2013 (-04) (-01) 22 : 07 : 55 UTC
  , issueCommentBody =
      "I agree with @wmrowan's point-of-view.  I don't think it's worth it for you guys to add a feature, especially one who's performance will be subpar by design, just to help document another feature.  As the initiating complainer, I can assure you that I don't need a `fold` capability.  I just completely didn't understand the `reduce` documentation, and my confusion was multiplied by assuming this was an error in my new driver for quite a long time.\r\n\r\nHere are some things that would've helped me, and hopefully would help the next person to come along.\r\n\r\n1. Describing reduce more specifically in the API docs.  \"Produce a single value from a sequence through repeated application of a reduction function.\" is accurate and clear, but it's not specific.  Might I suggest appending text such as: \"Either function parameter may be an individual value from the sequence, or the result of a previous invocation of the reduction function.\"\r\n\r\n2. Change the function variables in the `reduce` doc to something other than `acc` and `val`.  I assume these are meant to be short for accumulate and value, which I think is a red-herring towards the `fold` interpretation.  For example, `left` and `right` would've definitely put me in a different mental state.  `left` and `right` make me think of a tree of O(log2(N)) operations; I don't know if this is actually accurate, but I believe it would result in correct reductions functions.\r\n\r\n3. Showing the datums involved in a \"expected TYPE x but found y\" error would be excellent.\r\n\r\nRemoving `base` would also probably reduce confusion, but, it might also reduce confusion to document what it is and when it is used.  If it's useful, then documenting it might be a better approach than removing it."
  , issueCommentId = 15740394
  }