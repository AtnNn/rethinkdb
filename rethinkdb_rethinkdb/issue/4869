Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 18 : 13 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4869/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4869"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Ruby"
          , labelName = "Ruby"
          }
      ]
  , issueNumber = 4869
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 201442
        , simpleUserLogin = N "Wardrop"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/201442?v=3"
        , simpleUserUrl = "https://api.github.com/users/Wardrop"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Managing connections with Ruby driver"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4869"
  , issueCreatedAt = 2015 (-09) (-21) 05 : 33 : 12 UTC
  , issueBody =
      Just
        "Hi,\n\nI'm getting my hands dirty with RethinkDB and Ruby. One thing I find really awkward is the requirement to pass a connection to #run. I was hoping to create reusable table references like so:\n\n``` ruby\nMyTable = RethinkDB::RQL.new.table('my_table')\nMyTable.limit(2).run #=> [{...}, {...}]\n```\n\nBut alas there's no way I can set a connection for a RethinkDB::RQL instance. What would be nice if there was a chainable method to allow setting a connection, which would allow you to compose reusable RQL instances, like so:\n\n``` ruby\nrql = RethinkDB::RQL.new.connection(conn)\nMyTable = rql.table('my_table')\nMyOtherTable = rql.table('my_other_table')\n```\n\nCould some method like this please be added so connections can be bound to RQL instances? Having to pass a connection to EVERY call to RethinkDB seems unnecessarily verbose.\n\nCheers\n"
  , issueState = "open"
  , issueId = Id 107447030
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }