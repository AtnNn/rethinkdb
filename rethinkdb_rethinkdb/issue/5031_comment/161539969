IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-03) 07 : 24 : 16 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 478118
        , simpleUserLogin = N "bchavez"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/478118?v=3"
        , simpleUserUrl = "https://api.github.com/users/bchavez"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/161539969"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5031#issuecomment-161539969"
  , issueCommentCreatedAt = 2015 (-12) (-03) 07 : 24 : 16 UTC
  , issueCommentBody =
      "For what it's worth, [the C# driver here](https://github.com/bchavez/RethinkDb.Driver) supports `Cursor.ToObservable()` via Reactive Extensions (Rx). Actually, in Rx `.ToObservable()` is the dual byproduct of implementing `IEnumerable` in C# **Cursors**. So, the following is possible with change feed cursors in C#:\r\n\r\n```\r\nvar changes = r.db(\"marvel\").table(\"heros\")\r\n               .changes()\r\n               .runChanges<Hero>(conn);\r\n\r\nvar observable = changes.ToObservable();\r\nobservable.Subscribe(OnNext, OnError, OnCompleted);\r\n```\r\n\r\nIt works pretty well in this case. Here, a RethinkDB change feed cursor can be bridged via **Rx** into a SingalR channel without much effort. I wish we had something like node streams in .NET but this is the best we can do in C#.... for now anyway :+1: ."
  , issueCommentId = 161539969
  }