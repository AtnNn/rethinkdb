IssueComment
  { issueCommentUpdatedAt = 2016 (-05) (-30) 06 : 12 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 64156
        , simpleUserLogin = N "titoBouzout"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/64156?v=3"
        , simpleUserUrl = "https://api.github.com/users/titoBouzout"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/222356699"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1716#issuecomment-222356699"
  , issueCommentCreatedAt = 2016 (-05) (-29) 11 : 54 : 05 UTC
  , issueCommentBody =
      "Been reading about rethinkdb for years, last days intensively as I finally had opportunity to scale a project and decided to use it. I was very puzzled for long hours, even took of my sleep time figuring out how to keep a unique username and also a unique email for a user. It seems to me I reached the deepest of the ocean on this thread and is not possible. I may or may not regret in future, but I want to offer a far from ideal workaround for these people that really want to use rethinkdb which seems really nice and also solve this problem, just force it via the application: \r\n\r\n`if(taken[email] !== undefined || taken[username] !== undefined) throw Error('username or email already taken!'); else taken[email] = taken[username] = null`\r\n\r\nI believe this should workaround the situation for most websites. By adding new instances syncing this could also get really complicated. In that case I wish you success with the project and you will probably found a way to do it right. There's also possibility for improving this with some clever short hash.\r\n\r\nEDIT: Seems to me storing 500.000 usernames and emails of avg length on a js plain object takes around 200Mb so pretty cheap. I tested a hash function to make the strings smaller, but I noticed that rehashing (in case of restart) 1.000.000 items could take more than half an hour. So I'm gonna store staff as is which takes seconds."
  , issueCommentId = 222356699
  }