IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-07) 21 : 26 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39785775"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1023#issuecomment-39785775"
  , issueCommentCreatedAt = 2014 (-04) (-07) 21 : 26 : 01 UTC
  , issueCommentBody =
      "I sort of don't like `r.unbounded`, because it doesn't make sense outside the narrow language of `between`.  (It's also less useful for compound indexes.  For a non-compound index, if you want all x s.t. `a < x < b`, you can write `.between(a, b, left_bound:'open')`.  If we had separate minval and maxval, you could write `.between([a, r.maxval], [b, r.minval], index:'compound')` to get the same behavior on the first field of the compound index (whereas `.between([a, r.unbounded], [b, r.unbounded], {index:'compound', lef_bound:'open'})` wouldn't work).)"
  , issueCommentId = 39785775
  }