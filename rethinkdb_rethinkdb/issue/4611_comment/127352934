IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-03) 18 : 01 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/127352934"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4611#issuecomment-127352934"
  , issueCommentCreatedAt = 2015 (-08) (-03) 18 : 01 : 40 UTC
  , issueCommentBody =
      "Hi @qusiax, thank you for reporting this.\r\nFrom the looks of it, this is related to the execution of an `r.js` statement. It definitely looks like a server bug.\r\n\r\nHere's the reformatted version of the backtrace:\r\n```\r\nError in src/extproc/js_runner.cc at line 178:\r\nGuarantee failed: [fn_id != __null] \r\nBacktrace:\r\nSat Aug  1 06:32:48 2015\r\n\r\n1: backtrace_t::backtrace_t() at ??:?\r\n2: format_backtrace(bool) at ??:?\r\n3: report_fatal_error(char const*, int, char const*, ...) at ??:?\r\n4: js_runner_t::call(std::string const&, std::vector<ql::datum_t, std::allocator<ql::datum_t> > const&, js_runner_t::req_config_t const&) at ??:?\r\n5: ql::js_func_t::call(ql::env_t*, std::vector<ql::datum_t, std::allocator<ql::datum_t> > const&, ql::eval_flags_t) const at ??:?\r\n6: ql::func_t::call(ql::env_t*, ql::datum_t, ql::eval_flags_t) const at ??:?\r\n7: ql::map_trans_t::lst_transform(ql::env_t*, std::vector<ql::datum_t, std::allocator<ql::datum_t> >*, ql::datum_t const&) at ??:?\r\n8: ql::ungrouped_op_t::operator()(ql::env_t*, std::map<ql::datum_t, std::vector<ql::datum_t, std::allocator<ql::datum_t> >, optional_datum_less_t, std::allocator<std::pair<ql::datum_t const, std::vector<ql::datum_t, std::allocator<ql::datum_t> > > > >*, ql::datum_t const&) at ??:?\r\n9: rget_cb_t::handle_pair(scoped_key_value_t&&, concurrent_traversal_fifo_enforcer_signal_t) at ??:?\r\n10: concurrent_traversal_adapter_t::handle_pair_coro(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t) at ??:?\r\n11: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (concurrent_traversal_adapter_t::*)(scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> (concurrent_traversal_adapter_t*, scoped_key_value_t*, semaphore_acq_t*, fifo_enforcer_write_token_t, auto_drainer_t::lock_t)> >::run_action() at ??:?\r\n12: coro_t::run() at ??:?\r\n```\r\n\r\n@Tryneus any ideas about this one?"
  , issueCommentId = 127352934
  }