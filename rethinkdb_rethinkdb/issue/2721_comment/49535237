IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-20) 02 : 29 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/49535237"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2721#issuecomment-49535237"
  , issueCommentCreatedAt = 2014 (-07) (-20) 02 : 29 : 52 UTC
  , issueCommentBody =
      "How would to feel about a compromise proposal where we make it easier to explicitly convert, and make the error message clearer?  `.coerce_to('array')` is a lot more painful than `.to_array`, and it often isn't obvious that that's the solution.\r\n\r\nI'm **extremely** hesitant to do this automatically.  The difference between arrays and streams is already confusing for people, and unlike most confusing things you can sweep under the rug, it's absolutely essential for getting any sort of performance out of RethinkDB (or, indeed, for writing queries that won't blow up in your face as soon as you hit production).\r\n\r\nI'm sympathetic to the view that ease-of-use is more important than forcing people to think about performance, but this really is a special case.  Implicitly converting streams to arrays would be like implicitly converting files to strings in Python.  They're different because they work on different scales.\r\n\r\nAnother option would be to consider loosening some of our restrictions about storing streams in arrays and objects, but we'd have to be very careful about that."
  , issueCommentId = 49535237
  }