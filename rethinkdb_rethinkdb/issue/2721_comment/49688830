IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-22) 01 : 44 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/49688830"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2721#issuecomment-49688830"
  , issueCommentCreatedAt = 2014 (-07) (-22) 01 : 44 : 58 UTC
  , issueCommentBody =
      "This usually comes up when users are confused by the `expected DATUM` error. Most of these users will happily use `.coerceTo('array')`.\r\n\r\nSome users complain about having to use `coerceTo` because that is always what they mean. They don't seem to run into cases where the code was wrong and using `coerceTo` is the wrong solution. They don't want to have to think about whether it is a stream or an array.\r\n\r\nA surprising number of users take this to the extreme and add `.coerceTo('array')` everywhere. I have on a few occasions seen code such as `r.table(...).coerceTo('array').filter(...).coerceTo('array').map(..).coerceTo('array')`.\r\n\r\nI think that streams would be silently coerced into arrays when necessary. Also, streams and arrays should be a hidden implementation detail of sequences, and that only the term sequence should be exposed to users in the documentation and in error messages."
  , issueCommentId = 49688830
  }