IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-12) 11 : 23 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20871166"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1080#issuecomment-20871166"
  , issueCommentCreatedAt = 2013 (-07) (-12) 11 : 23 : 19 UTC
  , issueCommentBody =
      "Yes, I will do so in the new issue.\r\nBasically I imagine that we use a two-layered metablock structure. We\r\nkeep the metablock extent, but it only contains information of which\r\nextents are active. If during a commit we have to change the active\r\nextent, we first write the new metablock into the freshly activated\r\nextent. Then we would write a new \"active extents\" metablock into the\r\nmetablock extent. Most writes will result in completely sequential\r\nwrites to the active extent only.\r\n\r\nOn startup, we first scan the metablock extent to find out which extent\r\nwas active when the last \"real\" metablock was written. We then scan only\r\nthe active extents. The performance penalty on startup should be\r\nnegligible. \r\n\r\n\r\nOn Fri, 2013-07-12 at 04:11 -0700, coffeemug wrote:\r\n> @danielmewes -- the key question is how to find inline metablocks in\r\n> sublinear time on startup. Could you give a quick summary of how you\r\n> think this could be done?\r\n> \r\n> \8212\r\n> Reply to this email directly or view it on GitHub.\r\n> \r\n\r\n-- \r\nDaniel Mewes (daniel@danielmewes.dnsalias.net)\r\nhttp://danielmewes.de\r\nPhone: +49 (0) 681 303 95 07"
  , issueCommentId = 20871166
  }