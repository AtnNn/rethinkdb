IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 23 : 26 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19722008"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/915#issuecomment-19722008"
  , issueCommentCreatedAt = 2013 (-06) (-19) 23 : 26 : 57 UTC
  , issueCommentBody =
      "So, having tried to implement this in a few drivers I've realized that mixing variadic arguments with key word arguments really doesn't work in languages that don't have keyword arguments (such as javascript). I think we need to have a general rule of not doing this in our query language so we need a new proposal for this issue. A couple of options:\r\n\r\n- Have 2 versions of the function:\r\n`get_all` and `get_all_index` the later would take the index as its first argument. This is kind of ugly but I would point out it's actually less typing than the other syntax.\r\n\r\n- Don't allow the primary key version of `get_all`. Seems kind of crappy to me. But maybe it's okay.\r\n\r\n- Do something hacky where we check if the last argument is a dict and consider it to be optional arguments if it is. This seems really bad because it makes life more complicated for driver developers particularly in languages like php where I think the distinction between arrays and dicts is pretty small. Also this just doesn't work if there can be objects in the variadic argument list and will give strange errors if the user passes a dict as the last argument. I really dislike this solution."
  , issueCommentId = 19722008
  }