IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-11) 04 : 53 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19242787"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/915#issuecomment-19242787"
  , issueCommentCreatedAt = 2013 (-06) (-11) 04 : 53 : 33 UTC
  , issueCommentBody =
      "May I propose dropping variable argument `get` and just having variable argument `get_all`? The main difference between the two is that get returns an object (or null) while `get_all` already returns an array. When we discussed the secondary index interface before we agreed that it was important to maintain just one expected return type per operation, hence the genesis of `get_all`. It's also not clear to me what the benefit of overloading both would be. `get_all` already defaults to using the primary index when no optional index parameter is given. The only difference I can imagine between the two is that variatic `get` would return an array with a null for each missing key while variatic `get_all` would not. I don't think we really need to support that slight semantic variation. Plus, the game `get_all` already implies that you're getting more than one of something, even if we didn't already have it I think this is what we would want to call the version of `get` that was for more than one key :)."
  , issueCommentId = 19242787
  }