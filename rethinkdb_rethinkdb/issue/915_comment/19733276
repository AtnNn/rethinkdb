IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-20) 06 : 36 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19733276"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/915#issuecomment-19733276"
  , issueCommentCreatedAt = 2013 (-06) (-20) 06 : 36 : 02 UTC
  , issueCommentBody =
      "I think what it comes down to is that we might seriously have to rethink that rule if we want to maintain consistency (which I'm all in favor of). Keyword arguments make for very nice syntax in languages that support keyword arguments natively but they get really cumbersome to support in languages that don't.  In this case we can maybe just barely eek something usable out of javascript because it's sufficiently loose about types. Although I really think that using dicts as keys is actually pretty useful  and I'm not sure I recall our reasons beyond the space constraints for not allowing them. However this is really going to be a cumbersome thing to implement in other languages. I can't think of a nice way to do this in Java for example and I really think we should just adopt the rule now of not mixing variadic functions with optional arguments rather than charging driver developers with hacking it into their languages in some way.\r\n\r\nI also wouldn't mind expanding this issue to make things more unified if that's a concern to you. Which it is to me as well. But I'm pretty opposed to implementing something that's going to make driver developers lives harder (including mine when I have to add stuff to the javascript driver.)"
  , issueCommentId = 19733276
  }