Issue
  { issueClosedAt = Just 2015 (-12) (-09) 18 : 53 : 37 UTC
  , issueUpdatedAt = 2015 (-12) (-09) 18 : 53 : 45 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5185/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5185"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5185
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1729153
        , simpleUserLogin = N "vskr"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1729153?v=3"
        , simpleUserUrl = "https://api.github.com/users/vskr"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Getting an update column's new value in a row in rethinkdb"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5185"
  , issueCreatedAt = 2015 (-12) (-09) 06 : 05 : 25 UTC
  , issueBody =
      Just
        "I am trying to get and update a column in a row in rethinkdb using a similar statement.\n\n```\n   User.get_table() \\\n             .get(self.id) \\\n             .update(return_changes = True, \n                {'reward_amount' :r.row['reward_amount'].default(0)+amount}) \\\n             .run(User.get_conn())\n```\n\nI am getting new value by passing return_changes=True, but is it possible to write a anonymous function that just returns new value as a int instead of array of old and new objects (which is what return_changes=True does)\n"
  , issueState = "closed"
  , issueId = Id 121167485
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }