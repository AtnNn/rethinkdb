IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-20) 00 : 05 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/75165708"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/955#issuecomment-75165708"
  , issueCommentCreatedAt = 2015 (-02) (-20) 00 : 05 : 10 UTC
  , issueCommentBody =
      "@stuartpb Ohh I think we're talking about different things. Sorry I misunderstood your proposal.\r\n\r\nThis thread is about what we call a compound index, where you typically index by an array containing multiple fields from the document. So the keys look like `[r.row('field1'), r.row('field2'), r.row('field3')]`. Now the question was how to query such an index if you only want to filter by the value of say `field1`, but don't care what's in `field2` or `field3`. So that's what you can use `r.minval` and `r.maxval` for.\r\n\r\nWhat you described I believe was filtering by a prefix of a string, didn't you? This is independent of compound indexes, and for that indeed your solution is the right one (and the only one that currently works I think)."
  , issueCommentId = 75165708
  }