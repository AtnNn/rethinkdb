IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-06) 18 : 58 : 37 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/99573174"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4191#issuecomment-99573174"
  , issueCommentCreatedAt = 2015 (-05) (-06) 18 : 58 : 10 UTC
  , issueCommentBody =
      "I'm not aware of a tutorial that uses changefeeds with C#, but I imagine it will be similar to other languages.\r\n\r\nThe current version of rethinkdb-net https://github.com/mfenniak/rethinkdb-net has support for the `Changes` command.\r\n\r\nI don't know much C#, but I imagine that if you take the example that they have in their README and add a line somewhat like this to `Main` it should work:\r\n```\r\n[...]\r\n    // Print all changes that arrive for the table\r\n    foreach (var change in conn.Run(Person.Table.Changes())\r\n        Console.WriteLine(\"Change: {0}\", change);\r\n[...]\r\n```"
  , issueCommentId = 99573174
  }