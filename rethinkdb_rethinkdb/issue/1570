Issue
  { issueClosedAt = Just 2014 (-01) (-15) 00 : 47 : 03 UTC
  , issueUpdatedAt = 2014 (-03) (-26) 01 : 10 : 17 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1570/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1570"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 1570
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Weird behaviour of get followed by replace of a different key"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1570"
  , issueCreatedAt = 2013 (-10) (-24) 21 : 52 : 32 UTC
  , issueBody =
      Just
        "(A) When the document already exists, an error is returned:\n\n```\nr.table(\"foo\").get(\"exists\").replace({id: \"other\"})\n```\n\n```\nPrimary key `id` cannot be changed ({ \"id\": \"exists\" } -> { \"id\": \"other\" })\n```\n\n(B) When the document doesn't exist, a document with the other key is inserted:\n\n```\nr.table(\"foo\").get(\"doesn't exist\").replace({id: \"other\"})\n```\n\n```\n\"inserted\": 1\n```\n\n(C) If that other key already exists, it gets replaced:\n\n```\nr.table(\"foo\").get(\"doesn't exist\").replace({id: \"other\", a:1})\n```\n\n```\n\"replaced\": 1\n```\n\nI think B and C should also return an error.\n"
  , issueState = "closed"
  , issueId = Id 21554793
  , issueComments = 26
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 57
          , milestoneClosedIssues = 16
          , milestoneDescription = Nothing
          , milestoneTitle = "1.11.3"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/57"
          , milestoneCreatedAt = 2014 (-01) (-12) 20 : 47 : 15 UTC
          , milestoneState = "closed"
          }
  }