IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-24) 18 : 54 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60432900"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2890#issuecomment-60432900"
  , issueCommentCreatedAt = 2014 (-10) (-24) 18 : 54 : 20 UTC
  , issueCommentBody =
      "@larkost \r\n> If we do go down the route that @coffeemug posits, then it would probably be a good idea to accept name and uuid interchangeably in these places.\r\n\r\nAre you talking about commands like `r.table()`, `r.tableDrop()` etc. or about the `table_config` pseudo-table?\r\n\r\nI believe we are actually not disambiguating names in case of conflicts (there was a period where we did do automatic renaming, but I think not anymore). If there is a conflict commands that use the name will fail I think, until the conflict is resolved.\r\n\r\nIt is a good question though. If say a query is run with `refer_by: \"uuid\"`, should it still be possible to refer a table by name e.g. in `r.table(name).run(conn, refer_by=\"uuid\")`?\r\n\r\nIndeed it seems it would be reasonable to always accept both in commands.\r\nI have a slight preference for keeping table access limited to the current DB even when using UUIDs (though `r.db()` should also accept a UUID then).\r\n\r\nWriting to `table_config` using server UUIDs even if you are in `refer_by: \"name\"` mode feels a bit different to me though. Here the document that you read would be different from what you write to the table, and that's a little odd."
  , issueCommentId = 60432900
  }