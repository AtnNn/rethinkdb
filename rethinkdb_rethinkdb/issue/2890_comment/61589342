IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-04) 03 : 42 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/61589342"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2890#issuecomment-61589342"
  , issueCommentCreatedAt = 2014 (-11) (-04) 03 : 41 : 45 UTC
  , issueCommentBody =
      "#3266 has taken over the question of exposing UUIDs in system tables. I don't think we should accept UUIDs in `table_drop()` or `db_drop()` because we're letting users delete directly from the pseudo-table. In #3001 we decided that `table_create()` will return the entire `table_config` row, which includes the UUID. We also log a server ID on startup.\r\n\r\nThe one thing that I can still think of is `r.table(uuid)`. This could be useful in the web UI for `r.table(uuid).reconfigure()`, or in general if the user wants to run a query against a table by UUID without worrying about name conflicts.\r\n\r\nOther than that, does this issue still serve any purpose?"
  , issueCommentId = 61589342
  }