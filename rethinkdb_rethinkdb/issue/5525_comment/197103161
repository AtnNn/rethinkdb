IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-16) 01 : 37 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 399535
        , simpleUserLogin = N "nh2"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/399535?v=3"
        , simpleUserUrl = "https://api.github.com/users/nh2"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/197103161"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5525#issuecomment-197103161"
  , issueCommentCreatedAt = 2016 (-03) (-16) 01 : 37 : 34 UTC
  , issueCommentBody =
      "Note that my PR adds this feature, which already helps to implement the `ssh otherhost rethinkdb-dump --file=- | rethinkdb-restore - --force` workflow I had in mind.\r\n\r\nBut since `dump`/`restore` are still based on the `export`/`import` commands, which are directory based, it still writes temporary files, both for `dump` and `restore`.\r\n\r\nThere are situations when you don't want that for security reasons, e.g. if you want to use the `ssh otherhost rethinkdb-dump --file=- | rethinkdb-restore - --force` workflow to ensure the data is never written to (potentially unencrypted) disk anywhere, not even temporary files. This case is not covered by my PR.\r\n\r\nI've filed a separate ticket (#5530) for that; it's more difficult because it would have to switch the `export`/`import` commands to support a streaming fashion."
  , issueCommentId = 197103161
  }