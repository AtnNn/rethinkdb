Issue
  { issueClosedAt = Just 2013 (-03) (-08) 02 : 38 : 39 UTC
  , issueUpdatedAt = 2013 (-03) (-15) 00 : 04 : 59 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/167/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/167"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 167
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 646357
          , simpleUserLogin = N "wmrowan"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/646357?v=3"
          , simpleUserUrl = "https://api.github.com/users/wmrowan"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Python assertion failure"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/167"
  , issueCreatedAt = 2012 (-12) (-18) 17 : 14 : 17 UTC
  , issueBody =
      Just
        "From Chris Hesse:\n\n> if I copy and paste the for_each example for Python from http://www.rethinkdb.com/api/#py:control_structures-foreach\n> \n> r.table('marvel').for_each(lambda hero: r.table('villains').get(hero['villainDefeated']).delete()).run()\n> \n> I get an assertion error:\n> AssertionError                            Traceback (most recent call last)\n> <ipython-input-2-af585d94186b> in <module>()\n> ----> 1 r.table('marvel').for_each(lambda hero: r.table('villains').get(hero['villainDefeated']).delete()).run()\n> \n> /Users/christopherhesse/.virtualenvs/rethinkdb/lib/python2.7/site-packages/rethinkdb/query.pyc in for_each(self, fun)\n>    1090         if not isinstance(fun, FunctionExpr):\n>    1091             fun = FunctionExpr(fun)\n> -> 1092         return JSONExpression(internal.ForEach(self, fun))\n>    1093 \n>    1094     def inner_join(self, other, predicate):\n> \n> /Users/christopherhesse/.virtualenvs/rethinkdb/lib/python2.7/site-packages/rethinkdb/query.pyc in **init**(self, inner)\n>     129 \n>     130     def **init**(self, inner):\n> --> 131         assert isinstance(inner, internal.ExpressionInner)\n>     132         self._inner = inner\n>     133 \n> \n> AssertionError: \n> \n> Also if I just do:\n>  r.table('marvel').for_each(lambda hero: r.table('villains').insert(hero))\n> \n> It seems to hang python before running the query, just in the building phase.\n"
  , issueState = "closed"
  , issueId = Id 9374512
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 5
          , milestoneClosedIssues = 227
          , milestoneDescription = Just ""
          , milestoneTitle = "1.4"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/5"
          , milestoneCreatedAt = 2012 (-12) (-21) 23 : 41 : 54 UTC
          , milestoneState = "closed"
          }
  }