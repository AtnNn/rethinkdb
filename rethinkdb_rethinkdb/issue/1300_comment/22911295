IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-19) 23 : 03 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22911295"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1300#issuecomment-22911295"
  , issueCommentCreatedAt = 2013 (-08) (-19) 23 : 03 : 15 UTC
  , issueCommentBody =
      "If a ruby programmer with one server uses Ruby, and do two types of writes with\r\n```\r\nr.table(\"foo\").insert({ :date => r.now }).run\r\nr.table(\"foo\").insert({ :date => DateTime.now() }).run\r\n```\r\nHe will end up with two objects with two different timezones, and we don't take out the timezone.\r\n\r\nSo in that respect the JS driver does a better job, but having `r(date).hours() != date.hours()` is just worse from my point of view.me.\r\n\r\n\r\nI feel like I'm the only one advocating for using the local timezone, and I don't really have more arguments (and there probably isn't one really good solution anyway) so I won't reopen this issue, but the current behavior seems really bad from my point of view."
  , issueCommentId = 22911295
  }