Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-07) (-13) 20 : 44 : 54 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5944/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5944"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 5944
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Out-of-memory temporary results and ordering"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5944"
  , issueCreatedAt = 2016 (-07) (-13) 20 : 44 : 54 UTC
  , issueBody =
      Just
        "This issue is motivated by https://github.com/rethinkdb/rethinkdb/issues/5943 .\r\n\r\nFor certain use-cases, being able to opt to disk-storage of intermediate results might be useful.\r\n\r\nThe obvious thing to implement for this is an out-of-memory sorting algorithm for unindexed `orderBy`. A bunch of other terms can probably be reduced to an out-of-memory sort + streaming the sorted results from disk as well (e.g. `distinct`).\r\n\r\nOther cases are probably trickier to implement, especially when large arrays have to be passed around between terms or even servers.\r\n\r\nThe previous time this came up, our justification for not implementing this was ( https://github.com/rethinkdb/rethinkdb/issues/2303#issuecomment-41441170 ): \r\n\r\n>  [...] the reason you need an index is because RethinkDB is a real-time system and is intended to return results quickly enough to be usable for real-time applications. Sorting large numbers of elements gets slow in traditional databases, so Rethink will sort ad-hoc up to an array limit (100k elements), but requires an index for datasets larger than that.\r\n\r\nWe should revisit this decision at some point."
  , issueState = "open"
  , issueId = Id 165417233
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }