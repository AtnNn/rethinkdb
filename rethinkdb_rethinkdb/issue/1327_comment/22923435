IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-20) 05 : 28 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22923435"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1327#issuecomment-22923435"
  , issueCommentCreatedAt = 2013 (-08) (-20) 05 : 28 : 56 UTC
  , issueCommentBody =
      "It seems weird to me that `contains` is variadic. Intuitively, I'd use `contains` to test if the sequence has the element I care about (or apply a predicate to each element and return true once the predicate returns true). If I wanted to test multiple elements, I'd use the intersection functions that we already provide (which explicitly differentiate between set and bag semantics).\r\n\r\nIf we do want to support variadic `contains`, it also seems weird to me to allow mixing values and functions, since I can't intuitively understand what that does. It also seems like something that may not have a common use case.\r\n\r\nIf we want to have variadic `contains` and support mixing values and functions, I agree with @jdoliner and @srh that set semantics is the only thing that makes sense. (But I would prefer non-variadic contains)\r\n\r\n"
  , issueCommentId = 22923435
  }