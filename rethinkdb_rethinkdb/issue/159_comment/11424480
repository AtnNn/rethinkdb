IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-16) 23 : 10 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11424480"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/159#issuecomment-11424480"
  , issueCommentCreatedAt = 2012 (-12) (-16) 23 : 10 : 32 UTC
  , issueCommentBody =
      "I think you misunderstood me but what I said was wrong so that's probably a\r\ngood thing. I wasn't suggesting we switch the order in the optimizer I was\r\nsaying that unlike with other things like join then filter this was a case\r\nwhere the user couldn't get something performant by switching the\r\noperations themselves but that's actually not true if we had orberby\r\nworking as proposed then orberby followed by map would actually be\r\nperformant except that all of the mapping would happen on the coordinating\r\nnode. Making that map be distributed would actually not be a tough\r\noptimization to make so we could do that too.\r\n\r\nOn Sunday, December 16, 2012, coffeemug wrote:\r\n\r\n> Reversing the order of the operations doesn't fix the problem (in fact it\r\n> makes the performance worse).\r\n>\r\n> Hmm, the trouble here is that you can't easily reverse operations without\r\n> potentially giving the wrong result. You've got to prove that extenddoesn't override\r\n> id, which in many cases isn't even possible.\r\n>\r\n> That's cool though, we can say that initially order_by is only guaranteed\r\n> to use an index when run on a selection, and not when run on a stream. We\r\n> could also consider changing the API a little to make it clear for users\r\n> when the index is and is not used.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/159#issuecomment-11424041>.\r\n>\r\n>"
  , issueCommentId = 11424480
  }