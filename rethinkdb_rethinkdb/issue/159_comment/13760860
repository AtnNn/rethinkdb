IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-19) 07 : 53 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13760860"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/159#issuecomment-13760860"
  , issueCommentCreatedAt = 2013 (-02) (-19) 07 : 53 : 42 UTC
  , issueCommentBody =
      "> if there's no way at all to do orderBy on datasets over 30 MB then that's actually really limiting\r\n\r\nIt only seems limiting. People should be able to do orderBy on any dataset as long as they're ordering on an indexed column (they currently can't, but we need to fix that ASAP -- *that* is definitely limiting). Beyond that, once we get into a large dataset territory, having ability to do `orderBy` that takes many minutes (or hours) isn't very liberating. It's a nice to have, not a necessity. (On the other hand not crashing is a necessity) Basically, not being able to sort large datasets on arbitrary columns isn't hampering adoption. It isn't differentiating for our audience (\"wow! I can sort! I'm going to use rethink for my next project!\") and it isn't a showstopper (\"eww, I can't sort! I'm not going to use rethink for my next project\") because competition doesn't do it either.\r\n\r\nAlso, creating a btree backed by a cache that *does not write* until it crosses a threshold might be tricky (though I'm not sure, it's been a while since I looked at that).\r\n\r\nI'd only do this for 1.4 if @mlucy is sitting around on the 27th with nothing to do (especially since sorting on indexed keys using an index is much more important)."
  , issueCommentId = 13760860
  }