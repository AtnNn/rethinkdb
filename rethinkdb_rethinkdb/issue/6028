Issue
  { issueClosedAt = Just 2016 (-08) (-05) 21 : 06 : 27 UTC
  , issueUpdatedAt = 2016 (-08) (-05) 21 : 06 : 42 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6028/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/6028"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:web-ui"
          , labelName = "cp:web-ui"
          }
      , IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/JavaScript%20/%20Coffee"
          , labelName = "JavaScript / Coffee"
          }
      ]
  , issueNumber = 6028
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 295692
        , simpleUserLogin = N "Linicks"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/295692?v=3"
        , simpleUserUrl = "https://api.github.com/users/Linicks"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Intermittent errors with the data explorer on a AWS Compose Cluster "
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/6028"
  , issueCreatedAt = 2016 (-08) (-04) 18 : 56 : 17 UTC
  , issueBody =
      Just
        "All,\r\n  While trying to test the geo location capabilities of RethinkDB, I setup a cluster with Compose deployed to AWS-EAST1.  I started going through the docs ( http://www.rethinkdb.com/docs/geo-support/javascript/) and created the two example locations.  Unsurprisingly, I wanted to query for records within a given distance, and tried the following query from the data explorer:\r\n\r\n>var point = r.point(-122.422876,37.777128); //San Francisco\r\n>r.db('geo_test').table('geo').getNearest(point, {index: 'location', maxDist: 300, unit: 'mi'})\r\n\r\nA successful query was executed and I got back the SF location.  I then increased the maxDistance to 1000 to try and get San Diego, and got an error like this:\r\n\r\n>[Exception... \"The URI is malformed\"  nsresult: \"0x804b000a (NS_ERROR_MALFORMED_URI)\"  location: \"JS frame :: https://amazon stuff:11321/cluster-min.js?v=2.3.4 :: [\"/home/buildslave/buildslave/package-trusty/build/build/packages/js/net.js\"]</</HttpConnection</r.prototype.write :: line 1483\"  data: no]\r\n\r\nIf I changed the maxDistance  back to a lower number like 500 it would work.  I tried 1000 again, and ran the query several times in a row and got back errors, until it finally executed without the error described above.\r\n\r\nIn a discussion with Danielmewes on Slack, he thought it may be an issue with their admin proxy.\r\n\" Ah, wonder if it could have to do with the proxy they use for tunneling the web UI access.\"\r\n\r\nMy workstation is running Ubuntu 16.04, and I was using Firefox 47\r\n\r\nThanks! \r\n-- Nick\r\n\r\n\r\n\r\n"
  , issueState = "closed"
  , issueId = Id 169447809
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 27
          , milestoneClosedIssues = 127
          , milestoneDescription =
              Just
                "These issues are not reproducible or happen in platforms or configurations that are not supported."
          , milestoneTitle = "worksforme"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/27"
          , milestoneCreatedAt = 2013 (-04) (-08) 21 : 57 : 50 UTC
          , milestoneState = "closed"
          }
  }