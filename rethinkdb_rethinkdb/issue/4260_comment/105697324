IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-27) 01 : 52 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/105697324"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4260#issuecomment-105697324"
  , issueCommentCreatedAt = 2015 (-05) (-26) 23 : 31 : 08 UTC
  , issueCommentBody =
      "So we can continue discussion here, I'll briefly summarize the main points @AtnNn and @timmaxw were making from the other thread:\r\n\r\n1. Passing native functions makes it unclear what the execution context is (i.e. the fact that you can't reference variables that are defined outside the function scope).\r\n2. Small convenience this adds does not outweigh the complexity it adds to the API and relevant documentation.\r\n3. RethinkDB error messages are not good enough to debug errors generated by the misuse of this feature.\r\n\r\nTo address these points:\r\n\r\n1. In order to use `r.js` as it exists today you already have to understand that it is executed on the server and thus does not have access to variables defined in the client's execution context. This proposal doesn't change that, it simply offers a cleaner API to the existing behavior.\r\n2. The fact that the docs don't already have some mention of the execution context seems like an oversight in the existing documentation, not the result of introducing this syntax.\r\n3. The error messages in this case are actually exactly what you'd expect and point you right to the problem:\r\n\r\n```js\r\nvar x = 1;\r\nr.expr([ 1 ]).map(r.js(function(y) { return x + y; })\r\n\r\n// RqlRuntimeError: ReferenceError: x is not defined in:\r\n// r([1]).map(r.js(\"(function(y) { return x + y; })\"))\r\n//            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \r\n```"
  , issueCommentId = 105697324
  }