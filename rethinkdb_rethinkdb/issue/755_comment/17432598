IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-04) 12 : 45 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/17432598"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/755#issuecomment-17432598"
  , issueCommentCreatedAt = 2013 (-05) (-04) 12 : 45 : 13 UTC
  , issueCommentBody =
      "After a bit of investigation, it appears that implementing coroutine API on top of threads might be unnecessary.\r\n\r\nI got massif to work by compiling with `VALGRIND=1` -- this uses `VALGRIND_STACK_[DE]REGISTER` macros which inform valgrind of our coroutine magic (argghh, can't believe I forgot about `VALGRIND=1`).\r\n\r\nMassif isn't nearly as good or pleasant as OS X Instruments, but is good enough to get the job done. However, I'd *really* like Instruments to work. I bet they must have an API similar to valgrind's to inform them of custom stacks, but for the life of me I can't find it. If we find this API, we'll be golden. I've asked on SO in the meantime: http://stackoverflow.com/questions/16374462/getting-os-x-instruments-to-work-with-custom-green-threads."
  , issueCommentId = 17432598
  }