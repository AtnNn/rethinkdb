IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-09) 23 : 15 : 37 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 811701
        , simpleUserLogin = N "robert-zaremba"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/811701?v=3"
        , simpleUserUrl = "https://api.github.com/users/robert-zaremba"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/31987685"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1570#issuecomment-31987685"
  , issueCommentCreatedAt = 2014 (-01) (-09) 23 : 15 : 37 UTC
  , issueCommentBody =
      "@neumino made a good point in https://github.com/rethinkdb/rethinkdb/issues/1570#issuecomment-27041871\r\n\r\nI went into a problem when updating RethinkDB from 1.10 to 1.11 with an issue related to this one. And it keeps me away to update on production.\r\nBasically atomic insert iff document doesn't exists was possible in 1.10 using `replace`. This is what we have in our code:\r\n\r\n    r.db('test').table('user').get(\"notFound2\").replace({a: r.row('a').default(0).add(1)}) \r\n\r\nIn 1.10 the query works fine - returns `{\"inserted\": 1 ,...}`\r\nIn 1.11 it fails with  `RqlRuntimeError: Expected type OBJECT but found NULL. in: ...`\r\nI made a StackOverflow question to find some help with this: http://stackoverflow.com/questions/21028901/how-to-atomically-replace-document-when-it-doesnt-exists-in-rethinkdb-1-11"
  , issueCommentId = 31987685
  }