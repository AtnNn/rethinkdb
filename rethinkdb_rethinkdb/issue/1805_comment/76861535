IssueComment
  { issueCommentUpdatedAt = 2015 (-03) (-03) 00 : 26 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1301087
        , simpleUserLogin = N "jampekka"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1301087?v=3"
        , simpleUserUrl = "https://api.github.com/users/jampekka"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/76861535"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1805#issuecomment-76861535"
  , issueCommentCreatedAt = 2015 (-03) (-03) 00 : 26 : 52 UTC
  , issueCommentBody =
      "@danielmewes I'm not sure I'm comfortable with that approach, as it would be easy to miss some cases, although I may resort to it. How certain are you that these cover all the non-safe cases?\r\n\r\nThe scenario is that I'd (very very much) like to do a browser data visualization application that would use ReQL directly when feasible. I'm so fed up in writing pointless back end \"service layers\", I may end up hurting myself and others if I have to do one more, and in the I'd have to waste yet more countless hours in frustrating manual ceremony. ReQL finally could offer a real possibility of getting rid of such pointless labor.\r\n\r\nAlso to any possible commenters: please refrain from the knee-jerk reactions that \"this is a bad idea\" without any real arguments (\"best practice\" and \"because it's been always done this way\" don't count as such).\r\n\r\nI have discussed this before on RethingDBs facebook page: https://www.facebook.com/permalink.php?story_fbid=905976462776201&id=155296331177555"
  , issueCommentId = 76861535
  }