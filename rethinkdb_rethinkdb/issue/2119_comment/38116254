IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-19) 22 : 39 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/38116254"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2119#issuecomment-38116254"
  , issueCommentCreatedAt = 2014 (-03) (-19) 22 : 39 : 17 UTC
  , issueCommentBody =
      "This proposal has a few orthogonal (but related) aspects.\r\n\r\nI think your idea of \"copy\" and 'backup\" is really wonderful because it rephrases the same concepts in terms a user will understand (we should probably find a different name from 'copy'). We could implement this proposal very easily by just using the following rules under the hood:\r\n\r\n* Acks = copies\r\n* Replicas = copies + backups\r\n\r\nFrom a UI perspective, that would do exactly what you want. My concern with this is that we'd be taking low level but precise concepts that explain exactly what happens, and making them higher level, more understandable to the user, but also more removed from the actual architecture of the system. We may or may not want this -- we should think about it.\r\n\r\nThe second part (shipping IPs of copies to the clients) sounds like an interesting idea. I have to think about how hard that is and what it would get us relative to the work. I don't think it's too hard, but I'm not sure how useful it would be. In particular, it only works well when you don't have shards. The moment you have shards and cross shard queries, this potentially becomes a lot less valuable.\r\n\r\nMoving to 2.x and adding to clustering megathread."
  , issueCommentId = 38116254
  }