IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-03) 21 : 57 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/47989437"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2119#issuecomment-47989437"
  , issueCommentCreatedAt = 2014 (-07) (-03) 21 : 57 : 51 UTC
  , issueCommentBody =
      "Great writeup @neumino. \r\n\r\nThe ack protocol you describe sounds a lot like two phase commit. We should probably use one of those standard protocols to avoid race conditions.\r\n\r\nRolling back transactions also requires changes to the cache, because we sometimes write multiple transactions at once to the serializer and hence cannot roll back to a specific point in time just in the serializer.\r\n\r\nAs you say, we cannot easily guarantee the order in which A and the master decide that they are out of date. Especially if the network split is not total and sudden. In practice that could be ok in many cases."
  , issueCommentId = 47989437
  }