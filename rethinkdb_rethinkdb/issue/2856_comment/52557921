IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-18) 21 : 28 : 12 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52557921"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2856#issuecomment-52557921"
  , issueCommentCreatedAt = 2014 (-08) (-18) 21 : 28 : 12 UTC
  , issueCommentBody =
      "> I don't see how this can happen. Could you give an example?\r\n\r\nSuppose I have 2 machines A, B.\r\n`A` has tags `default` and `tag1`\r\n`B` has tags `default`\r\n\r\nSuppose I have a table T with one master only, that we force on tag `default`, no secondaries.\r\nSuppose `A` is currently the master for the table T.\r\n\r\nNow if I ask for one replica in `tag1`, then I'm adding a replica on `B` that doesn't have the `tag1` tag.\r\n\r\n> Don't datacenters have the same problem?\r\n\r\nWe currently have this problem only when dealing with `universe` (because it behaves like a \"tag\" -- servers can have one datacenter AND `universe`).\r\n\r\nBut we also currently don't have an auto failover -- it's just that there are cases when the web ui cannot automatically pick the appropriate number of replicas to solve an unsatisfiable goal."
  , issueCommentId = 52557921
  }