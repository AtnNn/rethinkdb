IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-18) 22 : 00 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52561648"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2856#issuecomment-52561648"
  , issueCommentCreatedAt = 2014 (-08) (-18) 22 : 00 : 03 UTC
  , issueCommentBody =
      "> It's illegal to ask for replicas on two tags that share a server. So when you asked for one replica on tag1, the server would reject that change.\r\n\r\nIn the case I described earlier, the only way to add a replica on `B` is to request one more replica on `default`?\r\nIf yes, this is __extremely__ confusing.\r\n\r\n> I guess I don't understand the problem with auto-failover. If the death of a server causes the goals to be unsatisfiable, we should satisfy whatever we can and show the user an issue. Where is the problem?\r\n\r\n\r\nSuppose I have a table A that requires 1 replica on `tag1` and 1 replica on `tag2`.\r\nSuppose that I have just one machine with both tags (after killing a machine that let's say had just the tag `tag1`).\r\n\r\nHow can I know that I should lower the number of replicas for `tag1` and not `tag2`?\r\n"
  , issueCommentId = 52561648
  }