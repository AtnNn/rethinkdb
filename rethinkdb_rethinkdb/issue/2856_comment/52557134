IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-18) 21 : 21 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/52557134"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2856#issuecomment-52557134"
  , issueCommentCreatedAt = 2014 (-08) (-18) 21 : 21 : 52 UTC
  , issueCommentBody =
      "> @timmaxw -- Yes, but that doesn't mean they are useful for users.\r\n\r\nThat's a valid point. Slava and I originally came up with the concept of tags when we hadn't developed the low-level ReQL admin API yet, so tags were necessary to support certain use cases. Now that we have the low-level API, they might not be essential. We could consider returning to the concept of datacenters.\r\n\r\nThere are three ways in which tags differ from datacenters:\r\n* A server has at most one datacenter, but arbitrarily many tags.\r\n* The name.\r\n* Datacenters are entities that must be explicitly created, renamed, and destroyed. Tags are just strings.\r\n\r\nI don't particularly care about the first two issues. I do have a strong opinion that datacenters/tags should not be entities, because then we have to write tools to create and destroy them.\r\n\r\n> Increasing the number of replica for a tag can add a replica on a machine that doesn't have the tag.\r\n\r\nI don't see how this can happen. Could you give an example?\r\n\r\n> It can lead to unsatisfiable goals that we can't automatically solve -- how is failover going to deal with that?\r\n\r\nDon't datacenters have the same problem?"
  , issueCommentId = 52557134
  }