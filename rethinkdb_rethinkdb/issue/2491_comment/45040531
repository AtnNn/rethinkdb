IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-04) 00 : 52 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/45040531"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2491#issuecomment-45040531"
  , issueCommentCreatedAt = 2014 (-06) (-04) 00 : 52 : 03 UTC
  , issueCommentBody =
      "It's plausible that this was caused by https://github.com/rethinkdb/rethinkdb/issues/2500#issuecomment-45038437 which lead to generally undefined behavior.\r\n\r\nIf the callback of an i/o read is called twice, it will (with some exceptions) end up in `io_coroutine_adapter_t::on_io_complete()` which in turn will wake up a coroutine no matter what that coroutine is currently waiting on.\r\nNot sure if that could cause this, but it isn't implausible.\r\n\r\nI've submitted some changes to the `ls_block_token_pointee_t` reference counting mechanisms into CR 1573 by @srh to make it more robust.\r\n\r\nOnce those changes are in I would like to close this, since it's not reproducible, was on a modified branch, and could have been caused by #2500. We can still re-open the issue if it occurs again."
  , issueCommentId = 45040531
  }