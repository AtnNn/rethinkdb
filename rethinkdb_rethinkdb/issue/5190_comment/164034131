IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-11) 19 : 56 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/164034131"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5190#issuecomment-164034131"
  , issueCommentCreatedAt = 2015 (-12) (-11) 19 : 56 : 44 UTC
  , issueCommentBody =
      "I think the `NUMBER -> STRING` coercion @mlucy mentioned in that thread is particularly important here. It probably makes sense for `.ungroup(object: true)` to coerce any value provided as the key to a string, but at the very least I think `NUMBER` and `DATE` should be done for you.\r\n\r\n`DATE` is actually an interesting one and might require a special case. Currently `r.now().coerceTo('string')` gives you the JSON serialized pseudotype. In this context you'd definitely prefer to get back ISO 8601 formatted strings as your keys.\r\n\r\nI'm not sure whether it makes more sense to handle the special case for dates in `.ungroup(object: true)` or more generally in `<date>.coerceTo('string')`."
  , issueCommentId = 164034131
  }