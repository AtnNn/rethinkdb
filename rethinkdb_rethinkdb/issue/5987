Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-07) (-22) 19 : 16 : 05 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5987/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5987"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 5987
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Add a new optarg for `r.table` and `r.db` for disambiguating name-conflicts by UUID"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5987"
  , issueCreatedAt = 2016 (-07) (-22) 01 : 39 : 05 UTC
  , issueBody =
      Just
        "When a database or table has a name conflict, it cannot be accessed via `r.db()` or `r.table()`.  If a user knows the UUID of the database or table, they should be able to access the data (relatively) normally.\n#### Proposal\n\nAdd a new optarg `id` to `r.db()` and `r.table()`.  The value for this optarg must be a string that parses as a UUID or an error is thrown.  When the `id` optarg is included, the `r.db()` or `r.table()` term will only evaluate to the given db or table if both the name and UUID match an existing database or table.\n\nExamples:\n\n``` js\n// Evaluates to the table 'test'\nr.table('test')\n\n// Evaluates to the table 'test', only if there is such a table with the ID '20bf6257-41c5-4a2f-b836-42d90c3fe321'\nr.table('test', { id: '20bf6257-41c5-4a2f-b836-42d90c3fe321' })\n```\n"
  , issueState = "open"
  , issueId = Id 166953312
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 54
          , milestoneNumber = 119
          , milestoneClosedIssues = 8
          , milestoneDescription = Nothing
          , milestoneTitle = "2.3.x"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/119"
          , milestoneCreatedAt = 2016 (-04) (-06) 18 : 05 : 18 UTC
          , milestoneState = "open"
          }
  }