IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-29) 16 : 54 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 61540
        , simpleUserLogin = N "pilwon"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/61540?v=3"
        , simpleUserUrl = "https://api.github.com/users/pilwon"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/57083160"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2973#issuecomment-57083160"
  , issueCommentCreatedAt = 2014 (-09) (-28) 11 : 52 : 27 UTC
  , issueCommentBody =
      "@neumino Also consider dropping the use of `new Promise`.\r\n\r\nFrom [Bluebird API doc](https://github.com/petkaantonov/bluebird/blob/master/API.md#new-promisefunctionfunction-resolve-function-reject-resolver---promise):\r\n\r\n    Note: In Node.JS it is **very unlikely* that you will ever need to create promises yourself, see promisification*\r\n\r\nAlso refer to the [deferred anti-pattern](https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns#the-deferred-anti-pattern).\r\n\r\nSuggestions:\r\n* `.promisify()`\r\n* `Promise.method()`\r\n* return `Promise.resolve()`\r\n* return `Promise.reject()`\r\n* re-throw error in `.catch()`"
  , issueCommentId = 57083160
  }