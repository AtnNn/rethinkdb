IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-27) 00 : 49 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/50252566"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2768#issuecomment-50252566"
  , issueCommentCreatedAt = 2014 (-07) (-27) 00 : 49 : 58 UTC
  , issueCommentBody =
      "Hi Morhaus,\r\n\r\nThe equivalent of `map` on a single selection is `do`.  The difference between `map` and `merge` is that `merge` is defined on objects, and we make it polymorphic on sequences for convenience.  `map` is defined on sequences to begin with, and doesn't have meaning on objects right now, but in the future there's a reasonable chance that `OBJECT.map` will map over the key-value pairs of the object (this is the behavior in e.g. Ruby).  I think turning a `map` into a `do` when it's called on an object would be confusing; `map` doesn't do that in Ruby, Python, or JS as far as I know.  On the flip side, making a `do` turn into a `map` doesn't work because `do` is already defined on arrays (unlike `merge`).\r\n\r\nTagging as a `RQL_proposal` and putting in backlog for now."
  , issueCommentId = 50252566
  }