IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-12) 05 : 30 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16276606"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/561#issuecomment-16276606"
  , issueCommentCreatedAt = 2013 (-04) (-12) 05 : 30 : 10 UTC
  , issueCommentBody =
      "I thought about this when I was reworking the JS stuff and decided not to do it for two reasons:\r\n\r\n* I really don't want to reintroduce string manipulation, however mild, back into that code. It's hacky and an invitation for unknown problems to come up.\r\n* It's extremely powerful to document the functionality as being 100% equivalent to normal js evel, warts and all. \r\n\r\nHaving to put parents around the function expression is ugly, but this is inherited behavior from JavaScript itself. If we start tweaking it to \"fix\" it then we've made it impossible for people to just google their issue when they are having problems. Perhaps they do want to include braces as denoting a block and then can't figure out why RethinkDB is rejecting their query as having a javascript syntax error. They google it and this is exactly what all the examples say on stack overflow. \"If you don't put parens around it they it's interpreted as denoting a block, so just don't put parens around it\". And then they start tearing their hair out because, damnit, they didn't put parens around their block! Finally they go look at the rethinkdb documentation and there is a long disclaimer about how our JS doesn't really behave like `eval` because we wanted to make it \"easier\" for them to use."
  , issueCommentId = 16276606
  }