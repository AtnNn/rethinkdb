IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-12) 21 : 03 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16317436"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/561#issuecomment-16317436"
  , issueCommentCreatedAt = 2013 (-04) (-12) 21 : 02 : 37 UTC
  , issueCommentBody =
      "It seems to me that making the \"r.js takes a JavaScript expression\" paradigm work properly is not trivial. For example JavaScript seems to allow comments to appear pretty much anywhere in the code (except inside of character literals and string literals). To cite the specification http://www.planetpdf.com/codecuts/pdfs/tutorial/jsspec.pdf on Lexical Translation:\r\n\r\n    A translation of the stream of input characters and line terminators into a\r\n    sequence of JavaScript input elements which, after white space and\r\n    comments are discarded, comprise the tokens that are the terminal symbols\r\n    of the syntactic grammar for JavaScript.\r\n\r\nSo \r\n\r\n    5 // foo\r\n\r\nunless I am mistaken - seems to be a perfectly fine JavaScript expression.\r\n\r\nSo should r.js(\"5 //\") work? If not, what would be a specification to when it works and when not?"
  , issueCommentId = 16317436
  }