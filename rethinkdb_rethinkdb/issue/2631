Issue
  { issueClosedAt = Just 2014 (-10) (-06) 19 : 44 : 03 UTC
  , issueUpdatedAt = 2014 (-10) (-06) 19 : 48 : 20 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2631/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2631"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:hygiene"
          , labelName = "tp:hygiene"
          }
      ]
  , issueNumber = 2631
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 167416
          , simpleUserLogin = N "VeXocide"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/167416?v=3"
          , simpleUserUrl = "https://api.github.com/users/VeXocide"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add `RDB_DECLARE_SERIALIZABLE_FOR_CLUSTER` macro."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2631"
  , issueCreatedAt = 2014 (-07) (-01) 22 : 51 : 30 UTC
  , issueBody =
      Just
        "Currently if we have a type we only want to be cluster-serializable, we use `DECLARE_SERIALIZABLE` to declare it serializable in all cases and then use `INSTANTIATE_SERIALIZABLE_FOR_CLUSTER` to only instantiate a version of it for cluster serialization.\n\nThe problem with this is that when someone else tries to use the non-cluster version, the `DECLARE_SERIALIZABLE` says it exists, so the attempt fails at link-time.  Crucially, at link-time there's no backtrace -- clang will show you the line where the link failed, but in the case where that line is itself inside a templated serialization function (like for `boost::variant`), this isn't actually very useful because you need to track down the function that instantiated that version of the templated function.\n\nIf we had a `DECLARE_SERIALIZABLE_FOR_CLUSTER` macro that used `std::enable_if`, we could instead make those calls fail at compile time, which will give a backtrace and make tracking down the real culprit much easier.\n"
  , issueState = "closed"
  , issueId = Id 36938245
  , issueComments = 13
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }