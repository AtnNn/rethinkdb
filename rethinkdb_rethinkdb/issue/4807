Issue
  { issueClosedAt = Just 2015 (-10) (-05) 20 : 20 : 23 UTC
  , issueUpdatedAt = 2015 (-10) (-05) 20 : 25 : 32 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4807/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4807"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4807
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 167416
          , simpleUserLogin = N "VeXocide"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/167416?v=3"
          , simpleUserUrl = "https://api.github.com/users/VeXocide"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 127315
        , simpleUserLogin = N "kulbirsaini"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/127315?v=3"
        , simpleUserUrl = "https://api.github.com/users/kulbirsaini"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "table.reconfigure doesn't honor dryRun option when used with emergencyRepair"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4807"
  , issueCreatedAt = 2015 (-09) (-08) 14 : 01 : 31 UTC
  , issueBody =
      Just
        "This is a followup of #4806.\n\nWhile trying to reconfigure one of my tables, I used the command below\n\n``` javascript\nr.db('pytwitter').table('users').reconfigure({ emergencyRepair: 'unsafe_rollback', dryRun: true })\n```\n\nIt went ahead and applied the configuration. For this table, I didn't have to do anything else other than manually reducing the replicas on table page in admin panel. Now, I tried this with another table but this time with `dryRun: false`. \n\n``` javascript\nr.db('pytwitter').table('tweets').reconfigure({ emergencyRepair: 'unsafe_rollback', dryRun: false })\n```\n\nSame observation. I was under the impression that with `dryRun: true`, it won't change anything and I'll have to re-run the query with `dryRun: false` again to make things work. That was not the case.\n"
  , issueState = "closed"
  , issueId = Id 105387574
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 27
          , milestoneClosedIssues = 127
          , milestoneDescription =
              Just
                "These issues are not reproducible or happen in platforms or configurations that are not supported."
          , milestoneTitle = "worksforme"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/27"
          , milestoneCreatedAt = 2013 (-04) (-08) 21 : 57 : 50 UTC
          , milestoneState = "closed"
          }
  }