Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-28) 01 : 07 : 28 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5724/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5724"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5724
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 162989
        , simpleUserLogin = N "lprhodes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/162989?v=3"
        , simpleUserUrl = "https://api.github.com/users/lprhodes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Improve geospatial query interoperability"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5724"
  , issueCreatedAt = 2016 (-04) (-26) 23 : 41 : 37 UTC
  , issueBody =
      Just
        "Hi,\n\nIt'd be great if we were able to return a paginated set of posts that were created within a 100 mile radius, ordered by their creation time. At the moment, this isn't achievable and given the number of location based apps, it feels like it would be a great use case for rethinkdb to cater for.\n\n```\nr.table('post')\n.between( r.minval, 1461538858043, { rightBound: 'open', index: 'creationTimestamp' })\n.orderBy({ index: r.desc('creationTimestamp') })\n.getIntersecting(r.circle(r.point(-122.3899066 , 37.7835826), 100, { unit: 'mi' }), { index: 'coordinates' })\n.limit(50)\n```\n\nThis query would specifically be used to show paginated content to a user posted by other users within a radius set by the user consuming the content.\n"
  , issueState = "open"
  , issueId = Id 151265026
  , issueComments = 1
  , issueMilestone = Nothing
  }