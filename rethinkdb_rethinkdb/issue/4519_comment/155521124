IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-10) 18 : 19 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/155521124"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4519#issuecomment-155521124"
  , issueCommentCreatedAt = 2015 (-11) (-10) 18 : 19 : 56 UTC
  , issueCommentBody =
      "@deontologician I agree with that and it would certainly be tricky to write a query to \"give me users with `read` permissions on `<table>`\", but that is mostly true either way. Regardless, it seems we'd probably want a helper term for reads that takes into account cascading permissions and lets you do lookups accordingly:\r\n\r\n```js\r\nvar users = r.db('rethinkdb').table('users')\r\nusers.access('read', { db: '...', table: '...' })\r\nusers.access('write', { db: '...' }).grant({ read: true, write: false })\r\n```\r\n\r\nI also definitely like having the permissions as boolean properties rather than in arrays from your example."
  , issueCommentId = 155521124
  }