IssueComment
  { issueCommentUpdatedAt = 2015 (-11) (-10) 05 : 46 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/155301050"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4519#issuecomment-155301050"
  , issueCommentCreatedAt = 2015 (-11) (-10) 05 : 46 : 17 UTC
  , issueCommentBody =
      "> we only allow `A-Za-z0-9_` in database and table names thus it would work nicely.\r\n\r\n@VeXocide yep, exactly what I was thinking!\r\n\r\n> we could even use `\"*.*\"`, `\"<db>.*\"`, and `\"<db>.<table>\"`\r\n\r\nI thought about that, but isn't `<db>.*` the same as `<db>` or would `<db>` itself not imply table level permissions? If they are in fact completely different, how would you represent `<db>.*` vs `<db>` using the `.grant()` term?\r\n\r\nIn regards to the `.` namespace separator, that's how it's displayed in the table details page of the Web UI. I thought I had seen it in the output of some system table, but now that I'm looking, I can't seem to find it anywhere."
  , issueCommentId = 155301050
  }