IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-22) 05 : 05 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/166505842"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4519#issuecomment-166505842"
  , issueCommentCreatedAt = 2015 (-12) (-22) 05 : 05 : 02 UTC
  , issueCommentBody =
      "As much as I usually hate special string syntax, I think the `$` one is the best, and my second choice would be @VeXocide's alternate proposal.  I think the hierarchical structure is better, and the `$` one is the easiest to read.\r\n\r\n(I think the usual concerns about about string munging don't really apply here because you're extremely unlikely to be generating these field names based on user input in a way that lets users inject permissions, and if you are you probably have deeper problems.)\r\n\r\nI don't really like the idea of having two tables: it seems unnecessarily complicated, and it introduces new problems like \"what do you do if a rule refers to a user who no longer exists\" and \"can users be created with the same ID as a previously deleted user, and if so do they inherit that user's old rules\"."
  , issueCommentId = 166505842
  }