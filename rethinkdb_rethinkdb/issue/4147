Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 23 : 42 : 46 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4147/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4147"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 4147
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 725218
        , simpleUserLogin = N "eliaslevy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/725218?v=3"
        , simpleUserUrl = "https://api.github.com/users/eliaslevy"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "getAll queries result the same document multiple times for some queries"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4147"
  , issueCreatedAt = 2015 (-04) (-29) 20 : 54 : 54 UTC
  , issueBody =
      Just
        "If you have a record in which you index two fields with a method into a single multi index, and both fields have the same value, when you search for the field value, the ```getAll``` will return duplicates for the matching document.  E.g. if you have doc like ```{ \"a\": 1, \"b\": 1}```, and you create a single multi index that indexes both \"a\" and \"b\", then search for 1, you get back two copies of the doc.\r\n\r\nSimilarly, if the doc is ```{ \"a\": 1, \"b\": 2}```, ```.getAll(1, 2)``` will return the document twice.\r\n\r\nWhile there may be situations where this is desirable, I'd argue it fails the principle of least astonishment.  If only a single document matches, I expect to receive only a single document in return.\r\n"
  , issueState = "open"
  , issueId = Id 71987750
  , issueComments = 17
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }