Issue
  { issueClosedAt = Just 2014 (-10) (-22) 21 : 49 : 16 UTC
  , issueUpdatedAt = 2015 (-01) (-02) 21 : 16 : 50 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2857/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2857"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "207de5"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:clustering"
          , labelName = "cp:clustering"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 2857
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "High-level ReQL admin API"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2857"
  , issueCreatedAt = 2014 (-08) (-11) 20 : 47 : 29 UTC
  , issueBody =
      Just
        "This is a description of the high-level half of #2663.\n\nThe proposed API is as follows:\n\n``` python\nr.table_reconfigure(\n    table_name,\n    num_shards,\n    num_replicas,\n    director_tag = \"default\",\n    dry_run = False)\n```\n\nThis function calculates a new configuration for the given table based on the given parameters, and then writes that new configuration to the semilattices. The meanings of the parameters are:\n- `table_name` is the name of the table to be reconfigured, in the form `db.table`.\n- `num_shards` is the number of shards that the table should have. It must be an integer between 1 and 32.\n- `num_replicas` is the number of copies of the data that should be stored. There are two ways to specify it: as an integer, or as an object. If it's an integer, then that number of replicas of the data will be stored on servers with the tag `director_tag`. If it's an object, then the keys will be interpreted as server tags and the values as the number of replicas of the data for servers with that tag. For example, `{\"us_east\": 1, \"us_west\": 2}` means to put one copy of the data on servers tagged `us_east` and two copies on servers tagged `us_west`.\n- `director_tag` tells the system which servers to use as directors (i.e. masters). If `num_replicas` is an object, then `director_tag` must appear as one of its keys.\n- If `dry_run` is `False`, then `r.table_reconfigure()` will write the new configuration to the semilattices and also return it. If `dry_run` is `True`, then `r.table_reconfigure()` will just return it. The format of the returned configuration will be the same as a row in the `rethinkdb.table_config` pseudo-table.\n\nWe need to decide if this is a good API and then implement it.\n"
  , issueState = "closed"
  , issueId = Id 39998899
  , issueComments = 30
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }