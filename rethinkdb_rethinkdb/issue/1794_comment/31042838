IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-20) 21 : 24 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/31042838"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1794#issuecomment-31042838"
  , issueCommentCreatedAt = 2013 (-12) (-20) 21 : 24 : 38 UTC
  , issueCommentBody =
      "What is `{\"foo : \"bar\", \"fizz\" : \"buzz\"}` equivalent to? Object sugar doesn't really work here what you really want is to just pass an array of strings that represent attribute access.  I don't think we should add sugar here for several reasons:\r\n\r\n- it doesn't make sense to have it work the same as the other object sugar and it will be confusing to have 2 different sugar syntaxes taking the same sorts of specifiers.\r\n- This is really low impact sugar, `{ \"foo\" : \"bar\" }` isn't that much shorter than, `r.row[\"foo\"][\"bar\"]` and it actually scales worse. That is if you add another attribute access they're the same length, and if you add 2 more the second is actually shorter. The `pluck` syntax is a big win because the only other way to do it takes quadratic typing.\r\n- It's not as intuitive as `r.row[\"foo\"][\"bar\"]` `r.row` is something you learn about very quickly and everyone knows what attribute access looks like. This is an extra piece of sugar that has a different set of rules from all the other sugar."
  , issueCommentId = 31042838
  }