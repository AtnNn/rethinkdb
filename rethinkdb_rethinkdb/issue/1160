Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2014 (-10) (-01) 18 : 50 : 52 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1160/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1160"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 1160
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Proposal: periodic"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1160"
  , issueCreatedAt = 2013 (-07) (-11) 00 : 41 : 45 UTC
  , issueBody =
      Just
        "`stream.periodic(n)` returns a stream of every nth element of the original stream. I can't think of a way to do this with existing primitives. This could be useful in a number of contexts but I'm primarily thinking that it will be useful with triggers (#997).\n\nImagine you want to keep a log of the frequency of table inserts but don't need to log every insert. With triggers and periodic you can do this easily with the following script:\n\n``` python\nimport rethinkdb as r\nfrom datetime import datetime\n\nlog = open('/tmp/insert_log.txt', 'w+')\n\nc = r.connect(host, port)\nfor event in r.table('foo').on_insert().periodic(100).run(c):\n   log.write(\"[%s] 100 inserts on 'foo'\\n\" % datetime.utcnow())\n```\n"
  , issueState = "open"
  , issueId = Id 16608802
  , issueComments = 12
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }