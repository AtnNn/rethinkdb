IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-05) 22 : 02 : 21 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/36799805"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1032#issuecomment-36799805"
  , issueCommentCreatedAt = 2014 (-03) (-05) 22 : 02 : 21 UTC
  , issueCommentBody =
      "Could we talk again about adding an `undefined` value in the server? That will never be sent back to the user?\r\n\r\nThat would solve problems like:\r\n- `group` would make the distinction between `null` and non existing keys\r\n- `undefined` compare to anything except `undefined` returns false (`=`, `>` etc.)\r\n- it solves problems like #1721 \r\n- we can use `undefined` for boundless instead of null -- and eventually put `null` values in secondary indexes\r\n - users can do `r.table(\"foo\").get(1).update({field: undefined}).run(...)` which is so nice compare to `r.table(\"foo\").get(1).replace(r.row.without(\"field\")).run(...)\r\n\r\nGranted, it's a lot of work, but it seems worth doing it.\r\nThe usual wall I run into is \"`undefined` is not JSON\" -- but now that we have pseudo types, this argument doesn't stand anymore..."
  , issueCommentId = 36799805
  }