IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-24) 16 : 55 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 572196
        , simpleUserLogin = N "stuartpb"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/572196?v=3"
        , simpleUserUrl = "https://api.github.com/users/stuartpb"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/95987309"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1032#issuecomment-95987309"
  , issueCommentCreatedAt = 2015 (-04) (-24) 16 : 37 : 46 UTC
  , issueCommentBody =
      "> If people want to exclude a row from an index, they can still do so by producing a normal error (e.g. with r.error).\r\n\r\nPer my comment at https://github.com/rethinkdb/docs/issues/731#issuecomment-95984237, I would rather there be a separate, discrete symbol for the purposes of omitting a value from a secondary index, that isn't conflated with runtime / consistency errors - basically a non-serializable value like the above-proposed `r.undefined` or `r.absent` that, like `r.minval` and `r.maxval` before it, stands in for the earlier usage of `null`, coopting null's earlier useful-but-muddled semantics and allowing `null` to consistently refer to a literal `null` value.\r\n\r\nAs an example: if I reach a path in my data that yields an `r.error` value, I want the message it creates to get sent to a developer pager, as this indicates that something has gone wrong in the data by way of a branch going down an unreachable code path. However, say I want to omit any rows for closed tickets from my sindex of voting options - there's nothing erroneous about the fact that closed tickets *exist*."
  , issueCommentId = 95987309
  }