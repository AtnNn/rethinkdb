IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 18 : 12 : 28 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19702592"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1032#issuecomment-19702592"
  , issueCommentCreatedAt = 2013 (-06) (-19) 18 : 12 : 28 UTC
  , issueCommentBody =
      "> Having `null` compared with anything return `false` seems like it's going\r\nto lead to some really weird behaviors.\r\n\r\nTo be clear, I wasn't proposing that. I think `null` comparisons should\r\nwork *exactly* the way they work now, *except* in the context of `filter`.\r\nIf, within filter, you compare with `null` I think it should have the same\r\nbehavior as comparing against a non-existent attribute (i.e. throw an error\r\nand have `filter` skip the row).\r\n\r\nI think this behavior would do the most convenient thing most of the time.\r\n\r\n\r\nOn Wed, Jun 19, 2013 at 10:40 AM, Michel <notifications@github.com> wrote:\r\n\r\n> I agree with @jdoliner <https://github.com/jdoliner>, I would expect\r\n>\r\n> r.row(\"field\").eq(2) // return false if r.row(\"field\") is null\r\n> r.row(\"field\").ne(2) // return true if r.row(\"field\") is null\r\n> r.row(\"field\").gt(2) // return false if r.row(\"field\") is null\r\n> r.row(\"field\").lt(2) // return false if r.row(\"field\") is null\r\n>\r\n> And I would expect to return false everytime the field is undefined.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1032#issuecomment-19700379>\r\n> .\r\n>"
  , issueCommentId = 19702592
  }