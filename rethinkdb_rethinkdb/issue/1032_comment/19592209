IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-18) 05 : 53 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19592209"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1032#issuecomment-19592209"
  , issueCommentCreatedAt = 2013 (-06) (-18) 05 : 53 : 43 UTC
  , issueCommentBody =
      "Since when are we moving toward `null` being equivalent to non existence?\r\nAre we going to have\r\n```\r\nr.table(\"foo\").update( { field: null} )\r\n```\r\n\r\nequivalent to\r\n```\r\nr.table(\"foo\").replace( r.row.without(\"field\") )\r\n```\r\n?\r\n\r\nHaving `.get(null)` returns all rows excluded from the index would mean returning more than just `null` values since we don't index arrays and objects.\r\n\r\nSo if I want to store if someone answer yes/no/don't know/didn't answer, I will have to use an integer or a string, which is not really cool.\r\n\r\n\r\nI feel like we are going to add more and more inconsistencies in RQL by having null meaning absence of value... which means making RQL just more and more complicated."
  , issueCommentId = 19592209
  }