IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-10) 00 : 02 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 297060
        , simpleUserLogin = N "nviennot"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/297060?v=3"
        , simpleUserUrl = "https://api.github.com/users/nviennot"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/31990780"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1032#issuecomment-31990780"
  , issueCommentCreatedAt = 2014 (-01) (-10) 00 : 02 : 20 UTC
  , issueCommentBody =
      "> there's no value you can put in filter{|doc| doc['non_existent_field'].eq(VALUE)} that will return true.\r\n\r\nI want to be able to do `filter{|doc| doc['non_existent_field'].eq(r.error)}` to match what I could do with `get_all`.\r\nBecause with the `get_all` syntax, it makes `r.error` looks like a value. So I want to use `r.error` as a value. So that filter should be able to return true when `VALUE==r.error`\r\n\r\nWhatever we use to get undefined values on `get_all` should work with a filter eq."
  , issueCommentId = 31990780
  }