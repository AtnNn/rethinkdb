IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-01) 16 : 21 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 519940
        , simpleUserLogin = N "elifarley"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/519940?v=3"
        , simpleUserUrl = "https://api.github.com/users/elifarley"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/88540802"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/746#issuecomment-88540802"
  , issueCommentCreatedAt = 2015 (-04) (-01) 16 : 19 : 39 UTC
  , issueCommentBody =
      "@coffeemug, my suggestion is to initially implement a passive TTL, without any timers.\r\n\r\nWhen a document is requested, its TTL is checked, and in case the object is too old, it is immediately deleted and the client receives a NOT FOUND error or something to that effect.\r\n\r\nI have implemented this idea in [PassiveTimeOutMap](https://issues.apache.org/jira/browse/COLLECTIONS-241) - here's a brief description:\r\n\r\n>This is a Map decorator which passively evicts expired keys once their expiry time has been reached.\r\n\r\n>When putting a key-value pair in the map, this decorator calls expiryTime(key, value), passing the key and the value as parameters, and uses the returned value as the expiry time for that key.\r\n\r\n>When getting the value for a key, its expiry time is checked, and if it's greater than the current time, the value is returned. Otherwise, the key is removed from the decorated map, and null is returned.\r\n\r\n>In doing so, there's no need to have a separate, active thread (hence the name *passive*) to check expiry times - the check is performed on demand."
  , issueCommentId = 88540802
  }