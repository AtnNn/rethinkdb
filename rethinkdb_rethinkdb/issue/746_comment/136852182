IssueComment
  { issueCommentUpdatedAt = 2015 (-09) (-01) 20 : 50 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 969456
        , simpleUserLogin = N "webmasterkai"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/969456?v=3"
        , simpleUserUrl = "https://api.github.com/users/webmasterkai"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/136852182"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/746#issuecomment-136852182"
  , issueCommentCreatedAt = 2015 (-09) (-01) 20 : 28 : 15 UTC
  , issueCommentBody =
      "## Request\r\n\r\nEnable the \"ttl garbage collector\" task to run a user defined query periodically instead of having a fixed delete action. See #3636, #1863, and #3740 for background on user defined/serialized ReQL.\r\n\r\nBeing able to define queries more advanced than a fixed equivalent to `r.table('foo').filter(r.row('expireAfter').lt(r.now())).delete()` would be excellent and much more powerful.\r\n\r\n### Use cases beyond a simple `ttl` field:\r\n* Ability to look at any field instead of a specific ttl attribute.\r\n* Instead of a full delete, update a field value.\r\n* Auto delete users and _related data from multiple tables_ when a user hasn't logged in within the last year.\r\n* Auto update table content from remote API using `r.http()`\r\n* New query can retroactively remove \"expired\" rows and doesn't depend on a ttl flag on `tableCreate`.\r\n* When the field `spamScore` reaches a certain threshold delete it. (changfeed reactions on the row living inside the db #3964?)\r\n\r\nAlternatively I'd just vote to have the ttl expire trigger an event (#3367?) so I can process it via `changes` however I like."
  , issueCommentId = 136852182
  }