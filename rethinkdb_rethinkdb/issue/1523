Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-09) (-09) 18 : 58 : 20 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1523/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1523"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 1523
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 389922
        , simpleUserLogin = N "AngryDeveloper"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/389922?v=3"
        , simpleUserUrl = "https://api.github.com/users/AngryDeveloper"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "GridFS like implementation"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1523"
  , issueCreatedAt = 2013 (-10) (-07) 20 : 51 : 15 UTC
  , issueBody =
      Just
        "Would it be technically possible to implement something comparable to the mongo GridFS? I think that you already know how it works, but some remininding is always useful!\r\n\r\nYou basically send a file to one of the nodes, who then cut in in chunks, mongo is implementing it using two collections,\r\n\r\n* __fs.files__ which stores the file metadatas (which are obviously completely customizable by the user)\r\n* __fs.chunks__ which stores the file chunks + the id of the parent from the fs.files collection + the sequence number of the chunk\r\n\r\nThis feature in addition to the awesomely easy rethinkdb sharding/replication could be a great way to use the db as an elastic storage FS"
  , issueState = "open"
  , issueId = Id 20638252
  , issueComments = 24
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }