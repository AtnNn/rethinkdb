IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-18) 21 : 44 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/165904137"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/881#issuecomment-165904137"
  , issueCommentCreatedAt = 2015 (-12) (-18) 21 : 44 : 23 UTC
  , issueCommentBody =
      "@danielmewes: to elaborate on the array thing, while I agree it's probably not a typical use-case, trying to accomplish the same thing with `merge` is fairly cumbersome. I most often find myself wanting to do this when I'm dealing with grouped streams and need to pivot the `reduction` values into keys.\r\n\r\n```js\r\nr.expr({ group: 500, reduction: [ 'a', 'b', 'c' ] })\r\n.merge(row => row('reduction').map(r => [ r, row('group') ]).coerceTo('object'))\r\n.omit('group')\r\n```\r\n\r\nGiven that it doesn't result in any compromises to the settled proposal, it seems like a fairly good fit here. It also gives `rename` similar semantics to `pluck` style selectors, which I think is why (to me) it feels like something that should work."
  , issueCommentId = 165904137
  }