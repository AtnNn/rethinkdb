IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-15) 09 : 27 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12259048"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/213#issuecomment-12259048"
  , issueCommentCreatedAt = 2013 (-01) (-15) 09 : 25 : 58 UTC
  , issueCommentBody =
      "I'm reopening because this issue is bigger than regex. There should be many operations available on strings that currently aren't, and this issue is a reminder for us to do an audit. At the very least, many of array operations should be polymorphic on strings (e.g. `slice`), and I'd imagine there are many others.\r\n\r\nAs for regex, even if we end up using V8's version of regex internally (we should discuss the pros and cons), I think we should introduce a rethinkdb native matching primitive. So your example above would translate to the following (in js):\r\n\r\n```javascript\r\nr.table(...).filter(r.row('url').match(/regex/))\r\n```\r\n\r\nEDIT: even if we used V8 to implement the primitive above, the benefit would be that we could prove it's deterministic, which would make a huge difference for write queries."
  , issueCommentId = 12259048
  }