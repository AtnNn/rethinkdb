IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-14) 07 : 53 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11367873"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/150#issuecomment-11367873"
  , issueCommentCreatedAt = 2012 (-12) (-14) 07 : 52 : 28 UTC
  , issueCommentBody =
      "I think we won't find a way to make everyone happy here, so I'd like to leave this decision up to @wmrowan. At this point, I'd be ok with any decision we explored, and I don't think any of the above choices could have significantly adverse effect on the API. With that out of the way, I'll still list my opinions:\r\n\r\n1. In Javascript `r.row` refers to the implicit variable, `r.row('foo')` refers to attribute `foo` of the implicit variable, `r.row('foo')('bar')` refers to `bar` inside `foo`, and so on. Parentheses in this context are defined to mean attribute access. So isn't it strange that `r('foo')` is suddenly equivalent to `r.expr('foo')`, which has entirely different meaning? I don't think this is a particularly big deal (it's just a matter of an FAQ question/answer we can link people to), but I do think it's a little odd.\r\n2. It seems that in js all we'll really be doing for implicit access is renaming `R` to `row`, correct?\r\n3. Please don't forget to drop the lingering `r.row('foo.bar')` syntax everywhere. We all agree it's a bad idea.\r\n4. I think that defining `r(expr)` in Python is cool. If you import as `import rethinkdb as r` you won't see this shortcut, your tools won't break, and you'll generally proceed on your merry way. If you import as `from rethinkdb import r`, you'll get the shortcut if you want it. It isn't a very difficult concept to explain I think, and we could always just choose not to tell people about the latter option if we really want to. It's also less likely to confuse people than using `r['foo']` because they won't encounter the `r('foo')` syntax nearly as often."
  , issueCommentId = 11367873
  }