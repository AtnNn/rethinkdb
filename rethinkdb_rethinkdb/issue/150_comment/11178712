IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-10) 00 : 49 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11178712"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/150#issuecomment-11178712"
  , issueCommentCreatedAt = 2012 (-12) (-10) 00 : 49 : 33 UTC
  , issueCommentBody =
      "I think we should support the implicit variable on the server just because a lot of other clients might want to have it, and we don't want 4 different implementations we don't control with different quirks.  I agree with you on theoretical purity grounds; it's a feature specific to some drivers, and so should be part of those drivers rather than the protobuf spec.  But on \"what makes RethinkDB better\" grounds, I think lots of drivers will want to have it (especially ones for languages without convenient anonymous function syntax), and supporting it in the protobuf spec will lead to better and more consistent implementations.\r\n\r\nI think it would be really hard to make `r.row` work as expected in all cases.  We can see where it ends up in the AST we send to the server, and in some languages we can see roughly where the expression was evaluated, but neither of these correspond to where it exists in the original source tree.  In languages without macro systems, we don't have that information in an easy form.  (I think Python has some sort of AST module, but I've heard it's a pain to work with.)"
  , issueCommentId = 11178712
  }