IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-14) 18 : 22 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11386529"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/150#issuecomment-11386529"
  , issueCommentCreatedAt = 2012 (-12) (-14) 18 : 22 : 01 UTC
  , issueCommentBody =
      "@coffeemug `r.row` isn't quite a replacement for `r.R` which accepts strings that may represent let vars or the implicit variable, and allows for referencing fields with `.` access notation. The new `r.row` is simply a fixed reference to the implicit variable. It is now the only way to reference the implicit variable (I'm getting rid of `r.R`) and fields must now be accessed using `(...)`. Similarly, `r.letVar` will now have to be used for all other variables and the `.` access syntax will no longer be supported in `r.letVar` either.\r\n\r\nAs for the dissonance between `r(...)` and `anythingelse(...)` I'd suggest that at the top level (`r`) the parens operator can be thought of as accessing fields of the universe of possible RQL terms. :)"
  , issueCommentId = 11386529
  }