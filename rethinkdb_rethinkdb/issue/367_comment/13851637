IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-20) 19 : 35 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13851637"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/367#issuecomment-13851637"
  , issueCommentCreatedAt = 2013 (-02) (-20) 19 : 35 : 26 UTC
  , issueCommentBody =
      "> [`default`] evaluates it's first argument first, checks if this results in an error and then evaluates and returns it's second argument if this is the case\r\n\r\nIf we catch generic errors then it should be called catch. Really I think we should implement `catch` as:\r\n\r\n    expr.catch(exc_type, recovery) ~> branch(type_of(expr) == exc_type, recovery, expr)\r\n\r\nAnd then:\r\n\r\n    default(value) ~> catch(missing_attr_exc, value)"
  , issueCommentId = 13851637
  }