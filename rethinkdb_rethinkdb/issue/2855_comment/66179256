IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-08) 20 : 15 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 49839
        , simpleUserLogin = N "jhstatewide"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/49839?v=3"
        , simpleUserUrl = "https://api.github.com/users/jhstatewide"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/66179256"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2855#issuecomment-66179256"
  , issueCommentCreatedAt = 2014 (-12) (-08) 20 : 15 : 59 UTC
  , issueCommentBody =
      "@danielmewes: My app has posts from businesses (the businesses have the coordinate field). We'd like to know the businesses with recent posts OR recent posts.... we end up doing a get_nearest which returns a large set and then doing a filter to get only businesses with recent posts. The filter ends up running un-indexed on 10s of thousands of businesses (since get_nearest can only be invoked on the table as a whole).\r\n\r\nEven if I had the ability to do compound indexes it would be a huge relief -- we use this functionality in other places, for instance we have a [user_id, timestamp] compound index and that works great. \r\n\r\nThe carnality of the query is large -- since it is timestamps being used. For the most part, the locations are unique.\r\n\r\nPS... despite this caveat we have hit very few bumps with RethinkDB, it's 99% awesome"
  , issueCommentId = 66179256
  }