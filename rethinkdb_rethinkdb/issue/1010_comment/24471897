IssueComment
  { issueCommentUpdatedAt = 2013 (-09) (-15) 13 : 56 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7032
        , simpleUserLogin = N "anatol"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7032?v=3"
        , simpleUserUrl = "https://api.github.com/users/anatol"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/24471897"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1010#issuecomment-24471897"
  , issueCommentCreatedAt = 2013 (-09) (-15) 13 : 56 : 40 UTC
  , issueCommentBody =
      "More I use rethinkdb more I believe that forward data format migration should be automatic and transparent to user. e.g. a user upgrades db from 1.8 to 1.9 and data migration happen when he start 1.9 first time. It should work on migration through several versions as well.\r\n\r\nI do not know much about rethinkdb format but a lot of other applications behave this way. Here is a \"live migration\" in tup build tool https://github.com/gittup/tup/blob/master/src/tup/db.c#L543\r\n\r\nHow to migrate to previous version? First is to restore data from backup. A good DB admin should always have backups and especially do them before upgrading database binaries. If there are no backups then he can run the \"migrate\" script that rethinkdb already has - first export the data to text format and then restore it in prev version.\r\n\r\n"
  , issueCommentId = 24471897
  }