IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-13) 22 : 07 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22601493"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1271#issuecomment-22601493"
  , issueCommentCreatedAt = 2013 (-08) (-13) 22 : 07 : 51 UTC
  , issueCommentBody =
      "Yeah, I really don't like the idea of blocking the entire tree just to do a count. And making a snapshot and then updating block counts within the snapshot (but not block contents) seems really questionable to me. I also think that technique really sucks if you're doing the types of queries that @dbettin is describing here. The query he had was:\r\n\r\n```Python\r\nr.table('table').count(r.row['status'].contains('deployed')).run(conn)\r\n```\r\n\r\nwhich means already he has to create an entire index just to efficiently do this count but looking at the data it seems as if the \"status\" value is an array of tags and he might well want to count those too. So if he also wants to efficiently do:\r\n\r\n```Python\r\nr.table('table').count(r.row['status'].contains('deployed')).run(conn)\r\nr.table('table').count(r.row['status'].contains('spawned')).run(conn)\r\nr.table('table').count(r.row['status'].contains('crashed')).run(conn)\r\nr.table('table').count(r.row['status'].contains('running')).run(conn)\r\n```\r\n\r\nhe's going to need a different index for each one of those which is going to get to be a big overhead really quickly. Also with this method there's no way to efficiently do something like:\r\n\r\n```Python\r\nr.table('table').concat_map(r.row[\"articles\"]).count()\r\n```\r\n\r\nbut this is very easy to do with LMR."
  , issueCommentId = 22601493
  }