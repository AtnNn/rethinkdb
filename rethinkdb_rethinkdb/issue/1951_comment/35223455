IssueComment
  { issueCommentUpdatedAt = 2014 (-02) (-17) 01 : 53 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/35223455"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1951#issuecomment-35223455"
  , issueCommentCreatedAt = 2014 (-02) (-17) 01 : 53 : 42 UTC
  , issueCommentBody =
      "A third relatively easy option is to reduce the amount of stored information by making the following optimizations:\r\n- Don't store recency for blob blocks. They can just use the recency of the btree leaf node that they are attached to. Internally we would probably have two LBA lists in the serializer, one for blocks that have a recency and one for blocks that don't. We would partition the space of block ids into something like two halves, to identify which block id belongs where (and the cache would assign block ids from the different pools accordingly).\r\n- `ser_block_size` doesn't need to be 32 bit. 16 bit would probably be enough, maybe 24 bit.\r\n- `flagged_off64_t` also doesn't need the full 64 bit.\r\n\r\nThat would easily cut the overhead in half."
  , issueCommentId = 35223455
  }