Issue
  { issueClosedAt = Just 2015 (-05) (-13) 18 : 14 : 30 UTC
  , issueUpdatedAt = 2015 (-05) (-13) 18 : 14 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4224/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4224"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4224
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 8921895
        , simpleUserLogin = N "ha1331"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/8921895?v=3"
        , simpleUserUrl = "https://api.github.com/users/ha1331"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Configs updating automaticly"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4224"
  , issueCreatedAt = 2015 (-05) (-13) 08 : 25 : 15 UTC
  , issueBody =
      Just
        "Had a talk with Daniel Mewes yesterday and he suggested I open an issue about this.\n\nMy issue is actually not an issue, just a taught. currently you join cluster by editing /etc/rethinkdb/instances/instance.conf\n# The host:port of a node that rethinkdb will connect to\n# This option can be specified multiple times.\n# Default: none\n\njoin=some.ip.add.ress:port\n\nWhat ended up happening to me, was I configured one server, then another then another. But since I'm like really really lazy and not the best example of great admin, I didn't think about the join thing in advance. End result was node a didn't join into enything, since it was the first node going up, node b and node c both joined node a. All good, cluster up and running. If node A went down, not a biggie, nodes b and c functioned and cluster is still up. Then I eneded up rebooting all the nodes for a reason or another. Nodes B and C came up, node a didn't. So, no cluster, because B and C only knew about A, that wasn't coming up. \n\nThis isn't a problem that would affect majority of users and affects none of the responsible ones. But it's still bit counter intuitive. More so if you grow your cluster later on. You would need to go over the existing nodes and add join=... to if you wanted to make sure every node knows about all the other nodes.\n\nMy issue isn't actually what happened to me, since the current impelementation is good enough, if you actually use it like it should be used. My \"issue\"  would be kind of improvement, that could possibly be usefull in other ways also. It's not orginal idea, and actually not even mine. I just liked how foundationDB was/is doing this. You have:\n\n/etc/foundationdb/fdb.cluster file and it looks somethink like this:\nCnY5q4pj:QFLmMruAgIuFtTlJgx9JxuFISmATCIBP@1.1.1.1:4500,1.1.1.2:4500,1.1.1.2:4500\n\nThe idea is, when you start the first server of the cluster, this file gets created by running 'sudo /usr/lib/foundationdb/make-public.py'. Then you start the next, and copy this file to the new node (you didn't need to add the ip of the joining server manully, just copy the file) and it would just join the cluster and then the fdb process updated the cluster file in every node of that cluster with the new info.\n\nAlso I liked how you needed to have that CnY5q4pj:QFLmMruAgIuFtTlJgx9JxuFISmATCIBP in the begining to make sure joining nodes are \"authenticated\". \n"
  , issueState = "closed"
  , issueId = Id 75898363
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 595
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }