IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-12) 01 : 17 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/51862393"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2882#issuecomment-51862393"
  , issueCommentCreatedAt = 2014 (-08) (-12) 01 : 17 : 11 UTC
  , issueCommentBody =
      "> We might be better off with a term that's widely used but not literally correct than with a term that's accurate but nobody has ever used in this context before.\r\n\r\n+1\r\n\r\n> The problem I have with primary/secondary is that they sound mutually exclusive, like a node can't be both a primary and a secondary at the same time. But the APIs in #2680 and #2857 treat the \"primaries\" as a subset of the \"secondaries\", like some nodes are just secondaries and other nodes are both secondaries and primaries. So the terms \"primary\" and \"secondary\" don't really fit.\r\n\r\nAre we sure we want that abstraction (i.e. that we don't want disjoint sets in the interface)?\r\n\r\n---\r\n\r\nWe could also sidestep the issue by not using \"replica\".  What if we just called the replicas the nodes for that shard, and one of the nodes was the master?"
  , issueCommentId = 51862393
  }