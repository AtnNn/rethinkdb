IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-12) 02 : 05 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 478118
        , simpleUserLogin = N "bchavez"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/478118?v=3"
        , simpleUserUrl = "https://api.github.com/users/bchavez"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/180178033"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5349#issuecomment-180178033"
  , issueCommentCreatedAt = 2016 (-02) (-05) 03 : 38 : 37 UTC
  , issueCommentBody =
      "@AtnNn I was looking at the binary output for double-precision floating point... found this:\r\n\r\n```\r\n1.2345678901234568e39: CLIENT\r\n1.2345678901234569e39: Linux Server\r\n1.2345678901234567e39: Windows Server\r\n0 10010000000 1101000001100100100100000011101011100000011011100000: CLIENT\r\n0 10010000000 1101000001100100100100000011101011100000011011100000: Linux Server\r\n0 10010000000 1101000001100100100100000011101011100000011011011111: Windows Server\r\n```\r\n\r\nMight be a clue to what's happening with handling floating point in ***windows*** RethinkDB server?\r\n\r\nPretty interesting: `...8e39` and `...9e39` are both the same in IEEE 754 binary and `...7e39` is not? I think this is why the test doesn't fail against Linux but does against Windows RethinkDB server.\r\n\r\nPossibly related:\r\n[Rounding differences on Windows vs Unix based system in sprintf](http://stackoverflow.com/questions/4649554/rounding-differences-on-windows-vs-unix-based-system-in-sprintf)\r\n\r\nhttps://github.com/rethinkdb/rethinkdb/blob/0ec7cc90061bb7cd4f38b52cfea9bc9767a78d5f/src/rapidjson/internal/dtoa.h#L201"
  , issueCommentId = 180178033
  }