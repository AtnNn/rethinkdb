Issue
  { issueClosedAt = Just 2015 (-10) (-12) 19 : 14 : 36 UTC
  , issueUpdatedAt = 2015 (-10) (-12) 19 : 40 : 24 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4943/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/pull/4943"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4943
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 478118
        , simpleUserLogin = N "bchavez"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/478118?v=3"
        , simpleUserUrl = "https://api.github.com/users/bchavez"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Java Driver: Fixes ordering of Funcall Arguments in the AST."
  , issuePullRequest =
      Just
        PullRequestReference
          { pullRequestReferenceHtmlUrl =
              Just "https://github.com/rethinkdb/rethinkdb/pull/4943"
          , pullRequestReferencePatchUrl =
              Just "https://github.com/rethinkdb/rethinkdb/pull/4943.patch"
          , pullRequestReferenceDiffUrl =
              Just "https://github.com/rethinkdb/rethinkdb/pull/4943.diff"
          }
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4943"
  , issueCreatedAt = 2015 (-10) (-11) 06 : 07 : 23 UTC
  , issueBody =
      Just
        "For @deontologician ,\n\nAfter some protocol debugging in the C# driver, it appears the Java driver is also affected. Per the Python source code:\n\n```\nclass FunCall(RqlQuery):\n    tt = pTerm.FUNCALL\n\n    # This object should be constructed with arguments first, and the\n    # function itself as the last parameter.  This makes it easier for\n    # the places where this object is constructed.  The actual wire\n    # format is function first, arguments last, so we flip them around\n    # before passing it down to the base class constructor.\n    def __init__(self, *args):\n        if len(args) == 0:\n            raise ReqlDriverError(\"Expected 1 or more arguments but found 0.\")\n        args = [func_wrap(args[-1])] + list(args[:-1])\n    .....\n```\n\nSeems like the actual wire-line format is function first, arguments last, so we flip them around when building the AST.\n\nThis PR adds a `Funcall` template that overrides `build()` moving the last argument to the first. It's been about 14 years since I wrote Java, so I hope this is correct. :)\n\nThis should also get a few more unit tests to pass.\n\nP.S.: I tried to keep the PR as small as possible so the AST should get regenerated.\n"
  , issueState = "closed"
  , issueId = Id 110837144
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-11) (-11) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 92
          , milestoneClosedIssues = 84
          , milestoneDescription = Just ""
          , milestoneTitle = "2.2"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/92"
          , milestoneCreatedAt = 2015 (-02) (-03) 22 : 18 : 37 UTC
          , milestoneState = "closed"
          }
  }