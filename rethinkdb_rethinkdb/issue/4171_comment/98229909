IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-01) 20 : 37 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/98229909"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4171#issuecomment-98229909"
  , issueCommentCreatedAt = 2015 (-05) (-01) 20 : 37 : 03 UTC
  , issueCommentBody =
      "The python vm is impossible to sandbox, you always have access to the db\nuser's powers if you put untrusted strings into eval. In javascript, the\ndriver serialization is run in the browser, which is sandboxed, and the\nserver only ever receives the serialized wire format. it never spawns a\nnodejs process and calls eval on the string from the user. We do have\n`r.js()`, but I don't believe v8 has I/O apis by itself(correct me if I'm\nwrong), so the damage is mostly limited to blowing up memory and cpu usage\non the server, or trashing the database. Even if r.js is insecure now,\npresumably if reql becomes powerful enough we could remove it later. This\nwould be a large additional security problem to fix if we wanted to make\nusage of the dataexplorer secure.\n\n\n\nOn Fri, May 1, 2015 at 1:29 PM Michael Lucy <notifications@github.com>\nwrote:\n\n> What do you mean? We already let people execute JS code on the server from\n> arbitrary clients, letting people execute Python or Ruby code only from the\n> web UI should be strictly less insecure. (I suppose their interpreters may\n> be harder to integrate in a safe way.)\n>\n> \8212\n> Reply to this email directly or view it on GitHub\n> <https://github.com/rethinkdb/rethinkdb/issues/4171#issuecomment-98228184>\n> .\n>\n"
  , issueCommentId = 98229909
  }