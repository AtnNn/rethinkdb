IssueComment
  { issueCommentUpdatedAt = 2014 (-02) (-26) 22 : 20 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/36184975"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2030#issuecomment-36184975"
  , issueCommentCreatedAt = 2014 (-02) (-26) 22 : 20 : 30 UTC
  , issueCommentBody =
      "I think calling `avg` on a field that's in no documents should behave the same way as calling `avg` on an empty stream (it should produce a non-existence error that people can handle with `default` if they want to).\r\n\r\n@atnnn -- a major goal of ReQL is to support tables where not all rows have the same fields without it being too much extra work.  `pluck`, `orderby`, etc. all ignore non-existant fields.  I don't think we want to make these an exception.\r\n\r\n`filter` is sort of a special case because people are providing predicates rather than selectors, and it's a lot more confusing when you use an `or` predicate and it aborts before reaching the second half.  I agree that we should fix filter, but these commands don't share the same problems.\r\n\r\n(Also, how would people feel about adding an optarg `default` that provides a default value in case of missing fields or non-existence errors?  Something like `r.table('users').avg('score', default:0)`.)"
  , issueCommentId = 36184975
  }