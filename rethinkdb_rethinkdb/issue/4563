Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-26) 18 : 45 : 26 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4563/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4563"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 4563
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Use segmented stacks some time in the future"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4563"
  , issueCreatedAt = 2015 (-07) (-22) 19 : 06 : 40 UTC
  , issueBody =
      Just
        "GCC 4.7 and later introduced the `-fsplit-stack` feature that allows stacks to dynamically grow.\r\nThere is very little documentation on this, but these are two relevant documents (both are outdated and incomplete though):\r\nhttps://gcc.gnu.org/wiki/SplitStacks\r\nhttp://llvm.org/releases/3.0/docs/SegmentedStacks.html\r\n\r\nBoost has support for it in their context/coroutine library:\r\nhttp://www.boost.org/doc/libs/1_58_0/libs/coroutine/doc/html/coroutine/stack/segmented_stack_allocator.html\r\n\r\nThe Boost page also mentions that it is supported by Clang starting with 3.4 as well (though the Clang release notes don't mention it).\r\n\r\nI have a test implementation that seems to work with GCC-4.9 in branch `daniel_segmented_stack` (see https://github.com/rethinkdb/rethinkdb/blob/daniel_segmented_stack/src/arch/runtime/context_switching.cc in particular).\r\n\r\nThere are multiple problems right now:\r\n1. I don't properly understand the details of the GCC implementation. Like what size do the stack segments get? There stack segment pointers are stored in a fixed-size array (10 right now). What happens if a coroutine needs more than that? Does it just silently overflow? What does `__splitstack_block_signals_context` do? I \r\n2. Compiler support is spotty. GCC only appears to implement it on Linux (it rejects the flag on OS X). Clang on OS X requires the gold linker for this to work which is still in alpha. There is also a somewhat fuzzy bug report on the Clang implementation about this not working that has been open since 2013 without much activity https://llvm.org/bugs/show_bug.cgi?id=14332 , which could be an indication of the little attention this feature receives.\r\n\r\nHopefully at some point in the future compiler support will be better and we should give this another shot."
  , issueState = "open"
  , issueId = Id 96641594
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }