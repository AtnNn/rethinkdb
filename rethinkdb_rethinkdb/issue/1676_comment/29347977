IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-26) 23 : 58 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29347977"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1676#issuecomment-29347977"
  , issueCommentCreatedAt = 2013 (-11) (-26) 23 : 58 : 26 UTC
  , issueCommentBody =
      "The only thing I worry about is the prefix/infix thing.  It feels wrong to tie the notation of the profiles to API decisions we made in the clients.  For instance, there's no intrinsic reason why `r.add` should be infix or prefix; we just picked one (or both, in the case of the Ruby driver).  The clojure driver probably does everything in prefix.  Hard-coding the prefix/infix choices we made for a particular driver into the server seems...bad.\r\n\r\nWhat if we just did postfix instead?  So `table.map{...}.reduce{...}` would look like:\r\n```\r\n[\r\n  sub_tasks: [\r\n    sub_tasks: [\r\n      TABLE\r\n    ]\r\n    task: MAP   \r\n  ]\r\n  task: REDUCE\r\n]\r\n```\r\n\r\nAlso, on the subject of including backtraces everywhere: that will make the profiles a lot longer.\r\n\r\n@jdoliner -- I'd like to understand the profiling code better.  Do you think that we could pair-program some of these changes when you get back?"
  , issueCommentId = 29347977
  }