IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-23) 22 : 54 : 26 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/75655872"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1676#issuecomment-75655872"
  , issueCommentCreatedAt = 2015 (-02) (-23) 22 : 54 : 26 UTC
  , issueCommentBody =
      "I think an optarg to `run` (like we do it now) is nicer than `r.explain`. It somehow feels... cleaner...\r\n\r\nIt's weird to add a term to do something that feels like a runtime option. Also, `explain` is quite different from profiling. In SQL, `EXPLAIN` looks at the query, the statistics, and then tells you how it will run the query. Profiling doesn't do that -- it actually runs the query, and tells you statistics about how it ran it. So I think we should keep them separate.\r\n\r\nA few more thoughts:\r\n\r\n- I now agree that putting this info into `jobs` is a bad idea. In addition to usability issues, the `jobs` table is really designed for ops people, while profiling is designed for developers, so it makes sense to keep them separate.\r\n- I think the profiler is under-engineered in ways that matter and over-engineered in ways that don't (i.e. it gives lots of information that isn't helpful, and little information that *is* helpful)."
  , issueCommentId = 75655872
  }