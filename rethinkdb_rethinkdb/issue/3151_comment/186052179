IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-19) 05 : 01 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1441929
        , simpleUserLogin = N "jlhawn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1441929?v=3"
        , simpleUserUrl = "https://api.github.com/users/jlhawn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/186052179"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3151#issuecomment-186052179"
  , issueCommentCreatedAt = 2016 (-02) (-19) 05 : 01 : 10 UTC
  , issueCommentBody =
      "@danielmewes Looks like that segmentation fault is actually an error from my added code. I forgot that in C/C++ struct fields are not automatically initialized with zero. I have been spoiled by this feature of Golang. I have some logic that is basically this:\r\n\r\n```C++\r\nif (NULL == tls_ctx) {\r\n    make_tcp_conn();\r\n} else {\r\n    make_secure_tcp_conn();\r\n}\r\n```\r\n\r\nMy assumption was that if TLS is not configured then `tls_ctx` will be `NULL`. However, by default the value of `tls_ctx` is just arbitrary garbage data (not `NULL`) it would attempt to make a TLS connection with invalid context."
  , issueCommentId = 186052179
  }