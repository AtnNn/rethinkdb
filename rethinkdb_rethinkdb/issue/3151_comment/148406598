IssueComment
  { issueCommentUpdatedAt = 2015 (-10) (-15) 14 : 39 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 494012
        , simpleUserLogin = N "kevincox"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/494012?v=3"
        , simpleUserUrl = "https://api.github.com/users/kevincox"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/148406598"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3151#issuecomment-148406598"
  , issueCommentCreatedAt = 2015 (-10) (-15) 14 : 39 : 04 UTC
  , issueCommentBody =
      "I would like to add my proposal so that it can be chewed at.\r\n\r\nI propose that TLS is included in RethinkDB. This allows encrypted connections by default and you don't have to worry about ensuring that all the nodes in the cluster know about they encrypted port, Rethink will know it's encrypted port and can advertise that to the rest of the cluster.\r\n\r\nMore importantly, integrating TLS allows the use of the authentication methods built into TLS. This allows flexible setup and authentication of servers.\r\n\r\nFor example:\r\n- One company may wish to maintain a CA cetificate that it uses to sign client certificates for each Rethink node. Then the cluster can be told to allow any server with a certificated signed by that CA to join the cluster.\r\n- Other company might want to keep it simple and just generates a single certificate and put it on each node, then that single certificate can be authorized to join the cluster.\r\n- A third company which wants a little more granular security can generate a certificate for each node and maintains a list of valid certificates that can be used to connect to the cluster.\r\n\r\nThe nice things about both of these is that the authentication can be managed in RethinkDB tables and will always be kept up to date throughout the entire cluster. \r\n\r\nI believe the third scenario would make a good default configuration. On initial boot each node generates a certificate and attempts to join with that. Then the join request could be accepted via the webui. This would make it very easy to set up a secure cluster.\r\n\r\nSorry for the massive comment but using TLS provides a lot of flexibility and easy to manage security that I feel is important to maintaining a cluster such as Rethink. Furthermore the client authentication could be handled very similarly (but separately) making the whole system very consistent."
  , issueCommentId = 148406598
  }