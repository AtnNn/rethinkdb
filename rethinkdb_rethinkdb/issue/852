Issue
  { issueClosedAt = Just 2013 (-06) (-12) 20 : 41 : 12 UTC
  , issueUpdatedAt = 2013 (-06) (-21) 05 : 11 : 34 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/852/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/852"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 852
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crash when resharding and modifying sindexes during traffic: Guarantee failed: [!token_pair->sindex_write_token.has()]"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/852"
  , issueCreatedAt = 2013 (-05) (-20) 22 : 32 : 21 UTC
  , issueBody =
      Just
        "I was running a cluster of 6 machines hosting a table with 5 secondary indexes.  While traffic was running (reads, writes, deletes), I deleted one of the secondary indexes and then immediately resharded the table from 6 to 4.  Observed this crash:\n\n``` c\nVersion: rethinkdb 1.5.0-11-g57dd8d-dirty (debug) (GCC 4.6.1)\nerror: Error in ../src/buffer_cache/mirrored/mirrored.cc at line 984:\nerror: Guarantee failed: [!token_pair->sindex_write_token.has()] \nerror: Backtrace:\nerror: Mon May 20 15:27:41 2013\n\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\n       3: format_backtrace(bool) at backtrace.cc:197\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:67\n       5: mc_transaction_t::~mc_transaction_t() at mirrored.cc:984\n       6: scc_transaction_t<mc_cache_t>::~scc_transaction_t() at semantic_checking.tcc:120\n       7: scc_transaction_t<mc_cache_t>::~scc_transaction_t() at semantic_checking.tcc:120\n       8: scoped_ptr_t<scc_transaction_t<mc_cache_t> >::reset() at scoped.hpp:66\n       9: scoped_ptr_t<scc_transaction_t<mc_cache_t> >::~scoped_ptr_t() at scoped.hpp:30\n       10: btree_store_t<rdb_protocol_t>::write(metainfo_checker_t<rdb_protocol_t> const&, region_map_t<rdb_protocol_t, binary_blob_t> const&, rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, write_durability_t, transition_timestamp_t, order_token_t, write_token_pair_t*, signal_t*) at btree_store.cc:134\n       11: store_subview_t<rdb_protocol_t>::write(metainfo_checker_t<rdb_protocol_t> const&, region_map_t<rdb_protocol_t, binary_blob_t> const&, rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, write_durability_t, transition_timestamp_t, order_token_t, write_token_pair_t*, signal_t*) at protocol_api.hpp:568\n       12: store_subview_t<rdb_protocol_t>::write(metainfo_checker_t<rdb_protocol_t> const&, region_map_t<rdb_protocol_t, binary_blob_t> const&, rdb_protocol_t::write_t const&, rdb_protocol_t::write_response_t*, write_durability_t, transition_timestamp_t, order_token_t, write_token_pair_t*, signal_t*) at protocol_api.hpp:568\n       13: listener_t<rdb_protocol_t>::perform_writeread(rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t) at listener.cc:543\n       14: boost::_mfi::mf7<void, listener_t<rdb_protocol_t>, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t>::operator()(listener_t<rdb_protocol_t>*, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t) const at mem_fn_template.hpp:845\n       15: void boost::_bi::list8<boost::_bi::value<listener_t<rdb_protocol_t>*>, boost::_bi::value<rdb_protocol_t::write_t>, boost::_bi::value<transition_timestamp_t>, boost::_bi::value<order_token_t>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi::value<mailbox_addr_t<void (rdb_protocol_t::write_response_t)> >, boost::_bi::value<write_durability_t>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf7<void, listener_t<rdb_protocol_t>, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf7<void, listener_t<rdb_protocol_t>, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t>&, boost::_bi::list0&, int) at bind.hpp:747\n       16: boost::_bi::bind_t<void, boost::_mfi::mf7<void, listener_t<rdb_protocol_t>, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t>, boost::_bi::list8<boost::_bi::value<listener_t<rdb_protocol_t>*>, boost::_bi::value<rdb_protocol_t::write_t>, boost::_bi::value<transition_timestamp_t>, boost::_bi::value<order_token_t>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi::value<mailbox_addr_t<void (rdb_protocol_t::write_response_t)> >, boost::_bi::value<write_durability_t>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:21\n       17: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf7<void, listener_t<rdb_protocol_t>, rdb_protocol_t::write_t const&, transition_timestamp_t, order_token_t, fifo_enforcer_write_token_t, mailbox_addr_t<void (rdb_protocol_t::write_response_t)>, write_durability_t, auto_drainer_t::lock_t>, boost::_bi::list8<boost::_bi::value<listener_t<rdb_protocol_t>*>, boost::_bi::value<rdb_protocol_t::write_t>, boost::_bi::value<transition_timestamp_t>, boost::_bi::value<order_token_t>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi::value<mailbox_addr_t<void (rdb_protocol_t::write_response_t)> >, boost::_bi::value<write_durability_t>, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at runtime_utils.hpp:58\n       18: callable_action_wrapper_t::run() at runtime_utils.cc:67\n       19: coro_t::run() at coroutines.cc:178\n```\n\nLooks like there's still a case where the sindex write token isn't being used or released correctly, but this could use some more looking into.\n"
  , issueState = "closed"
  , issueId = Id 14542781
  , issueComments = 8
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-06) (-06) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 31
          , milestoneClosedIssues = 67
          , milestoneDescription =
              Just
                "The primary purpose of this release is to make ReQL improvements we've been waiting to make for so long.\r\n\r\n"
          , milestoneTitle = "1.6"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/31"
          , milestoneCreatedAt = 2013 (-04) (-27) 01 : 30 : 17 UTC
          , milestoneState = "closed"
          }
  }