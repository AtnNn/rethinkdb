IssueComment
  { issueCommentUpdatedAt = 2015 (-12) (-29) 05 : 25 : 48 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 60307
        , simpleUserLogin = N "Rajan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/60307?v=3"
        , simpleUserUrl = "https://api.github.com/users/Rajan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/167720850"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5239#issuecomment-167720850"
  , issueCommentCreatedAt = 2015 (-12) (-29) 05 : 21 : 19 UTC
  , issueCommentBody =
      "There are a large number of realtime-web frameworks these days. They all work with socket.io and browser and be able to do similar things is less likely gain great attention/traction.\r\n\r\nI do like the RethinkDB approach to building \"realtime\" fundamentally into the database but it is hard for front-end or web developers to relate to it and choose a new framework based on that story. It is particularly hard because it is not the code that they're going \"direclty\" work with and hence they won't value it as much.\r\n\r\nAn alternative strategy would be to plug into every popular open-source framework and turn it into \"Realtime\" mobile apps framework. e.g. We can get started with LoopBack.io and create a serious Loopback-RethinkDB-Realtime and add \"changefeed\" events/methods to their existing iOS/Android SDKs by creating RethinkDB forks of their sdks. It'd be relatively easy to attract existing node.js/loopback developers to explore RethinkDB as a truly \"Realtime\" alternative to MongoDB. It can work because Mongo doesn't support joins and they've to do very little work to use RethinkDB instead of Mongo.\r\n\r\nLater, we can contribute ios/android sdks to deepstream (they're already building on RethinkDb)."
  , issueCommentId = 167720850
  }