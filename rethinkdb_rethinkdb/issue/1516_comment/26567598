IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-18) 02 : 04 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/26567598"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1516#issuecomment-26567598"
  , issueCommentCreatedAt = 2013 (-10) (-18) 02 : 04 : 50 UTC
  , issueCommentBody =
      "@jdoliner: Oh you are right. That makes things easier. I will just have to refactor it a bit. Right now it only produces a string representation of the complete backtrace, rather than giving me access to the individual stack frames.\r\n\r\n\r\nI like the little story about `demangle_cpp_name()` (in backtrace.cc) :-)\r\n```\r\n/* There has been some trouble with abi::__cxa_demangle.\r\n\r\nOriginally, demangle_cpp_name() took a pointer to the mangled name, and returned a\r\nbuffer that must be free()ed. It did this by calling __cxa_demangle() and passing NULL\r\nand 0 for the buffer and buffer-size arguments.\r\n\r\nThere were complaints that print_backtrace() was smashing memory. Shachaf observed that\r\npieces of the backtrace seemed to be ending up overwriting other structs, and filed\r\nissue #100.\r\n\r\nDaniel Mewes suspected that the memory smashing was related to calling malloc().\r\nIn December 2010, he changed demangle_cpp_name() to take a static buffer, and fill\r\nthis static buffer with the demangled name. See 284246bd.\r\n\r\nabi::__cxa_demangle expects a malloc()ed buffer, and if the buffer is too small it\r\nwill call realloc() on it. So the static-buffer approach worked except when the name\r\nto be demangled was too large.\r\n\r\nIn March 2011, Tim and Ivan got tired of the memory allocator complaining that someone\r\nwas trying to realloc() an unallocated buffer, and changed demangle_cpp_name() back\r\nto the way it was originally.\r\n\r\nPlease don't change this function without talking to the people who have already\r\nbeen involved in this. */\r\n```"
  , issueCommentId = 26567598
  }