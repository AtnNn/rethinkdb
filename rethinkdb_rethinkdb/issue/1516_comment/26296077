IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-14) 23 : 01 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/26296077"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1516#issuecomment-26296077"
  , issueCommentCreatedAt = 2013 (-10) (-14) 23 : 01 : 24 UTC
  , issueCommentBody =
      "I believe the limit on the sending side already exists:\r\n```\r\nsrc/clustering/immediate_consistency/branch/backfiller.cc:11:#define MAX_CHUNKS_OUT 5000\r\n```\r\nThis number may be a little too large, but it would be nice to know where all the coroutines are from.  Perhaps printing out the coro_globals_t::running_coroutine_counts when the coro limit is hit would help (although the output is quite ugly and hard to follow).  I think it's also worth noting that the coro limit applies to the core where the coroutine is allocated.  The coroutine can then switch threads but still counts against its original thread ID (if I remember correctly)."
  , issueCommentId = 26296077
  }