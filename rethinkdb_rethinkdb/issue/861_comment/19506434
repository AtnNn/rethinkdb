IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-16) 01 : 43 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19506434"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/861#issuecomment-19506434"
  , issueCommentCreatedAt = 2013 (-06) (-16) 01 : 43 : 03 UTC
  , issueCommentBody =
      "Yeah its actually easy enough to do. But still a tad of work. We can\r\nschedule it if someone requests it.\r\nOn Jun 15, 2013 8:07 PM, \"Timothy Maxwell\" <notifications@github.com> wrote:\r\n\r\n> Random sampling with replacement from a stream shouldn't be that hard to\r\n> implement. Here's some example code, based on this paper<https://www.siam.org/proceedings/datamining/2004/dm04_053parkb.pdf>\r\n> :\r\n>\r\n> std::vector<Thing> take_sample_with_replacement(int n_samples, ThingStream *stream) {\r\n>     std::vector<Thing> results(n_samples);\r\n>     int counter = 0;\r\n>     while (!stream->is_done()) {\r\n>         Thing current_thing = stream->next();\r\n>         counter++;\r\n>         for (int i = 0; i < n_samples; i++) {\r\n>             if (rand() % counter == 0) {\r\n>                 results[i] = current_thing;\r\n>             }\r\n>         }\r\n>     }\r\n>     return results;}\r\n>\r\n> Basically, for each thing in the stream, for each slot in the reservoir,\r\n> you replace whatever's currently in that slot with the new thing with\r\n> probability 1/N, where N is the number of things read off the stream by\r\n> that point, including the current thing.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/861#issuecomment-19505631>\r\n> .\r\n>"
  , issueCommentId = 19506434
  }