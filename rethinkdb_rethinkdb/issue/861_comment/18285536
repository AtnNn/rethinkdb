IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-22) 15 : 16 : 59 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18285536"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/861#issuecomment-18285536"
  , issueCommentCreatedAt = 2013 (-05) (-22) 15 : 16 : 59 UTC
  , issueCommentBody =
      "So @mlucy and I decided we like throwing if there weren't enough elements mostly because that's what python does. I'm not strongly attached to this our logic was that people might write code which assumes the result of `sample(n)` always has `n` elements.\r\n\r\n`sample(-1)` returns an error.\r\n\r\nI'm unclear on where the estimate of a couple of days comes from for `O(k log N)` I seriously doubt that's possible. For one thing there are many viable use cases where you just can't do it such as following a `filter` or a `join`. But more importantly I actually doubt it's possible to do at all with our current architecture. The @srh trick of randomly choosing an offset for each level of the BTree will have some really bad run times on our BTree and I don't know of an alternative algorithm."
  , issueCommentId = 18285536
  }