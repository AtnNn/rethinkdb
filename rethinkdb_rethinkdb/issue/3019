Issue
  { issueClosedAt = Just 2014 (-09) (-12) 23 : 52 : 10 UTC
  , issueUpdatedAt = 2015 (-01) (-02) 21 : 16 : 34 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3019/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3019"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 3019
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Reql_admin branch - Guarantee failed: [std_contains(bp.peers_roles, mbox_manager->get_connectivity_cluster()->get_me())] "
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3019"
  , issueCreatedAt = 2014 (-09) (-06) 22 : 55 : 30 UTC
  , issueBody =
      Just
        "Cluster of 3 servers, 2 tables, one with two replicas.\n\nI killed one server with cyanide, then restarted it. And one of the server eventually crashed.\nI wasn't doing anything special at that time.\n\n```\nVersion: rethinkdb 1.14.0-651-gb809eb1-dirty (debug) (GCC 4.9.1)\nerror: Error in src/clustering/administration/reactor_driver.cc at line 458:\nerror: Guarantee failed: [std_contains(bp.peers_roles, mbox_manager->get_connectivity_cluster()->get_me())] \nerror: Backtrace:\nerror: Sat Sep  6 15:53:24 2014\n\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\n       2: backtrace_t::backtrace_t() at backtrace.cc:203 (discriminator 1)\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\n       4: format_backtrace(bool) at backtrace.cc:198\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83 (discriminator 1)\n       6: reactor_driver_t::on_change() at reactor_driver.cc:457 (discriminator 4)\n       7: reactor_driver_t::reactor_driver_t(base_path_t const&, io_backender_t*, mailbox_manager_t*, clone_ptr_t<watchable_t<change_tracking_map_t<peer_id_t, namespaces_directory_metadata_t> > > const&, branch_history_manager_t*, boost::shared_ptr<semilattice_readwrite_view_t<cow_ptr_t<namespaces_semilattice_metadata_t> > >, server_name_client_t*, signal_t*, svs_by_namespace_t*, perfmon_collection_repo_t*, rdb_context_t*) at reactor_driver.cc:346\n       8: do_serve(io_backender_t*, bool, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, serve_info_t const&, os_signal_cond_t*) at serve.cc:323 (discriminator 15)\n       9: serve(io_backender_t*, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, serve_info_t const&, os_signal_cond_t*) at serve.cc:445\n       10: run_rethinkdb_serve(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:816 (discriminator 2)\n       11: run_rethinkdb_porcelain(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*) at command_line.cc:841\n       12: void std::_Bind<void (*(base_path_t, name_string_t, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> >, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*)>::__call<void, , 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>) at functional:1264\n       13: void std::_Bind<void (*(base_path_t, name_string_t, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> >, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*)>::operator()<, void>() at functional:1323\n       14: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, name_string_t, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> >, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, unsigned long, bool, serve_info_t*, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:2041\n       15: std::function<void ()>::operator()() const at functional:2440\n       16: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\n       17: void std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()<std::function<void ()>&, void>(starter_t*, std::function<void ()>&) const at functional:569 (discriminator 4)\n       18: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) at functional:1265\n       19: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::operator()<, void>() at functional:1323\n       20: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:2041\n       21: std::function<void ()>::operator()() const at functional:2440\n       22: callable_action_instance_t<std::function<void ()>&>::run_action() at callable_action.hpp:31\n       23: callable_action_wrapper_t::run() at runtime_utils.cc:43\n       24: coro_t::run() at coroutines.cc:199\n       25: coro_t* coro_t::spawn_sometime<std::function<void ()>&>(std::function<void ()>&) at coroutines.hpp:58\n       26: starter_t::on_thread_switch() at runtime.cc:57\n       27: linux_message_hub_t::on_event(int) at message_hub.cc:154\n       28: epoll_event_queue_t::run() at epoll.cc:101 (discriminator 2)\n       29: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:160\n       30: /usr/lib/libpthread.so.0(+0x7124) [0x7f64949b5124] at 0x7f64949b5124 (/usr/lib/libpthread.so.0)\n       31: clone+0x6d at 0x7f64946e94bd (/usr/lib/libc.so.6)\nerror: Exiting.\nCTRL-C to kill me http requests can be sent to ports: 1 , 3 , 5 \n```\n"
  , issueState = "closed"
  , issueId = Id 42129052
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }