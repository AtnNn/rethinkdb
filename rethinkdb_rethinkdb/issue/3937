Issue
  { issueClosedAt = Just 2015 (-03) (-22) 03 : 35 : 39 UTC
  , issueUpdatedAt = 2015 (-03) (-22) 03 : 35 : 39 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3937/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3937"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3937
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Python driver `next(wait=1)` should throw something based on `RqlError`"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3937"
  , issueCreatedAt = 2015 (-03) (-13) 23 : 00 : 13 UTC
  , issueBody =
      Just
        "Currently if `cursor.next` is given a value for `wait` and it exceeds that it will raise a `socket.timeout`. We should probably not allow that error to escape, for two reasons:\n1. It is a violation of the encapsulation: the user has no need to know that there might have been a `socket` used. It might be obvious, but they don't need to know that.\n2. If they are going to catch the error they are going to need to `import socket`. Needing to import a different module to catch common errors is a poor interface.\n\nI would propose that we create a new error, something like `RqlTimeout`,`RqlCursorTimeout`, or `RqlEmpty`, `RqlCursorEmpty`. I favor the last two, since it gets away from the idea of a timeout error, and focuses more on the Cursor being empty.\n"
  , issueState = "closed"
  , issueId = Id 61290579
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 89
          , milestoneClosedIssues = 117
          , milestoneDescription = Just ""
          , milestoneTitle = "2.0"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/89"
          , milestoneCreatedAt = 2015 (-01) (-26) 07 : 45 : 17 UTC
          , milestoneState = "closed"
          }
  }