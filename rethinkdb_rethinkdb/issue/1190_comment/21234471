IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-19) 06 : 58 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21234471"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1190#issuecomment-21234471"
  , issueCommentCreatedAt = 2013 (-07) (-19) 06 : 58 : 46 UTC
  , issueCommentBody =
      "This is of a dup of #902. This has more information, is it ok if I close #902?\r\n\r\nA few thoughts:\r\n\r\n1. If we just limit currying to the sugary filter syntax then it would be awesome for users and would sidestep the variadic issue because we can special case it. Definitely not as nice as the full thing, though, but might be good enough.\r\n2. I don't think we need `r._N`. People can just use `r._` multiple times. I think complete control over reordering is unnecessary.\r\n3. If we do the whole thing, it sounds like `r._` sidesteps the variadic issues. You just say `r.table(\"foo\").reduce(r.add(r._, r._))`. It's not strictly as nice as `r.table(\"foo\").reduce(r.add)`, but might be ok.\r\n\r\nThis definitely sounds like a post #1174 feature, but it's really cool. If we can make it work, I would *love* to get this in."
  , issueCommentId = 21234471
  }