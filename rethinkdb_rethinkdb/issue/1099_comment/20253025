IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-30) 18 : 44 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20253025"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1099#issuecomment-20253025"
  , issueCommentCreatedAt = 2013 (-06) (-30) 18 : 44 : 42 UTC
  , issueCommentBody =
      "- All of these languages take a string with multiple separators rather than being variadic which we should mimic. i.e. `split(' ,')` not `split(' ', ',')`.\r\n\r\n- `split()` uses whitespace characters as its separator.\r\n\r\n- All of these functions in host languages take a length limit as a second argument although it does slightly different things. I'm not sure I totally understand where that's useful but maybe we should just include it because it's easy and if it's in all 3 of them chances are it's useful for something.\r\n\r\n- I think it's a good idea to add the inverse of this function `join` (might want to change that name though) as well. It's incredibly easy because boost has a builtin join method and I could see someone storing their data in a split form because that's convenient for processing but wanting to join the strings back together at some point too. Also `string.split().join(' ')` is a nice way to strip out tabs and newlines."
  , issueCommentId = 20253025
  }