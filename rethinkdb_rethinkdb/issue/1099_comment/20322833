IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-02) 02 : 22 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20322833"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1099#issuecomment-20322833"
  , issueCommentCreatedAt = 2013 (-07) (-02) 02 : 22 : 25 UTC
  , issueCommentBody =
      "I'm cool with that split behavior. I actually think that's what python does\r\nand I just misread it. I'd really like to have the length limit since it's\r\npresent in all of the languages we target and there really doesn't seem to\r\nbe a high cost to it.\r\n\r\n\r\nOn Mon, Jul 1, 2013 at 7:16 PM, Michael Lucy <notifications@github.com>wrote:\r\n\r\n> @jdoliner <https://github.com/jdoliner>: that isn't how split works in\r\n> Ruby. In Ruby if you write .split(\", \") it means \"split on the string ',\r\n> '\", not \"split on either the string ',' or ' '\". Instead, split takes a\r\n> regexp to handle that case:\r\n>\r\n> irb(main):3898:0> \"a b, c,d\".split(\", \")[\"a b\", \"c,d\"]irb(main):3899:0> \"a b, c,d\".split(/[, ]/)[\"a\", \"b\", \"\", \"c\", \"d\"]\r\n>\r\n> Slava's proposed behavior seems more intuitive to me. Here's what I would\r\n> propose:\r\n>\r\n>    - split() does a normal whitespace split\r\n>    - split(', ') means \"split on the string ', '\"\r\n>    - split(',', ' ') means \"split on either the string ',' or ' '\"\r\n>    - We skip the length limit, it doesn't seem terribly useful to me.\r\n>    - We add .join.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1099#issuecomment-20322687>\r\n> .\r\n>"
  , issueCommentId = 20322833
  }