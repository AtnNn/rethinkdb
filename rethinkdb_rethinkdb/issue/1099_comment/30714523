IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-17) 00 : 05 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/30714523"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1099#issuecomment-30714523"
  , issueCommentCreatedAt = 2013 (-12) (-17) 00 : 05 : 14 UTC
  , issueCommentBody =
      "On an only somewhat related note. In the post for this issue @coffeemug talked about using this to implement word counting and I think if we look at what a map reduce job for word count looks like it's not quite nice enough for us to showcase it as a gleaming example of ReQL. Right now the nicest way I can see to write that query is:\r\n\r\n```Python\r\nstream.split()\r\n    .group(lambda x: x.downcase().split(\"\").filter(lambda c: c.match(\"\\c\")).reduce(lambda x, y : x + y))\r\n    .filter(lambda x: x != \"\")\r\n    .count()\r\n```\r\n\r\nIt's a bad smell for me that we don't do better here although clearly keeping around empty strings is only part of the problem. I think it might be worth considering making this use case a bit nicer, @mlucy said it wouldn't be too hard."
  , issueCommentId = 30714523
  }