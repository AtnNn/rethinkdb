IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-16) 02 : 00 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13638336"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/349#issuecomment-13638336"
  , issueCommentCreatedAt = 2013 (-02) (-16) 02 : 00 : 13 UTC
  , issueCommentBody =
      "Allowing writes anywhere has more dangers than just infinite loops. We also\r\nhad several deadlocks in the original query language that arose from them.\r\nIt took us a while to learn our lesson the first time round and even longer\r\nto find a solution. I'd really prefer not throw that out and try to think\r\nthrough all of the corner cases again. Especially considering that we're\r\nstill trying to ship this in 2 weeks.\r\nOn Feb 15, 2013 4:17 PM, \"wmrowan\" <notifications@github.com> wrote:\r\n\r\n> Letting writes appear anywhere is simple and convenient. It make the\r\n> implementation simple and it makes the API simple. We don't have to have a\r\n> distinction between do and forEach on a single object (which for the\r\n> record doesn't make any sense to me at all) or even really a distinction\r\n> between map and forEach. Our users will come up with strange and\r\n> wonderful ways to write queries that bury write operations deeply, I say\r\n> let them.\r\n>\r\n> The only reason why allowing write queries anywhere might interfere with\r\n> termination is because we allow write queries to modify the data that we\r\n> are presently operating on. If we had snapshot consistency for queries then\r\n> this wouldn't be a problem because the map would be over the table as it\r\n> existed before the query began executing.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/349#issuecomment-13636264>.\r\n>\r\n>"
  , issueCommentId = 13638336
  }