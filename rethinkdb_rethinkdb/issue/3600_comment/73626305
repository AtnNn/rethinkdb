IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-10) 01 : 17 : 01 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73626305"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3600#issuecomment-73626305"
  , issueCommentCreatedAt = 2015 (-02) (-10) 01 : 17 : 01 UTC
  , issueCommentBody =
      "Sorry! I wasn't expressing myself very well. My question is about whether it's enough to implement streams in a duck-typed manner (which we currently provide all the same methods except for `.pipe` and `.then`) or whether we should actually subclass ReadableStream, because it's common to do `typeof` comparisons.\r\n\r\nI'm trying to understand the issue a bit better than I currently do. Thanks for taking the time to bring this issue up"
  , issueCommentId = 73626305
  }