IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-18) 01 : 55 : 36 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/198162105"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5413#issuecomment-198162105"
  , issueCommentCreatedAt = 2016 (-03) (-18) 01 : 55 : 36 UTC
  , issueCommentBody =
      "But since we do have the `final` function, people will expect that if they have that for the callback style, that it would resolve the error. But your proposal to have the error also be expressed by a Promise rejection would necessarily mean that someone not using Promises would get an error in their code, even though they already handed it in their `final` function. Therefore we need to have the error go either to the `final` function (when there is one), or out as a Promise rejection (when there is not one), not both.\r\n\r\nAnd again, I will point out that we are supporting returning Promises from the `row` handler. Not supporting that in the `final` handler just to keep it pure seems like the wrong solution. As I said: we have already committed to the mixed use case in this function. We need to see that through in as logical/least-surprise way as we can."
  , issueCommentId = 198162105
  }