IssueComment
  { issueCommentUpdatedAt = 2016 (-03) (-17) 20 : 01 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/198059122"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5413#issuecomment-198059122"
  , issueCommentCreatedAt = 2016 (-03) (-17) 20 : 01 : 53 UTC
  , issueCommentBody =
      "@marshall007: But they are not separate APIs. There is only one call, and we branch our behavior on how you make it (first on number of functions, then again on arguments to the first function). We have to have some sort of logical construct that its over all uses. Can you clarify how your argument does not make the `final` function's handling of errors necessarily redundant (since you would always have to `.catch` the outer block anyways) for (2), and then why we should not treat Promises returned from a `final` handler just like we do one from the `row` handler for (3)?"
  , issueCommentId = 198059122
  }