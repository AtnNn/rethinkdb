IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-04) 14 : 55 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 605591
        , simpleUserLogin = N "josephglanville"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/605591?v=3"
        , simpleUserUrl = "https://api.github.com/users/josephglanville"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/72867990"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/223#issuecomment-72867990"
  , issueCommentCreatedAt = 2015 (-02) (-04) 14 : 55 : 38 UTC
  , issueCommentBody =
      "I hope the LogCabin Raft implementation is used, it's very much the canonical implementation.\r\n\r\nI am confused somewhat by the linked issue though, it suggests that all nodes won't be aware of the metadata whilst suggesting that all nodes will be participating in the Raft quorum? I would have thought the naive solution would be to change the semi-lattice replication mechanism to use a consensus backed state machine instead of the current model rather than drastically changing the current state of affairs.\r\nThis does concern me some but perhaps I am not seeing the whole picture?\r\n\r\nIt would be good to see a cohesive design document for how Raft would be used to implement things like primary failover and cluster membership changes."
  , issueCommentId = 72867990
  }