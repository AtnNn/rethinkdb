IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-24) 16 : 12 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 11137000
        , simpleUserLogin = N "shimonmagal"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/11137000?v=3"
        , simpleUserUrl = "https://api.github.com/users/shimonmagal"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/124569943"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/223#issuecomment-124569943"
  , issueCommentCreatedAt = 2015 (-07) (-24) 16 : 12 : 56 UTC
  , issueCommentBody =
      "Specifically for my use of RethinkDB - I have some queries with .changes() opened by nodejs servers (running a rethinkdb driver). Are there currently ways to recover from both RethinkDB failure/planned-shutdown and/or server communication-failure/planned-shutdown - without making the front end having to re-run the query and register for changes all over again?\r\n\r\nBy the way, I really like RethinkDB and thinking about using it in multiple projects I'm working on. I have compared it with meteorjs, and it has much better performace - I'm guessing due to meteor running on NodeJs (I can give more details about the comparison I did...).\r\n\r\n(Also, on one of my projects - there is an already existing code in Java + OracleDB and I have written a replicator from Oracle to RethinkDB/Mongo (for meteor). Oracle is used for Buisness logic (which is already implemented in java and has tens of thousands of lines of code and needs a DB with ACID) and RehinkDB is for data distribution to web clients (former client was swing over Java). I'm about to finish the replicator soon(matter of days) - I hope it will help people with already existing code and  systems to create new web client sides for their data and help increase RethinkDB popularity - I will let you know when I'm done - if this should interest you)"
  , issueCommentId = 124569943
  }