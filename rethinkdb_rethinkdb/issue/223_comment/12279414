IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-15) 17 : 40 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 290841
        , simpleUserLogin = N "al3xandru"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/290841?v=3"
        , simpleUserUrl = "https://api.github.com/users/al3xandru"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12279414"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/223#issuecomment-12279414"
  , issueCommentCreatedAt = 2013 (-01) (-15) 17 : 40 : 18 UTC
  , issueCommentBody =
      "coffeemug:\r\n\r\n1. I agree with the main jist of of this. If they have cascading multiway long-lasting netsplits somebody better drag their sleepy ass out of bed because the idea that the db will magically failover and continue working in that scenario is a pipe dream. So a 'simple' implementation is ~~a bug, not a feature~~. Meant to say a feature, not a bug. Duh.\r\n2. I don't understand why you introduce a separate notion of a coordinator. Why not have a vice-primary for a shard behave as the coordinator for that shard? If the vice-primary can't see the master for some user-specified period of time, it can flip the failover flag and take over until further notice.\r\n3. I think we need to be a little more clear about what happens when failover bit is turned on (e.g. what issue does the user see? Is it resolvable? How?) and what happens if the master becomes visible again (do we compile a new blue print to make the old primary a vice-primary, the old vice-primary primary, and turn off the failover bit? or does the old master become master again? etc.)\r\n\r\nEDIT: I suppose outside of failover we want a general notion of a coordinator that's not necessarily tied to a shard. For example, in some cases we might want a coordinator per table, a coordinator per datacenter, or a coordinator per entire cluster. Is that the answer to my question 2? "
  , issueCommentId = 12279414
  }