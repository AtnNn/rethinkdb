IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-18) 05 : 21 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/37900502"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2087#issuecomment-37900502"
  , issueCommentCreatedAt = 2014 (-03) (-18) 05 : 21 : 25 UTC
  , issueCommentBody =
      "Upon further investigation, it seems that the only way this can happen is if a secondary index is quickly deleted and recreated. This issue was addressed in https://github.com/rethinkdb/rethinkdb/issues/657 by assigning random UUIDs to secondary indexes.\r\n\r\nThe only problem is that backfilling does not generate random UUIDs, but the sindex UUIDs are part of the backfill chunk. I don't think there is any reason for why that has to be the case, as sindexes are generally referred to by their names.\r\n\r\nIf this assertion wouldn't stop it from happening, that could actually lead to a corrupted secondary index I think."
  , issueCommentId = 37900502
  }