Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-09) (-14) 22 : 20 : 28 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5354/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/pull/5354"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Python"
          , labelName = "Python"
          }
      ]
  , issueNumber = 5354
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 863286
        , simpleUserLogin = N "dalanmiller"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/863286?v=3"
        , simpleUserUrl = "https://api.github.com/users/dalanmiller"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Adding __aiter__ and __anext__ to Python AsyncioCursor"
  , issuePullRequest =
      Just
        PullRequestReference
          { pullRequestReferenceHtmlUrl =
              Just "https://github.com/rethinkdb/rethinkdb/pull/5354"
          , pullRequestReferencePatchUrl =
              Just "https://github.com/rethinkdb/rethinkdb/pull/5354.patch"
          , pullRequestReferenceDiffUrl =
              Just "https://github.com/rethinkdb/rethinkdb/pull/5354.diff"
          }
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5354"
  , issueCreatedAt = 2016 (-02) (-03) 21 : 43 : 49 UTC
  , issueBody =
      Just
        "Looking at [PEP 0492](https://www.python.org/dev/peps/pep-0492/#asynchronous-iterators-and-async-for) I'm adding `__aiter__` and `__anext__` to support the following syntax in Python 3.5. \r\n\r\nTalked with @Tryneus about the timeout and felt that an infinite timeout would be the best default for both changefeeds and normal queries. Users can use `._get_next(...)` if they want to explicitly set a timeout. \r\n\r\n```python\r\nconn = await r.connect(\"localhost\", 28015)\r\nchanges = await r.db(\"python\").table(\"python\").changes()[\"new_val\"].run(conn)\r\n\r\n# The changes allow for this async for syntax.\r\nasync for change in changes:\r\n    # Work with change\r\n```\r\n\r\nAlso related to rethinkdb/docs#949."
  , issueState = "open"
  , issueId = Id 131163747
  , issueComments = 21
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 54
          , milestoneNumber = 119
          , milestoneClosedIssues = 8
          , milestoneDescription = Nothing
          , milestoneTitle = "2.3.x"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/119"
          , milestoneCreatedAt = 2016 (-04) (-06) 18 : 05 : 18 UTC
          , milestoneState = "open"
          }
  }