Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-03) (-25) 22 : 14 : 27 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4707/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4707"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 4707
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add a `diff` flag to changefeeds"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4707"
  , issueCreatedAt = 2015 (-08) (-18) 09 : 42 : 20 UTC
  , issueBody =
      Just
        "One of our users mentioned that they can't easily use changefeeds because their use case has the following properties:\n- Each document is fairly large and can't be easily broken up into smaller documents\n- The changes that happen to each document are typically very small\n\nThey asked for a `diff: true | false` flag to `changes()`. If set to true, instead of sending `new_val` and `old_val`, we'd send a diff between the two that could be applied to the last known value. That would make feeds work dramatically better for their use case.\n\nThere are existing algorithms for json diffing and patching libraries I found online (e.g. https://github.com/benjamine/jsondiffpatch). I also vaguely remember that there is a standard for this, though I can't find it right now.\n"
  , issueState = "open"
  , issueId = Id 101615341
  , issueComments = 19
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }