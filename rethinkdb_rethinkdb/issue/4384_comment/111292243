IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-11) 22 : 18 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/111292243"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4384#issuecomment-111292243"
  , issueCommentCreatedAt = 2015 (-06) (-11) 22 : 18 : 46 UTC
  , issueCommentBody =
      "These are the values of `progress` and `commit_threshold` respectively when this happens:\r\n```\r\n2015-06-11T15:17:16.042832099 Thread 9: progress: : \"S8d67ad0e-964b-4c58-8791-774a2fb78109\\x00\"\r\n2015-06-11T15:17:16.042878649 Thread 9: commit_threshold: : \"S8\\xa9\\x03\\xbd\"\r\n```\r\n\r\nAnd the full debug-mode backtrace in case it's helpful:\r\n```\r\nerror: Error in src/rdb_protocol/store_receive_backfill.cc at line 464:\r\nerror: Guarantee failed: [progress >= commit_threshold] \r\nerror: Backtrace:\r\nerror: Thu Jun 11 15:17:16 2015\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:203\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n       4: format_backtrace(bool) at backtrace.cc:198\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6: ./rethinkdb() [0x16d0228] at 0x16d0228 ()\r\n       7: ./rethinkdb() [0x16d08d8] at 0x16d08d8 ()\r\n       8: std::function<void (key_range_t::right_bound_t const&, scoped_ptr_t<txn_t>&&, buf_lock_t&&, std::vector<rdb_modification_report_t, std::allocator<rdb_modification_report_t> >&&)>::operator()(key_range_t::right_bound_t const&, scoped_ptr_t<txn_t>&&, buf_lock_t&&, std::vector<rdb_modification_report_t, std::allocator<rdb_modification_report_t> >&&) const at functional:2162\r\n       9: apply_single_key_item(receive_backfill_tokens_t const&, backfill_item_t&) at store_receive_backfill.cc:257\r\n       10: void std::_Bind<void (*(receive_backfill_tokens_t, backfill_item_t))(receive_backfill_tokens_t const&, backfill_item_t&)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1147\r\n       11: void std::_Bind<void (*(receive_backfill_tokens_t, backfill_item_t))(receive_backfill_tokens_t const&, backfill_item_t&)>::operator()<, void>() at functional:1206\r\n       12: callable_action_instance_t<std::_Bind<void (*(receive_backfill_tokens_t, backfill_item_t))(receive_backfill_tokens_t const&, backfill_item_t&)> >::run_action() at callable_action.hpp:31\r\n       13: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       14: coro_t::run() at coroutines.cc:207\r\n       15: coro_t* coro_t::spawn_sometime<std::_Bind<void (*(receive_backfill_tokens_t, backfill_item_t))(receive_backfill_tokens_t const&, backfill_item_t&)> >(std::_Bind<void (*(receive_backfill_tokens_t, backfill_item_t))(receive_backfill_tokens_t const&, backfill_item_t&)>&&) at coroutines.hpp:59\r\n       16: store_t::receive_backfill(hash_region_t<key_range_t> const&, store_view_t::backfill_item_producer_t*, signal_t*) at store_receive_backfill.cc:480\r\n       17: store_subview_t::receive_backfill(hash_region_t<key_range_t> const&, store_view_t::backfill_item_producer_t*, signal_t*) at store_subview.hpp:158\r\n       18: backfillee_t::session_t::run(auto_drainer_t::lock_t) at backfillee.cc:210\r\n       19: std::_Mem_fn<void (backfillee_t::session_t::*)(auto_drainer_t::lock_t)>::operator()(backfillee_t::session_t*, auto_drainer_t::lock_t) const at functional:551\r\n       20: void std::_Bind<std::_Mem_fn<void (backfillee_t::session_t::*)(auto_drainer_t::lock_t)> (backfillee_t::session_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n       21: void std::_Bind<std::_Mem_fn<void (backfillee_t::session_t::*)(auto_drainer_t::lock_t)> (backfillee_t::session_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       22: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (backfillee_t::session_t::*)(auto_drainer_t::lock_t)> (backfillee_t::session_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n       23: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       24: coro_t::run() at coroutines.cc:207\r\n       25: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (backfillee_t::session_t::*)(auto_drainer_t::lock_t)> (backfillee_t::session_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (backfillee_t::session_t::*)(auto_drainer_t::lock_t)> (backfillee_t::session_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:59\r\n       26: backfillee_t::session_t::session_t(backfillee_t*, key_range_t::right_bound_t const&, backfillee_t::callback_t*) at backfillee.cc:46\r\n       27: backfillee_t::go(backfillee_t::callback_t*, key_range_t::right_bound_t const&, signal_t*) at backfillee.cc:393\r\n       28: remote_replicator_client_t::remote_replicator_client_t(backfill_throttler_t*, backfill_config_t const&, mailbox_manager_t*, uuid_u const&, uuid_u const&, remote_replicator_server_bcard_t const&, replica_bcard_t const&, store_view_t*, branch_history_manager_t*, signal_t*) at remote_replicator_client.cc:251\r\n       29: secondary_execution_t::run(auto_drainer_t::lock_t) at exec_secondary.cc:174\r\n       30: std::_Mem_fn<void (secondary_execution_t::*)(auto_drainer_t::lock_t)>::operator()(secondary_execution_t*, auto_drainer_t::lock_t) const at functional:551\r\n       31: void std::_Bind<std::_Mem_fn<void (secondary_execution_t::*)(auto_drainer_t::lock_t)> (secondary_execution_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n       32: void std::_Bind<std::_Mem_fn<void (secondary_execution_t::*)(auto_drainer_t::lock_t)> (secondary_execution_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       33: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (secondary_execution_t::*)(auto_drainer_t::lock_t)> (secondary_execution_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n       34: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       35: coro_t::run() at coroutines.cc:207\r\n       36: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (secondary_execution_t::*)(auto_drainer_t::lock_t)> (secondary_execution_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (secondary_execution_t::*)(auto_drainer_t::lock_t)> (secondary_execution_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:59\r\n       37: secondary_execution_t::secondary_execution_t(execution_t::context_t const*, store_view_t*, perfmon_collection_t*, std::function<void (uuid_u const&, contract_ack_t const&)> const&, uuid_u const&, table_raft_state_t const&, uuid_u const&) at exec_secondary.cc:44\r\n       38: contract_executor_t::update(table_raft_state_t const&, std::set<contract_executor_t::execution_key_t, std::less<contract_executor_t::execution_key_t>, std::allocator<contract_executor_t::execution_key_t> >*) at executor.cc:200\r\n       39: ./rethinkdb() [0x1ab3eae] at 0x1ab3eae ()\r\n       40: ./rethinkdb() [0x1ab50d6] at 0x1ab50d6 ()\r\n       41: std::function<void (table_raft_state_t const*)>::operator()(table_raft_state_t const*) const at functional:2162\r\n       42: ./rethinkdb() [0x1d55917] at 0x1d55917 ()\r\n       43: contract_executor_t::update_blocking(signal_t*) at executor.cc:97\r\n       44: std::_Mem_fn<void (contract_executor_t::*)(signal_t*)>::operator()(contract_executor_t*, signal_t*) const at functional:551\r\n       45: void std::_Bind<std::_Mem_fn<void (contract_executor_t::*)(signal_t*)> (contract_executor_t*, std::_Placeholder<1>)>::__call<void, signal_t*&&, 0, 1>(std::tuple<signal_t*&&>&&, std::_Index_tuple<0, 1>) at functional:1147\r\n       46: void std::_Bind<std::_Mem_fn<void (contract_executor_t::*)(signal_t*)> (contract_executor_t*, std::_Placeholder<1>)>::operator()<signal_t*, void>(signal_t*&&) at functional:1206\r\n       47: std::_Function_handler<void (signal_t*), std::_Bind<std::_Mem_fn<void (contract_executor_t::*)(signal_t*)> (contract_executor_t*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, signal_t*) at functional:1780\r\n       48: std::function<void (signal_t*)>::operator()(signal_t*) const at functional:2162\r\n       49: pump_coro_t::run(auto_drainer_t::lock_t) at pump_coro.cc:95\r\n       50: std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)>::operator()(pump_coro_t*, auto_drainer_t::lock_t) const at functional:551\r\n       51: void std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1146\r\n       52: void std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       53: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:31\r\n       54: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       55: coro_t::run() at coroutines.cc:207\r\n       56: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (pump_coro_t::*)(auto_drainer_t::lock_t)> (pump_coro_t*, auto_drainer_t::lock_t)>&&) at coroutines.hpp:59\r\n       57: pump_coro_t::notify() at pump_coro.cc:31\r\n       58: ./rethinkdb() [0x1ab341d] at 0x1ab341d ()\r\n       59: ./rethinkdb() [0x1ab4faa] at 0x1ab4faa ()\r\n       60: std::function<void ()>::operator()() const at functional:2162\r\n       61: call_function(std::function<void ()> const&) at watchable.hpp:185\r\n       62: void publisher_controller_t<std::function<void ()> >::publish<void (*)(std::function<void ()> const&)>(void (* const&)(std::function<void ()> const&)) at pubsub.hpp:139\r\n       63: ./rethinkdb() [0x1d50577] at 0x1d50577 ()\r\n       64: ./rethinkdb() [0x1d53862] at 0x1d53862 ()\r\n       65: ./rethinkdb() [0x1d5312c] at 0x1d5312c ()\r\n       66: ./rethinkdb() [0x1d523e8] at 0x1d523e8 ()\r\n       67: ./rethinkdb() [0x1d516b2] at 0x1d516b2 ()\r\n       68: std::function<void ()>::operator()() const at functional:2162\r\n       69: call_function(std::function<void ()> const&) at watchable.hpp:185\r\n       70: void publisher_controller_t<std::function<void ()> >::publish<void (*)(std::function<void ()> const&)>(void (* const&)(std::function<void ()> const&)) at pubsub.hpp:139\r\n       71: watchable_variable_t<raft_member_t<table_raft_state_t>::state_and_config_t>::apply_atomic_op(std::function<bool (raft_member_t<table_raft_state_t>::state_and_config_t*)> const&) at watchable.hpp:224\r\n       72: raft_member_t<table_raft_state_t>::update_commit_index(unsigned long, new_mutex_acq_t const*) at raft_core.tcc:1079\r\n       73: raft_member_t<table_raft_state_t>::on_append_entries_rpc(raft_rpc_request_t<table_raft_state_t>::append_entries_t const&, signal_t*, raft_rpc_reply_t::append_entries_t*) at raft_core.tcc:663\r\n       74: raft_member_t<table_raft_state_t>::on_rpc(raft_rpc_request_t<table_raft_state_t> const&, signal_t*, raft_rpc_reply_t*) at raft_core.tcc:270\r\n       75: raft_networked_member_t<table_raft_state_t>::on_rpc(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&) at raft_network.tcc:82\r\n       76: std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)>::operator()(raft_networked_member_t<table_raft_state_t>*, signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&) const at functional:551\r\n       77: void std::_Bind<std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)> (raft_networked_member_t<table_raft_state_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)>::__call<void, signal_t*&&, raft_rpc_request_t<table_raft_state_t>&&, mailbox_addr_t<void (raft_rpc_reply_t)>&&, 0, 1, 2, 3>(std::tuple<signal_t*&&, raft_rpc_request_t<table_raft_state_t>&&, mailbox_addr_t<void (raft_rpc_reply_t)>&&>&&, std::_Index_tuple<0, 1, 2, 3>) at functional:1147\r\n       78: void std::_Bind<std::_Mem_fn<void (raft_networked_member_t<table_raft_state_t>::*)(signal_t*, raft_rpc_request_t<table_raft_state_t> const&, mailbox_addr_t<void (raft_rpc_reply_t)> const&)> (raft_networked_member_t<table_raft_state_t>*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)>::operator()<signal_t*, raft_rpc_request_t<table_raft_state_t>, mailbox_addr_t<void (raft_rpc_reply_t)>, void>(signal_t*&&, raft_rpc_request_t<table_raft_state_t>&&, mailbox_addr_t<void (raft_rpc_reply_t)>&&) at functional:1206\r\n```"
  , issueCommentId = 111292243
  }