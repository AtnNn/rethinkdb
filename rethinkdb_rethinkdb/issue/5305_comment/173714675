IssueComment
  { issueCommentUpdatedAt = 2016 (-01) (-21) 21 : 34 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/173714675"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5305#issuecomment-173714675"
  , issueCommentCreatedAt = 2016 (-01) (-21) 21 : 34 : 33 UTC
  , issueCommentBody =
      "Well you can run something like `r.expr(1)` from time to time to keep the connection alive if that's an issue. Though we're also turning on TCP keepalive, so the connections shouldn't usually expire.\r\n\r\nNote that even if we did check for a connection to be up before running a query, you would still need to catch errors since the connection might go down in the middle of the `run` after the check. And if the network or server is actually down, an automatic `reconnect` wouldn't help either. We would need some more complex logic that backs off and retries the connect for a configurable time. This goes more into the terrain of a connection pool.\r\n\r\nI'm not saying we shouldn't do it, but it's a bit more work than just checking if the connection is open and then calling `reconnect` if it's not."
  , issueCommentId = 173714675
  }