Issue
  { issueClosedAt = Just 2015 (-01) (-13) 03 : 35 : 13 UTC
  , issueUpdatedAt = 2015 (-01) (-13) 03 : 35 : 13 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3480/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3480"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 3480
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 316661
          , simpleUserLogin = N "timmaxw"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/316661?v=3"
          , simpleUserUrl = "https://api.github.com/users/timmaxw"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Possible bug in reactor_be_nothing"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3480"
  , issueCreatedAt = 2014 (-12) (-30) 20 : 36 : 35 UTC
  , issueBody =
      Just
        "In `reactor_be_nothing.cc` / `reactor_t::be_nothing()`, we erase the range by first setting the metainfo version range for the key range to zero, and then start to actually erase the data from the tree through `reset_data()`.\n\nIf `reset_data()` is interrupted (e.g. because the server crashes or is shut down),  the next time `reactor_t::be_nothing()` is run it will see the zero version in the metainfo and assume that there's no data. This will leave spurious data behind, which consumes disk space and could potentially mess up future backfills into that key range.\n\nCould we fix this by first setting the version range to the range from version_t::zero() up to the current upper version before starting erasing, and then only setting it to zero completely _after_ `reset_data` is done?\n\n(Pinging @timmaxw )\n"
  , issueState = "closed"
  , issueId = Id 53144978
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }