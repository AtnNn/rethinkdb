IssueComment
  { issueCommentUpdatedAt = 2015 (-03) (-08) 17 : 19 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 969456
        , simpleUserLogin = N "webmasterkai"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/969456?v=3"
        , simpleUserUrl = "https://api.github.com/users/webmasterkai"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/77573052"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3760#issuecomment-77573052"
  , issueCommentCreatedAt = 2015 (-03) (-06) 15 : 06 : 15 UTC
  , issueCommentBody =
      "I'd love this. I'm currently doing something like the following for simple find/replace type functions.\r\n\r\n### Global Find Replace\r\nSearch is inside `split(' ')`. Replace is inside`.add('+')`.\r\n\r\n    r('some long string with spaces').split(' ').reduce(\r\n      function(l, r){\r\n        return l.add('+').add(r)\r\n      }\r\n    )\r\n\r\n### Basic regex search/replace\r\nSearch is inside `str.match('DO/NOT')`. Replace is inside `.append('REALLY')`.\r\n\r\n    r('some/string/that/i/DO/NOT/like/the/start/of').do(function (str){\r\n      return str.match('DO/NOT').default({end:0}).do(function (res){\r\n        return r.branch(\r\n          res('end').gt(0),\r\n          str.split('', res('end')).do(function(parts){\r\n            return parts.slice(0, res('start'))\r\n              .append('REALLY')\r\n              .union(parts.slice(res('end')))\r\n              .reduce(function(l, r){return l.add(r)})\r\n          }),\r\n          str\r\n        )\r\n      })\r\n    })\r\n\r\nIt would be great to replace that with something shorter."
  , issueCommentId = 77573052
  }