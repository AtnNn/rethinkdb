IssueComment
  { issueCommentUpdatedAt = 2016 (-01) (-15) 19 : 55 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/172067037"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/5292#issuecomment-172067037"
  , issueCommentCreatedAt = 2016 (-01) (-15) 19 : 54 : 20 UTC
  , issueCommentBody =
      "Thanks for another great PR @pires .\r\n\r\n@bchavez I believe your analysis is correct. I think the lock needs to be acquired and held in `readResponse` and span both `recvall` calls, rather than being acquired inside of `recvall`.\r\nThere might also be other ways for addressing this of course. In fact I think there's no reason for why we would need to have two calls of `readResponse` at the same time. So we could maybe do the locking at an even higher level?"
  , issueCommentId = 172067037
  }