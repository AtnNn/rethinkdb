IssueComment
  { issueCommentUpdatedAt = 2016 (-04) (-28) 02 : 22 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 811954
        , simpleUserLogin = N "danielcompton"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/811954?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielcompton"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/215289287"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5725#issuecomment-215289287"
  , issueCommentCreatedAt = 2016 (-04) (-28) 02 : 22 : 23 UTC
  , issueCommentBody =
      "I would say symbols would be treated like strings.\r\n\r\nDynamic languages that have symbols allow runtime definition:\r\nRuby has [Symbol](http://ruby-doc.org/core-2.2.0/Symbol.html)\r\nClojure has [keyword](http://clojure.org/reference/data_structures#Keywords)\r\nLisp has [symbol](https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbols.html)\r\nErlang has [atom](http://erlang.org/doc/reference_manual/data_types.html)\r\nScala has [symbol](http://stackoverflow.com/questions/3554362/purpose-of-scalas-symbol) (I'm not sure if this has to be a compile time constant).\r\n\r\nSome (but not all) popular dynamic languages have symbol like types. The dynamic languages seem to allow runtime creation, but static languages tend to require compile time creation and probably don't fit with RethinkDB's model (?). \r\n\r\nIt is an open (and thorny) question what the behaviour should be around data conversions, say if a Python client read and then wrote a document which contained a symbol. It could be possible to create a symbol type for the Python and Java drivers. They wouldn't have a literal representation like other languages, but they could at least interoperate with RethinkDB."
  , issueCommentId = 215289287
  }