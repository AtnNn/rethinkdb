IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-14) 19 : 34 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/40408337"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2083#issuecomment-40408337"
  , issueCommentCreatedAt = 2014 (-04) (-14) 19 : 34 : 50 UTC
  , issueCommentBody =
      "> The proposal in #2119 only applies if the number of acks is the same as the number of replicas as far as I understand. The behavior in other cases would probably be unaffected.\r\n\r\nThe proposal in 2119 is to change how we acknowledge rights by asking a precise set of machines to write on disk before sending an acknowledgment to the user. That way these machines can be used to do up to date read without having to check with the master.\r\n\r\nAlso routing all the reads to the primary implies that\r\n- everything is done by the primary (reads and writes)\r\n- replicas are useful only for outdated reads and for \"backup\"\r\n\r\nIt basically means removing clustering to improve latency (but maybe by decreasing the throughput?)"
  , issueCommentId = 40408337
  }