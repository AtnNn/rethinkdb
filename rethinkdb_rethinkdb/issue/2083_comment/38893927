IssueComment
  { issueCommentUpdatedAt = 2014 (-03) (-28) 07 : 15 : 15 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/38893927"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2083#issuecomment-38893927"
  , issueCommentCreatedAt = 2014 (-03) (-28) 07 : 15 : 15 UTC
  , issueCommentBody =
      "The master distributes up-to-date reads in a round-robin fashion over all of the copies of the data. This has always been the case. See `broadcaster_t::pick_a_readable_dispatchee()`. If you comment out the lines with `pop_front()` and `push_back()` then it will always route to the same node, which I think will happen to be the primary.\r\n\r\nWe should consider alternative ways to distribute reads. The obvious alternative is to keep all up-to-date reads on the primary to avoid the extra network hop. However, for certain workloads this might reduce throughput because it would increase congestion on the primary's B-tree. Perhaps we could test to see if this actually causes a problem. If it is, maybe we could switch based on the type of query, or let the user choose whether they want to optimize for latency or throughput."
  , issueCommentId = 38893927
  }