IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-14) 19 : 38 : 58 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 139396
        , simpleUserLogin = N "wojons"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/139396?v=3"
        , simpleUserUrl = "https://api.github.com/users/wojons"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/40408711"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2083#issuecomment-40408711"
  , issueCommentCreatedAt = 2014 (-04) (-14) 19 : 38 : 31 UTC
  , issueCommentBody =
      "This seems a little werid to me. The node should be able to know if it is upto date or not. Or at least with in some sort of range. If a node really is up to date and is located 200ms from the master it will route all the way to the master and back even though it could have served what it had.\r\n\r\nI feel like if the heartbeat between the node in the master did not state that the node was or was not upto date and the heartbeat was there to confirm master is still online then an upto date read should be fine. If really needed when a write starts coming in the master can just say \"hello children i am getting a write\" andthen they all know they are not upto date. \r\n\r\ni find the issu with non uptodate is the meachine can be totally network split but your code is thinking everything is fine."
  , issueCommentId = 40408711
  }