IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-05) 05 : 30 : 28 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/98957809"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4150#issuecomment-98957809"
  , issueCommentCreatedAt = 2015 (-05) (-05) 05 : 30 : 28 UTC
  , issueCommentBody =
      "> It could be implemented either in a traditional way (by collecting statistics), or in a more creative way (e.g. run multiple versions of the query in parallel, kill the queries once the fastest one returns, and cache the information for a while).\r\n\r\nRegardless of how this piece is implemented I'd like to see the relevant stats exposed in the `stats` table. In the \"creative way\" case showing # of cache hits/misses and how often each optimized variation of the query gets executed would be very useful.\r\n\r\nIt would also be nice to be able to fine-tune the optimization cache timeout (assuming this doesn't happen automatically) and having this info available in the `stats` table will help in making informed decisions about what those values should be."
  , issueCommentId = 98957809
  }