IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-30) 19 : 10 : 17 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/97930960"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4150#issuecomment-97930960"
  , issueCommentCreatedAt = 2015 (-04) (-30) 19 : 10 : 17 UTC
  , issueCommentBody =
      "@marshall007 `filter` is tricky, since it doesn't allow specifying an index.\r\n\r\nPart of the advantages of this proposal is that the query still explicitly defined the indexes that can be used. The difference is that with `optimize` usage of those indexes is made optional, so the server can pick which one works best.\r\n\r\nIn your example, you could simply rewrite the `filter({foo: ..., bar: ...})` to `getAll(..., {index: \"foo\"}).getAll(..., {index: \"bar\"})` and with enabled optimization RethinkDB would pick one of the two `getAll`+`filter` options that you mentioned (or execute both in parallel or something)."
  , issueCommentId = 97930960
  }