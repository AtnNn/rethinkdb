Issue
  { issueClosedAt = Just 2016 (-05) (-24) 21 : 32 : 58 UTC
  , issueUpdatedAt = 2016 (-05) (-24) 23 : 26 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5793/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5793"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5793
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 555399
        , simpleUserLogin = N "carlskii"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/555399?v=3"
        , simpleUserUrl = "https://api.github.com/users/carlskii"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Issue with nested query and lack of good documentation "
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5793"
  , issueCreatedAt = 2016 (-05) (-24) 17 : 30 : 19 UTC
  , issueBody =
      Just
        "Hi,\n\nI'm struggling to get my head around a nested query. \n\nI have several docs that look like this: \n\n``` json\n{\n    \"blobs\": [{\n        \"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n        \"data\": {\n            \"Info:\": {\n                \"length\": 1024\n            },\n            \"Serial Number\": 123456,\n            \"Validity\": {\n                \"begin\": \"20280801235959Z\",\n                \"end\": \"19960129000000Z\"\n            },\n            \"Version\": 0,\n            \"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n            \"item count:\": 0,\n            \"meta1\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            },\n            \"meta2\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            }\n        },\n        \"fingerprint\": \"123\"\n    }, {\n        \"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n        \"data\": {\n            \"Info:\": {\n                \"length\": 1024\n            },\n            \"Serial Number\": 123456,\n            \"Validity\": {\n                \"begin\": \"20280801235959Z\",\n                \"end\": \"19960129000000Z\"\n            },\n            \"Version\": 0,\n            \"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n            \"item count:\": 0,\n            \"meta1\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            },\n            \"meta2\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            }\n        },\n        \"fingerprint\": \"456\"\n    }, {\n        \"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n        \"data\": {\n            \"Info:\": {\n                \"length\": 1024\n            },\n            \"Serial Number\": 123456,\n            \"Validity\": {\n                \"begin\": \"20280801235959Z\",\n                \"end\": \"19960129000000Z\"\n            },\n            \"Version\": 0,\n            \"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n            \"item count:\": 0,\n            \"meta1\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            },\n            \"meta2\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            }\n        },\n        \"fingerprint\": \"789\"\n    }, {\n        \"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n        \"data\": {\n            \"Info:\": {\n                \"length\": 1024\n            },\n            \"Serial Number\": 123456,\n            \"Validity\": {\n                \"begin\": \"20280801235959Z\",\n                \"end\": \"19960129000000Z\"\n            },\n            \"Version\": 0,\n            \"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\n            \"item count:\": 0,\n            \"meta1\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            },\n            \"meta2\": {\n                \"a\": \"abc\",\n                \"b\": \"bcd\",\n                \"c\": \"cdf\"\n            }\n        },\n        \"fingerprint\": \"101112\"\n    }],\n    \"complete\": false,\n    \"fast\": true,\n    \"id\": \"33beabc8-9d5b-44f8-bc3b-d346387b1bc9\",\n    \"items\": [{\n        \"blobs\": [\n            \"123\",\n            \"457\",\n            \"789\",\n            \"10112\"\n        ]\n    }],\n    \"port\": 443,\n    \"secure\": true\n}\n```\n\nI can easily query and match on `fingerprint` which then returns the documents that match. \n\n``` javascript\nr.db('db').table(\"test2\").concatMap(function(doc) {\n    return doc(\"blobs\")\n}).filter(function(carl) {\n  return carl(\"fingerprint\").match(\"123\")\n})\n```\n\nHowever, I need to match on more than one field and according to the docs I can do this.\n\n``` javascript\nr.db('db').table(\"test2\").concatMap(function(doc) {\n    return doc(\"blobs\")\n}).filter(function(carl) {\n  return carl(\"fingerprint\").match(\"123\").and([\"meta1\"][\"b\"]).match(\"bcd\")\n})\n```\n\nHowever, I get an error. \n\n```\ne: Argument 1 to and may not be `undefined`.\n```\n\nUnfrotuantly, the docs seem a little light on good working examples for this sort of thing. Are rich examples anywhere ?  \n"
  , issueState = "closed"
  , issueId = Id 156564847
  , issueComments = 12
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 175
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }