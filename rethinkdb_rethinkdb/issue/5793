Issue
  { issueClosedAt = Just 2016 (-05) (-24) 21 : 32 : 58 UTC
  , issueUpdatedAt = 2016 (-05) (-24) 23 : 26 : 30 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5793/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5793"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5793
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 555399
        , simpleUserLogin = N "carlskii"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/555399?v=3"
        , simpleUserUrl = "https://api.github.com/users/carlskii"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Issue with nested query and lack of good documentation "
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5793"
  , issueCreatedAt = 2016 (-05) (-24) 17 : 30 : 19 UTC
  , issueBody =
      Just
        "Hi,\r\n\r\nI'm struggling to get my head around a nested query. \r\n\r\nI have several docs that look like this: \r\n\r\n```json\r\n{\r\n\t\"blobs\": [{\r\n\t\t\"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\"data\": {\r\n\t\t\t\"Info:\": {\r\n\t\t\t\t\"length\": 1024\r\n\t\t\t},\r\n\t\t\t\"Serial Number\": 123456,\r\n\t\t\t\"Validity\": {\r\n\t\t\t\t\"begin\": \"20280801235959Z\",\r\n\t\t\t\t\"end\": \"19960129000000Z\"\r\n\t\t\t},\r\n\t\t\t\"Version\": 0,\r\n\t\t\t\"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\t\"item count:\": 0,\r\n\t\t\t\"meta1\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t},\r\n\t\t\t\"meta2\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"fingerprint\": \"123\"\r\n\t}, {\r\n\t\t\"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\"data\": {\r\n\t\t\t\"Info:\": {\r\n\t\t\t\t\"length\": 1024\r\n\t\t\t},\r\n\t\t\t\"Serial Number\": 123456,\r\n\t\t\t\"Validity\": {\r\n\t\t\t\t\"begin\": \"20280801235959Z\",\r\n\t\t\t\t\"end\": \"19960129000000Z\"\r\n\t\t\t},\r\n\t\t\t\"Version\": 0,\r\n\t\t\t\"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\t\"item count:\": 0,\r\n\t\t\t\"meta1\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t},\r\n\t\t\t\"meta2\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"fingerprint\": \"456\"\r\n\t}, {\r\n\t\t\"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\"data\": {\r\n\t\t\t\"Info:\": {\r\n\t\t\t\t\"length\": 1024\r\n\t\t\t},\r\n\t\t\t\"Serial Number\": 123456,\r\n\t\t\t\"Validity\": {\r\n\t\t\t\t\"begin\": \"20280801235959Z\",\r\n\t\t\t\t\"end\": \"19960129000000Z\"\r\n\t\t\t},\r\n\t\t\t\"Version\": 0,\r\n\t\t\t\"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\t\"item count:\": 0,\r\n\t\t\t\"meta1\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t},\r\n\t\t\t\"meta2\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"fingerprint\": \"789\"\r\n\t}, {\r\n\t\t\"base64\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\"data\": {\r\n\t\t\t\"Info:\": {\r\n\t\t\t\t\"length\": 1024\r\n\t\t\t},\r\n\t\t\t\"Serial Number\": 123456,\r\n\t\t\t\"Validity\": {\r\n\t\t\t\t\"begin\": \"20280801235959Z\",\r\n\t\t\t\t\"end\": \"19960129000000Z\"\r\n\t\t\t},\r\n\t\t\t\"Version\": 0,\r\n\t\t\t\"hash\": \"MIICPDCCAaUCEHC65B0Q2Sk0tjjKe\",\r\n\t\t\t\"item count:\": 0,\r\n\t\t\t\"meta1\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t},\r\n\t\t\t\"meta2\": {\r\n\t\t\t\t\"a\": \"abc\",\r\n\t\t\t\t\"b\": \"bcd\",\r\n\t\t\t\t\"c\": \"cdf\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"fingerprint\": \"101112\"\r\n\t}],\r\n\t\"complete\": false,\r\n\t\"fast\": true,\r\n\t\"id\": \"33beabc8-9d5b-44f8-bc3b-d346387b1bc9\",\r\n\t\"items\": [{\r\n\t\t\"blobs\": [\r\n\t\t\t\"123\",\r\n\t\t\t\"457\",\r\n\t\t\t\"789\",\r\n\t\t\t\"10112\"\r\n\t\t]\r\n\t}],\r\n\t\"port\": 443,\r\n\t\"secure\": true\r\n}\r\n```\r\n\r\nI can easily query and match on `fingerprint` which then returns the documents that match. \r\n\r\n```javascript\r\nr.db('db').table(\"test2\").concatMap(function(doc) {\r\n    return doc(\"blobs\")\r\n}).filter(function(carl) {\r\n  return carl(\"fingerprint\").match(\"123\")\r\n})\r\n```\r\nHowever, I need to match on more than one field and according to the docs I can do this.\r\n\r\n```javascript\r\nr.db('db').table(\"test2\").concatMap(function(doc) {\r\n    return doc(\"blobs\")\r\n}).filter(function(carl) {\r\n  return carl(\"fingerprint\").match(\"123\").and([\"meta1\"][\"b\"]).match(\"bcd\")\r\n})\r\n```\r\nHowever, I get an error. \r\n\r\n```\r\ne: Argument 1 to and may not be `undefined`.\r\n```\r\n\r\n\r\nUnfrotuantly, the docs seem a little light on good working examples for this sort of thing. Are rich examples anywhere ?  "
  , issueState = "closed"
  , issueId = Id 156564847
  , issueComments = 12
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 174
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }