IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-30) 01 : 13 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18656158"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/890#issuecomment-18656158"
  , issueCommentCreatedAt = 2013 (-05) (-30) 01 : 13 : 38 UTC
  , issueCommentBody =
      "So, there's a minor problem: we decided when we first wrote the drivers (before we'd standardized on an optarg syntax) to let people write `table.insert(obj, :upsert)` to specify an upserting insert.  This means that `insert` can't take an optarg hash (or at least we'd have to come up with a syntax to allow specifying `upsert` in addition to that optarg hash).\r\n\r\nI'd like to propose that we change the two options that we handle this way (`upsert` and `non_atomic`) to behave like all other options (require people to write e.g. `table.insert(obj, :upsert => true)`).\r\n\r\n@coffeemug -- do you think that's a reasonable thing to do?"
  , issueCommentId = 18656158
  }