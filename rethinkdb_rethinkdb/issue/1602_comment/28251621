IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-11) 23 : 15 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/28251621"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1602#issuecomment-28251621"
  , issueCommentCreatedAt = 2013 (-11) (-11) 23 : 15 : 38 UTC
  , issueCommentBody =
      "Well, you already have the `coro_t::run()` and one of the `coro_t::spawn_...` calls in there, which are characteristic for a coroutine boundary.\r\n\r\nMaking coroutine boundaries explicit would be a bit more involved. These back traces are constructed on a level at which a backtrace is merely a sequence of `void *` instruction addresses. We would have to enrich that representation by additional metadata, so the lazy_backtrace_formatter_t could print the boundaries accordingly.\r\nI personally think that's not worth the hassle."
  , issueCommentId = 28251621
  }