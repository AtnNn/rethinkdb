IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-25) 12 : 16 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 297060
        , simpleUserLogin = N "nviennot"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/297060?v=3"
        , simpleUserUrl = "https://api.github.com/users/nviennot"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11672464"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/180#issuecomment-11672464"
  , issueCommentCreatedAt = 2012 (-12) (-25) 12 : 12 : 58 UTC
  , issueCommentBody =
      "This script makes the db blow up in less than 3 seconds with:\r\n```\r\nerror: Unexpected epoll err/hup/rdhup. events=err hup rdhup, reading=yes, writing=yes\r\n```\r\n\r\n```ruby\r\n#!/usr/bin/env ruby\r\n\r\nrequire 'rethinkdb'\r\nextend RethinkDB::Shortcuts\r\n\r\ndef try\r\n  yield.tap { |q| puts q.inspect }.run\r\nrescue RuntimeError => e\r\n  case e.message\r\n  when /already exists/\r\n    return\r\n  when /`EVAL_DB test`: No entry with that name/\r\n  when /`FIND_DB test`: No entry with that name/\r\n    try { r.db_create('test') }\r\n    retry\r\n  when /`FIND_TABLE test`: No entry with that name/\r\n    try { r.db('test').table_create('test') }\r\n    retry\r\n  else raise e\r\n  end\r\nend\r\n\r\nloop do\r\n  r.connect\r\n  try { r.table('test').insert(:field1 => 'world', :field2 => nil) }\r\n  try { r.db_drop('test') }\r\n  try { r.table('test').count }\r\nend\r\n```"
  , issueCommentId = 11672464
  }