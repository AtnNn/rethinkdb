IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-25) 00 : 25 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11667455"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/180#issuecomment-11667455"
  , issueCommentCreatedAt = 2012 (-12) (-25) 00 : 25 : 56 UTC
  , issueCommentBody =
      "This does mix badly with non atomic operations. Unfortunately failed requests are a reality of our immediately consistent model that we just can't get around. And without truly atomic operations (which are probably a ways off) partial failures are a reality as well. However we could do better regarding how much information we give you about what failed and what didn't. Right now what we're doing is basically giving people 1 of 3 on CAP (just the C) which is a bit stingy in my book. I think the solution to this would be to have a bulk insert return a bitmap (perhaps optionally). Of which rows were successfully inserted and which weren't. This could obviously be omitted if all rows succeeded since it's implicit all true.\r\n\r\nThis is a bit of a pain because I don't think protocol buffers support bit fields natively but I suspect we could hack something together.\r\n\r\nAlso note that communicating failures by returning failed (or succeeded primary keys) doesn't work because of autogenerated keys. We could return the failed documents but that seems like a lot of extra traffic to me."
  , issueCommentId = 11667455
  }