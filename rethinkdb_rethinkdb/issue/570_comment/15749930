IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-02) 02 : 30 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15749930"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/570#issuecomment-15749930"
  , issueCommentCreatedAt = 2013 (-04) (-02) 02 : 30 : 39 UTC
  , issueCommentBody =
      "Update:\r\n\r\n* We should go back to the behavior for `pluck` where `r({:a => 1, :b => 2}).pluck(:a, :c)` yields `{:a => 1}`.  This is good because the primitive seems more useful that way.\r\n* We should introduce a term `with_fields` where `tbl.with_fields(:a, :b)` is equivalent to `tbl.has_fields(:a, :b).pluck(:a, :b)`.  This is good because it's a very common operation.  (What I said to Slava is \"we may end up having lots of terms for operating on streams of objects for the same reason that common lisp has lots of functions for operating on lists of lists\".)"
  , issueCommentId = 15749930
  }