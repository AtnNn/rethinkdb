IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-02) 22 : 08 : 22 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/15805978"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/570#issuecomment-15805978"
  , issueCommentCreatedAt = 2013 (-04) (-02) 22 : 08 : 22 UTC
  , issueCommentBody =
      "I like the idea of having `has_fields` be variadic. I think having it be polymorphic is potentially confusing. My first guess for what `has_fields` would do on a stream is check if there's an element of the stream that matches the one I gave it. It's a pretty big jump for me to know that `has_fields` on a stream means, \"give me only the elements of the stream which have these fields\". I think this makes sense if you talk about it for a while but is going to be confusing the people coming in cold turkey. This might be okay though. I think it would be a lot better if I could say:\r\n\r\n```Python\r\ntable.filter(r.has_fields(\"foo\", \"bar\"))\r\n```"
  , issueCommentId = 15805978
  }