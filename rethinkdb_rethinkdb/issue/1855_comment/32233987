IssueComment
  { issueCommentUpdatedAt = 2014 (-01) (-14) 02 : 35 : 10 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/32233987"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1855#issuecomment-32233987"
  , issueCommentCreatedAt = 2014 (-01) (-14) 02 : 35 : 10 UTC
  , issueCommentBody =
      "I had forgotten that RethinkDB used alphabetical ordering of fields. I would argue that comparing objects should be an error, but not here.\r\n\r\nI much prefer doing something like this `.do(lambda x: { 'a': x['a']['a'], 'b': x['a']['b'], 'c': x['b']['c'] })` than using `.collapse`. The main application I see for collapse is to port SQL code such as `select a, a.b, c from t1 as a join t2 as b on ...`"
  , issueCommentId = 32233987
  }