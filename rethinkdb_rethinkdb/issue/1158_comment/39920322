IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-09) 01 : 27 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39920322"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1158#issuecomment-39920322"
  , issueCommentCreatedAt = 2014 (-04) (-09) 01 : 27 : 30 UTC
  , issueCommentBody =
      "One really simple implementation of 2d indexes would be to just splice the bits of 1d indexes together (e.g. if you have two doubles which serialize to the bytes `abcde` and `ABCDE`, their 2d index would be `aAbBcCdDeE`).  This wouldn't require implementing any new data structures, just some mildly-annoying logic to turn 2D ranges into a set of ranges on the spliced bits and filter out any extraneous values.\r\n\r\nBasically every two bits in the new spliced key would specify a quadrant:\r\n\r\n```\r\n00|01\r\n--+--\r\n10|11\r\n```"
  , issueCommentId = 39920322
  }