IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-14) 21 : 13 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13578865"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/325#issuecomment-13578865"
  , issueCommentCreatedAt = 2013 (-02) (-14) 21 : 13 : 23 UTC
  , issueCommentBody =
      "We're sort of conflating keyword and library function here. I don't know of any language in which it's a try keyword (I don't know many languages though) but I think it's a builtin function in a lot. In most cases I think we'll be fine because it's normally a method on a dict object while we'd have it being a method on an ast object.\r\n\r\nHowever I do have some concern that values has a different meaning in some languages than we're giving it here. In python\r\n\r\n    {\"a\" : 1, \"b\" : 2}.values() == [\"a\", \"b\"]\r\n\r\nRuby behaves the same but has a `values_at` method which is the same as what we're describing.\r\n\r\nHow do we feel about `values_of`?"
  , issueCommentId = 13578865
  }