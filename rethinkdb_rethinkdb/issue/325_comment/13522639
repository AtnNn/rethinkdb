IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-13) 22 : 38 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13522639"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/325#issuecomment-13522639"
  , issueCommentCreatedAt = 2013 (-02) (-13) 22 : 38 : 07 UTC
  , issueCommentBody =
      "The `pick` and `pluck` duality is going away -- we're going to use `pluck` for both. In fact, in the new language as many things as possible will be polymorphic -- whenever something is defined on an object, whenever possible it will also be defined as a map over a stream.\r\n\r\nWe couldn't do it before because of the type system, but now that it's gone, we can make everything polymorphic on objects and streams and use the same name without confusing users.\r\n\r\nAlso, I think that in the new language we should define `pick` as follows (it would of course also be polymorphic on streams):\r\n\r\n```\r\nr.expr({a : 1, b: 2}).pick('a', 'b') => [1, 2]\r\n```"
  , issueCommentId = 13522639
  }