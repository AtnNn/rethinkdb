Issue
  { issueClosedAt = Just 2014 (-06) (-05) 01 : 13 : 15 UTC
  , issueUpdatedAt = 2014 (-06) (-12) 03 : 44 : 06 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2500/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2500"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 2500
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 505365
          , simpleUserLogin = N "danielmewes"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/505365?v=3"
          , simpleUserUrl = "https://api.github.com/users/danielmewes"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Intermittent unit test segmentation fault on next"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2500"
  , issueCreatedAt = 2014 (-06) (-03) 23 : 37 : 55 UTC
  , issueBody =
      Just
        "This intermittently crashes without a back trace on next:\r\n```\r\ndaniel@newton:~/rethinkdb/build/debug_clang$ ./rethinkdb-unittest --gtest_filter=RDBProtocolBackfill.Backfill\r\nNote: Google Test filter = RDBProtocolBackfill.Backfill\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from RDBProtocolBackfill\r\n[ RUN      ] RDBProtocolBackfill.Backfill\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nI have this more often in my branch daniel_concurrent_gc, but could also observe it twice on next.\r\n\r\nGDB say it crashes when it's trying to call `request->run()` in `blocker_pool_t::event_loop()`. \r\nThe `request` object looks fine in GDB, though the vtable pointer could be off (does anyone know how I could check that?)."
  , issueState = "closed"
  , issueId = Id 34916262
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2014 (-06) (-13) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 61
          , milestoneClosedIssues = 160
          , milestoneDescription = Just ""
          , milestoneTitle = "1.13"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/61"
          , milestoneCreatedAt = 2014 (-03) (-25) 19 : 19 : 02 UTC
          , milestoneState = "closed"
          }
  }