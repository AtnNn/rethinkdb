IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-08) 21 : 09 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/25927854"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1514#issuecomment-25927854"
  , issueCommentCreatedAt = 2013 (-10) (-08) 21 : 09 : 56 UTC
  , issueCommentBody =
      "> On the other hand there are places where ReQL semantics already is defined in terms of a connection.\r\n\r\nNo. The query language has the semantics that if you call `run` wait for it to complete and then call `run` again. The second call will see the effects of the first call. These are very simple semantics which are then used to implement the more complicated connection semantics you describe."
  , issueCommentId = 25927854
  }