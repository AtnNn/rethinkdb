IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-08) 19 : 12 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/25918773"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1514#issuecomment-25918773"
  , issueCommentCreatedAt = 2013 (-10) (-08) 19 : 12 : 14 UTC
  , issueCommentBody =
      "I'm going to implement the 0-argument wait as a term on the server and wire side. I think this makes stuff easier for clients once we extend it to also return something. Most client drivers have generic code to send a term and wait for a response. Having it as a QueryType of its own will often require special handling.\r\n\r\nI'm not sure yet how we should expose it on the side of the driver API.\r\nShould it be `r.wait().run(conn)` or `conn.wait()` ? What do you guys think?\r\nAgain, I feel like the effort on the driver side is smaller in the former case because there usually already is infrastructure in the drivers to make adding new terms easy."
  , issueCommentId = 25918773
  }