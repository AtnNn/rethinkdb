IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-08) 21 : 29 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/25929287"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1514#issuecomment-25929287"
  , issueCommentCreatedAt = 2013 (-10) (-08) 21 : 29 : 03 UTC
  , issueCommentBody =
      "So here's the proposal for the non-user-facing implementation then:\r\nWe add a new QueryType. Currently query types are START, CONTINUE and STOP. We would add one which is called WAIT, or alternatively we could call it CLOSE (in which case the server would also have to terminate the TCP connection).\r\n\r\nFor now, this command will not be exposed in the API at all. It will be used exclusively when calling `conn.close()` to solve https://github.com/rethinkdb/rethinkdb/issues/1388 .\r\n\r\nI'm still not completely satisfied with this due to the remaining question of how we could extent this into something that returns results later. It still seems that having it as a Term *on the wire protocol level* could make things easier for us and driver developers. But if there are objections that something which is called a \"Term\" in the ql2.proto file should also be usable as a ReQL term (i.e. shouldn't be a method that you call on the connection), I can understand that."
  , issueCommentId = 25929287
  }