IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-09) 00 : 39 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/25939265"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1514#issuecomment-25939265"
  , issueCommentCreatedAt = 2013 (-10) (-09) 00 : 39 : 53 UTC
  , issueCommentBody =
      "> I tend to avoid specifying semantics because I implicitly assume they're obvious\r\n\r\nYeah, this is infuriating and makes discussions harder for others. I never said you need to specifiy clear semantics or think them through at a PL level but you need at least tell us what this command means to you. It would not take a prohibitively long amount of time for you to say: \"I'd prefer adding `conn.sync` which syncs everything.\" That's 3 total extra words you need to write to have a statement which actually means something to the rest of us.\r\n\r\nI agree that ReQL is a good language because it balances these different constraints. Those of us on the PL side of the fence work hard to explain things to less PL inclined people in ways they'll understand. And all the less PL inclined people particularly @mglukhovsky and @neumino and Alex while he still worked here know how to do the same with us. You're the only one who does this and it makes having github discussions with you painful. So pretty please, with sugar on top, after you write something take a few extra seconds to consider if it's going to be clear to the rest of us what it could mean. It will save me a lot of frustration."
  , issueCommentId = 25939265
  }