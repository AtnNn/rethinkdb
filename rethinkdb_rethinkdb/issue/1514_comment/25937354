IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-08) 23 : 52 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/25937354"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1514#issuecomment-25937354"
  , issueCommentCreatedAt = 2013 (-10) (-08) 23 : 52 : 34 UTC
  , issueCommentBody =
      "> another aspect of the ReQL proposal rules is that proposing a command and not even giving us a hint as to what the semantics are, which is what you're doing with `conn.sync()` right now, is to be avoided\r\n\r\nNot to get too far into the meta, but I don't think this was ever a strong requirement for ReQL proposals, and I don't think it should be.\r\n\r\nForcing people to specify clear semantics prevents valuable feedback from people who don't have a PL background or deep knowledge of our architecture, or people who want to throw an idea into the pot but don't necessarily have enough time to immediately think it through. That's bad -- ReQL is a good language precisely because it balances strong PL underpinnings and pragmatism as perceived by a casual user, and that wouldn't have been possible if we required everyone to specify semantics for every proposal.\r\n\r\nWe don't want to scare people away by making the discussion process seem accessible only to select few who have deep knowledge *and* time. In my specific case, I tend to avoid specifying semantics because I implicitly assume they're obvious (i.e. I don't know that you don't know -- in this case `conn.sync()` seems obvious -- you just sync every table that had a soft durability op performed on it via the connection), and because I think that introducing an option that comes from an alternative sense of taste is valuable, even if I don't have the time to carefully spec the implementation. This seems like a good thing. If something's unclear, you can just ask."
  , issueCommentId = 25937354
  }