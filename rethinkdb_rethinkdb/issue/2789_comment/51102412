IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-04) 19 : 00 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/51102412"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2789#issuecomment-51102412"
  , issueCommentCreatedAt = 2014 (-08) (-04) 19 : 00 : 41 UTC
  , issueCommentBody =
      "> Actually, after a talk with Marc we were thinking of adding a secondary index's code to index_status (we want this for the import/export scripts too) in whatever form the JSON protocol would use to represent it. Then we would add r.eval and write r.index_create('new_foo', r.index_status('foo')['code'].eval()). (This introduces recursion problems, though.)\r\n\r\nInstead of picking the literally most insane possible way to do this, just have `r.opaque_func(r.index_status('foo')['code'])` that constructs a function from its opaque representation.\r\n\r\nAnd don't name it \"code\".  It's not the source code of the function."
  , issueCommentId = 51102412
  }