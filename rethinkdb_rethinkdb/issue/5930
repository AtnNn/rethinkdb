Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-07) (-09) 23 : 41 : 07 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5930/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5930"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/JavaScript%20/%20Coffee"
          , labelName = "JavaScript / Coffee"
          }
      , IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 5930
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add event-style interface for Changefeeds in JS"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5930"
  , issueCreatedAt = 2016 (-07) (-09) 23 : 41 : 07 UTC
  , issueBody =
      Just
        "If I have a changefeed cursor, I should be able to write this (it's fairly similar to the EventMachine interface for Ruby):\r\n\r\n```js\r\n// Handles state documents.\r\ncursor.on('state', (state) => ...)\r\n// Handles error documents.\r\ncursor.on('error', (err) => ...)\r\n// Handles everything else.  `old_val` or `new_val` may be `undefined` for initial and uninitial vals.\r\ncursor.on('change', (old_val, new_val) => ...)\r\n\r\n// If this isn't defined, these are routed to `change` with `old_val` set to `null`.\r\ncursor.on('add', (new_val) => ...)\r\n// If this isn't defined, these are routed to `change` with `new_val` set to `null`.\r\ncursor.on('remove', (old_val) => ...)\r\n// If this isn't defined, these are either routed to `add`, or to `change` with `old_val` set to `undefined`.\r\ncursor.on('initial', (new_val) => ...) // Will be routed to `add` if not defined.\r\n// If this isn't defined, these are either routed to `add`, or to `change` with `new_val` set to `undefined`.\r\ncursor.on('uninitial', (old_val) => ...) // Will be routed to `remove` if note defined.\r\n```\r\n\r\nCurrently I just get a stream of documents and have to branch myself, which is fairly annoying."
  , issueState = "open"
  , issueId = Id 164690996
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }