IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 21 : 59 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27917913"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1618#issuecomment-27917913"
  , issueCommentCreatedAt = 2013 (-11) (-06) 21 : 59 : 46 UTC
  , issueCommentBody =
      "It's worth noting that in a lot of languages, it's very common to use non-boolean values to indicate true or false.  In Ruby, for example, you sometimes have function interfaces that return either a value or `nil` to indicate either true or false while also providing more information.\r\n\r\nI've heard that shenanigans like that are even more common in JS -- undefined, null, NaN, 0, \"\", and false are all sometimes used to mean false, for example.  (I have no idea what's considered good practice.)\r\n\r\nI think we could get the desired effect by just asserting that the value of `noreply` isn't a ReQL query before coercing it to true or false.  This would solve the problem without confusing or inconveniencing people using languages without strict boolean types."
  , issueCommentId = 27917913
  }