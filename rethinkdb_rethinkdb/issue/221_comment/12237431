IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-14) 20 : 15 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12237431"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/221#issuecomment-12237431"
  , issueCommentCreatedAt = 2013 (-01) (-14) 20 : 15 : 38 UTC
  , issueCommentBody =
      "@Raynos While we're not currently doing this in the JS driver, the Ruby driver currently supports prefix and infix forms of each operation. Translating this into JS this would allow both of the following forms:\r\n\r\n```javascript\r\nfunction squareInfix(num) {\r\n   return num.mul(num);\r\n}\r\n\r\nfunction squarePrefix(num) {\r\n   return r.mul(num, num);\r\n}\r\n```\r\n\r\nWe've been giving preference to the first form because it more closely matches the operator syntax we're actually trying to replicate and is cleaner when nesting multiple mathematical operations, e.g. `r(2).mul(2).add(1).div(3)` as opposed to `r.div(r.add(r.mul(2, 2), 1), 3)`\r\n\r\n@thisandagain It's hard for me to express how much your current and any future feedback is appreciated. Before we open sourced the project we were basically operating in the dark in designing the API. You're absolutely right that our overarching goal is to make the drivers feel as native as possible in each environment. We can't possibly be experts in each language community so being able to leverage the expertise of all of our own contributors has been a wonderful boon to the usability of RethinkDB. As I've mentioned, we're already completely rewriting much of our user facing code (including the protobuf spec that third party driver developers will have to use) in response to such user feedback. Thanks again!"
  , issueCommentId = 12237431
  }