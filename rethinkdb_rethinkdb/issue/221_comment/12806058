IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-28) 21 : 33 : 09 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 290841
        , simpleUserLogin = N "al3xandru"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/290841?v=3"
        , simpleUserUrl = "https://api.github.com/users/al3xandru"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12806058"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/221#issuecomment-12806058"
  , issueCommentCreatedAt = 2013 (-01) (-28) 21 : 33 : 09 UTC
  , issueCommentBody =
      "1. While interesting as an idea, I don't think `with` is useful.\r\n\r\n2. I like \"Iteration style 1\" `cursor.next(function(err, row) {})` \r\n\r\n3. I also like \"Iteration style 2\": `cursor.each(function(err, row) {})`\r\n\r\n    While I read @Raynos comments about not using exceptions for \"short-circuiting\" or not allowing short-circuiting at all, I think these are: 1) still useful; 2) less confusing than a) **having to** return from the callback; and b) having to return **false** for short circuiting. The alternative would be to interpret any callback returns (including undefined) as `true` by default. Which IMO is still more confusing than throwing.\r\n\r\n4. Last, but not least I also like @othiym23's `stream`-based example. "
  , issueCommentId = 12806058
  }