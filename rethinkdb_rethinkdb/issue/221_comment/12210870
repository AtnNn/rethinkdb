IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-14) 09 : 11 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12210870"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/221#issuecomment-12210870"
  , issueCommentCreatedAt = 2013 (-01) (-14) 09 : 11 : 47 UTC
  , issueCommentBody =
      "Thank's for your feedback guys! We weren't really aware of established node conventions when we first designed the JavaScript driver but have gotten a lot of feedback since (see #140). We're actually completely overhauling all the drivers as we speak and the new version of the JS driver will follow the standard Node error convention.\r\n\r\n@Raynos I'm not too familiar with Node streams but we'll certainly look into supporting them for our cursors. My only concern is leaning too heavily on Node library support for common operations (e.g. `collect`) that won't be available in other JS environments. The JS driver currently runs unmodified in Chrome and Firefox (using AJAX to communicate with the database server) and is actually integrated directly into the HTTP admin interface via the data explorer tab. Since it is through the data explorer that we expect most people to first encounter the query language we've put a high premium on ease of use and a shallow learning curve here.\r\n\r\nWhen it's ready, I'll post a proposal for the new API here so you guys can critique it. Any additional feedback will be most appreciated."
  , issueCommentId = 12210870
  }