Issue
  { issueClosedAt = Just 2015 (-01) (-20) 04 : 09 : 26 UTC
  , issueUpdatedAt = 2015 (-01) (-20) 04 : 09 : 26 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3586/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3586"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3586
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "[next]Error in src/arch/runtime/thread_pool.cc at line 343"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3586"
  , issueCreatedAt = 2015 (-01) (-16) 03 : 44 : 05 UTC
  , issueBody =
      Just
        "On next, with one table with about 100.000 documents.\r\n\r\nI was sharding via the web ui (I think it was still sharding - I switched from one shard to three, and the back to two).\r\n\r\nBacktrace:\r\n```\r\nA newer version of the RethinkDB server is available: 1.15.3. You can read the changelog at <https://github.com/rethinkdb/rethinkdb/releases>.\r\nCTRL-C to kill me http requests can be sent to ports: 14921 , 14923 , 14925 , 14927 \r\nSomeone asked for the nonwhitelisted file \"/ionicons.ttf\".  If this should be accessible, add it to the static web assets.\r\nSomeone asked for the nonwhitelisted file \"/images/thinker_on_hill.svg\".  If this should be accessible, add it to the static web assets.\r\nSomeone asked for the nonwhitelisted file \"/ionicons.woff\".  If this should be accessible, add it to the static web assets.\r\nSomeone asked for the nonwhitelisted file \"/images/server-icon-added.png\".  If this should be accessible, add it to the static web assets.\r\nSomeone asked for the nonwhitelisted file \"/images/server-icon-removed.png\".  If this should be accessible, add it to the static web assets.\r\nVersion: rethinkdb 1.15.2-1733-g051c54 (debug) (GCC 4.9.2)\r\nerror: Error in src/arch/runtime/thread_pool.cc at line 343:\r\nerror: Segmentation fault from reading the address (nil).\r\nerror: Backtrace:\r\nerror: Thu Jan 15 19:41:33 2015\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:203 (discriminator 1)\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n       4: format_backtrace(bool) at backtrace.cc:198\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83 (discriminator 1)\r\n       6: linux_thread_pool_t::sigsegv_handler(int, siginfo_t*, void*) at thread_pool.cc:343\r\n       7: /usr/lib/libpthread.so.0(+0x10210) [0x7fd98399d210] at 0x7fd98399d210 (/usr/lib/libpthread.so.0)\r\n       8: home_thread_mixin_t::home_thread() const at threading.hpp:47\r\n       9: home_thread_mixin_t::assert_thread() const at threading.cc:27\r\n       10: subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t::on_parent_changed() at watchable.tcc:102\r\n       11: void std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t::*)()>::operator()<, void>(subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t*) const at functional:569 (discriminator 4)\r\n       12: void std::_Bind<std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t::*)()> (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) at functional:1265\r\n       13: void std::_Bind<std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t::*)()> (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t*)>::operator()<, void>() at functional:1323\r\n       14: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t::*)()> (subview_watchable_t<boost::optional<boost::optional<broadcaster_business_card_t> >, boost::optional<boost::optional<reactor_business_card_details::primary_t> >, non_incremental_lens_wrapper_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<boost::optional<broadcaster_business_card_t> > (*)(boost::optional<boost::optional<reactor_business_card_details::primary_t> > const&)> >::lensed_value_cache_t*)> >::_M_invoke(std::_Any_data const&) at functional:2041\r\n       15: std::function<void ()>::operator()() const at functional:2440\r\n       16: call_function(std::function<void ()> const&) at watchable.hpp:156\r\n       17: void publisher_controller_t<std::function<void ()> >::publish<void (*)(std::function<void ()> const&)>(void (* const&)(std::function<void ()> const&)) at pubsub.hpp:134\r\n       18: subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >::lensed_value_cache_t::on_parent_changed() at watchable.tcc:106\r\n       19: void std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >::lensed_value_cache_t::*)()>::operator()<, void>(subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >*) const at functional:569 (discriminator 4)\r\n       20: void std::_Bind<std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >::lensed_value_cache_t::*)()> (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) at functional:1265\r\n       21: void std::_Bind<std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >::lensed_value_cache_t::*)()> (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >*)>::operator()<, void>() at functional:1323\r\n       22: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >::lensed_value_cache_t::*)()> (subview_watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> >, boost::optional<cow_ptr_t<reactor_business_card_t> >, non_incremental_lens_wrapper_t<boost::optional<cow_ptr_t<reactor_business_card_t> >, clone_ptr_t<watchable_t<boost::optional<boost::optional<reactor_business_card_details::primary_t> > > > reactor_t::get_directory_entry_view<reactor_business_card_details::primary_t>(peer_id_t, uuid_u const&)::{lambda(boost::optional<cow_ptr_t<reactor_business_card_t> > const&)#1}> >*)> >::_M_invoke(std::_Any_data const&) at functional:2041\r\n       23: std::function<void ()>::operator()() const at functional:2440\r\n       24: clone_ptr_t<watchable_t<boost::optional<cow_ptr_t<reactor_business_card_t> > > > get_watchable_for_key<peer_id_t, cow_ptr_t<reactor_business_card_t> >(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::w_t::w_t(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::{lambda(cow_ptr_t<reactor_business_card_t> const*)#1}::operator()(cow_ptr_t<reactor_business_card_t> const*) const::{lambda(std::function<void ()> const&)#1}::operator()(std::function<void ()> const) const at watchable_transform.tcc:108\r\n       25: void publisher_controller_t<std::function<void ()> >::publish<clone_ptr_t<watchable_t<boost::optional<cow_ptr_t<reactor_business_card_t> > > > get_watchable_for_key<peer_id_t, cow_ptr_t<reactor_business_card_t> >(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::w_t::w_t(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::{lambda(cow_ptr_t<reactor_business_card_t> const*)#1}::operator()(cow_ptr_t<reactor_business_card_t> const*) const::{lambda(std::function<void ()> const&)#1}>(clone_ptr_t<watchable_t<boost::optional<cow_ptr_t<reactor_business_card_t> > > > get_watchable_for_key<peer_id_t, cow_ptr_t<reactor_business_card_t> >(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::w_t::w_t(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::{lambda(cow_ptr_t<reactor_business_card_t> const*)#1}::operator()(cow_ptr_t<reactor_business_card_t> const*) const::{lambda(std::function<void ()> const&)#1} const&) at pubsub.hpp:134\r\n       26: clone_ptr_t<watchable_t<boost::optional<cow_ptr_t<reactor_business_card_t> > > > get_watchable_for_key<peer_id_t, cow_ptr_t<reactor_business_card_t> >(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::w_t::w_t(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::{lambda(cow_ptr_t<reactor_business_card_t> const*)#1}::operator()(cow_ptr_t<reactor_business_card_t> const*) const at watchable_transform.tcc:109 (discriminator 2)\r\n       27: std::_Function_handler<void (cow_ptr_t<reactor_business_card_t> const*), clone_ptr_t<watchable_t<boost::optional<cow_ptr_t<reactor_business_card_t> > > > get_watchable_for_key<peer_id_t, cow_ptr_t<reactor_business_card_t> >(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::w_t::w_t(watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >*, peer_id_t const&)::{lambda(cow_ptr_t<reactor_business_card_t> const*)#1}>::_M_invoke(std::_Any_data const&, cow_ptr_t<reactor_business_card_t> const*) at functional:2041\r\n       28: std::function<void (cow_ptr_t<reactor_business_card_t> const*)>::operator()(cow_ptr_t<reactor_business_card_t> const*) const at functional:2440\r\n       29: watchable_map_t<peer_id_t, cow_ptr_t<reactor_business_card_t> >::notify_change(peer_id_t const&, cow_ptr_t<reactor_business_card_t> const*, rwi_lock_assertion_t::write_acq_t*) at watchable_map.tcc:84\r\n       30: watchable_map_transform_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> >, peer_id_t, cow_ptr_t<reactor_business_card_t> >::do_notify_change(peer_id_t const&, cow_ptr_t<reactor_business_card_t> const*, rwi_lock_assertion_t::write_acq_t*) at watchable_transform.hpp:54\r\n       31: watchable_map_transform_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> >, peer_id_t, cow_ptr_t<reactor_business_card_t> >::watchable_map_transform_t(watchable_map_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*)::{lambda(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)#1}::operator()(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*) const at watchable_transform.tcc:19\r\n       32: std::_Function_handler<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*), watchable_map_transform_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> >, peer_id_t, cow_ptr_t<reactor_business_card_t> >::watchable_map_transform_t(watchable_map_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*)::{lambda(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)#1}>::_M_invoke(std::_Any_data const&, peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*) at functional:2041\r\n       33: std::function<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)>::operator()(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*) const at functional:2440\r\n       34: watchable_map_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*)::{lambda(std::function<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&)#1}::operator()(std::function<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&) const at watchable_map.tcc:83\r\n       35: void publisher_controller_t<std::function<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> >::publish<watchable_map_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*)::{lambda(std::function<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&)#1}>(watchable_map_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*)::{lambda(std::function<void (peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&)#1} const&) at pubsub.hpp:134\r\n       36: watchable_map_t<peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*) at watchable_map.tcc:84 (discriminator 2)\r\n       37: watchable_map_transform_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> >, peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::do_notify_change(peer_id_t const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*) at watchable_transform.hpp:54\r\n       38: watchable_map_transform_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> >, peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::watchable_map_transform_t(watchable_map_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*)::{lambda(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)#1}::operator()(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*) const at watchable_transform.tcc:19\r\n       39: std::_Function_handler<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*), watchable_map_transform_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> >, peer_id_t, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::watchable_map_transform_t(watchable_map_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*)::{lambda(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)#1}>::_M_invoke(std::_Any_data const&, std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*) at functional:2041\r\n       40: std::function<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)>::operator()(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*) const at functional:2440\r\n       41: watchable_map_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*)::{lambda(std::function<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&)#1}::operator()(std::function<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&) const at watchable_map.tcc:83\r\n       42: void publisher_controller_t<std::function<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> >::publish<watchable_map_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*)::{lambda(std::function<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&)#1}>(watchable_map_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*)::{lambda(std::function<void (std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*)> const&)#1} const&) at pubsub.hpp:134\r\n       43: watchable_map_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::notify_change(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const*, rwi_lock_assertion_t::write_acq_t*) at watchable_map.tcc:84 (discriminator 2)\r\n       44: watchable_map_var_t<std::pair<peer_id_t, uuid_u>, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::set_key_no_equals(std::pair<peer_id_t, uuid_u> const&, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > const&) at watchable_map.tcc:170 (discriminator 2)\r\n       45: directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::do_update(peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&) at map_read_manager.tcc:88\r\n       46: boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>::operator()(directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&) const at mem_fn_template.hpp:732 (discriminator 6)\r\n       47: void boost::_bi::list7<boost::_bi::value<directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*>, boost::_bi::value<peer_id_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<unsigned long>, boost::_bi::value<uuid_u>, boost::_bi::value<boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > > >::operator()<boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>&, boost::_bi::list0&, int) at bind.hpp:670 (discriminator 8)\r\n       48: boost::_bi::bind_t<void, boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>, boost::_bi::list7<boost::_bi::value<directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*>, boost::_bi::value<peer_id_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<unsigned long>, boost::_bi::value<uuid_u>, boost::_bi::value<boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > > > >::operator()() at bind_template.hpp:20\r\n       49: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>, boost::_bi::list7<boost::_bi::value<directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*>, boost::_bi::value<peer_id_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<unsigned long>, boost::_bi::value<uuid_u>, boost::_bi::value<boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > > > > >::run_action() at callable_action.hpp:31\r\n       50: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       51: coro_t::run() at coroutines.cc:199\r\n       52: coro_t* coro_t::spawn_sometime<boost::_bi::bind_t<void, boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>, boost::_bi::list7<boost::_bi::value<directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*>, boost::_bi::value<peer_id_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<unsigned long>, boost::_bi::value<uuid_u>, boost::_bi::value<boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > > > > >(boost::_bi::bind_t<void, boost::_mfi::mf6<void, directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >, peer_id_t, auto_drainer_t::lock_t, auto_drainer_t::lock_t, unsigned long, uuid_u const&, boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > const&>, boost::_bi::list7<boost::_bi::value<directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*>, boost::_bi::value<peer_id_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<unsigned long>, boost::_bi::value<uuid_u>, boost::_bi::value<boost::optional<directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > > > > >&&) at coroutines.hpp:58\r\n       53: directory_map_read_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::on_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, read_stream_t*) at map_read_manager.tcc:52\r\n       54: cluster_message_handler_t::on_local_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, std::vector<char, std::allocator<char> >&&) at cluster.cc:1316 (discriminator 4)\r\n       55: connectivity_cluster_t::send_message(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, unsigned char, cluster_send_message_write_callback_t*) at cluster.cc:1244 (discriminator 4)\r\n       56: directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::stream_to_conn(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >) at map_write_manager.tcc:119 (discriminator 3)\r\n       57: void std::_Mem_fn<void (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::*)(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)>::operator()<connectivity_cluster_t::connection_t*&, auto_drainer_t::lock_t&, auto_drainer_t::lock_t&, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >&, void>(directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, connectivity_cluster_t::connection_t*&, auto_drainer_t::lock_t&, auto_drainer_t::lock_t&, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >&) const at functional:569 (discriminator 8)\r\n       58: void std::_Bind<std::_Mem_fn<void (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::*)(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)>::__call<void, , 0ul, 1ul, 2ul, 3ul, 4ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) at functional:1265\r\n       59: void std::_Bind<std::_Mem_fn<void (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::*)(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)>::operator()<, void>() at functional:1323\r\n       60: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::*)(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> >::run_action() at callable_action.hpp:31\r\n       61: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       62: coro_t::run() at coroutines.cc:199\r\n       63: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::*)(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> >(std::_Bind<std::_Mem_fn<void (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::*)(connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)> (directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*, connectivity_cluster_t::connection_t*, auto_drainer_t::lock_t, auto_drainer_t::lock_t, std::_Rb_tree_iterator<std::pair<connectivity_cluster_t::connection_t* const, directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::conn_info_t> >)>&&) at coroutines.hpp:58\r\n       64: directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::on_connections_change() at map_write_manager.tcc:80\r\n       65: directory_map_write_manager_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >::directory_map_write_manager_t(connectivity_cluster_t*, unsigned char, watchable_map_t<uuid_u, directory_echo_wrapper_t<cow_ptr_t<reactor_business_card_t> > >*) at map_write_manager.tcc:41 (discriminator 2)\r\n       66: do_serve(io_backender_t*, bool, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:353 (discriminator 3)\r\n       67: serve(io_backender_t*, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, serve_info_t const&, os_signal_cond_t*) at serve.cc:510\r\n       68: run_rethinkdb_serve(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:797 (discriminator 2)\r\n       69: run_rethinkdb_porcelain(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, bool, serve_info_t*, directory_lock_t*, bool*) at command_line.cc:866\r\n       70: void std::_Bind<void (*(base_path_t, name_string_t, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> >, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, bool, serve_info_t*, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, bool, serve_info_t*, directory_lock_t*, bool*)>::__call<void, , 0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul, 5ul, 6ul, 7ul, 8ul, 9ul>) at functional:1264\r\n       71: void std::_Bind<void (*(base_path_t, name_string_t, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> >, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, bool, serve_info_t*, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, bool, serve_info_t*, directory_lock_t*, bool*)>::operator()<, void>() at functional:1323\r\n       72: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, name_string_t, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> >, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> >, bool, serve_info_t*, directory_lock_t*, bool*))(base_path_t const&, name_string_t const&, std::set<name_string_t, std::less<name_string_t>, std::allocator<name_string_t> > const&, file_direct_io_mode_t, int, boost::optional<boost::optional<unsigned long> > const&, bool, serve_info_t*, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:2041\r\n       73: std::function<void ()>::operator()() const at functional:2440\r\n       74: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\r\n       75: void std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()<std::function<void ()>&, void>(starter_t*, std::function<void ()>&) const at functional:569 (discriminator 4)\r\n       76: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) at functional:1265\r\n       77: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::operator()<, void>() at functional:1323\r\n       78: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:2041\r\n       79: std::function<void ()>::operator()() const at functional:2440\r\n       80: callable_action_instance_t<std::function<void ()>&>::run_action() at callable_action.hpp:31\r\n       81: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       82: coro_t::run() at coroutines.cc:199\r\n       83: coro_t* coro_t::spawn_sometime<std::function<void ()>&>(std::function<void ()>&) at coroutines.hpp:58\r\n       84: starter_t::on_thread_switch() at runtime.cc:57\r\n       85: linux_message_hub_t::on_event(int) at message_hub.cc:154\r\n       86: epoll_event_queue_t::run() at epoll.cc:101 (discriminator 2)\r\n       87: linux_thread_pool_t::start_thread(void*) at thread_pool.cc:160\r\n       88: /usr/lib/libpthread.so.0(+0x7314) [0x7fd983994314] at 0x7fd983994314 (/usr/lib/libpthread.so.0)\r\n       89: clone+0x6d at 0x7fd9836d224d (/usr/lib/libc.so.6)\r\nerror: Exiting.\r\n```\r\n\r\nConfigure:\r\n```\r\nmichel@h9:~/projects/rethinkdb-all/rethinkdb$ ./configure --allow-fetch --dynamic all --fetch v8\r\n* Detecting system configuration\r\nBash:                           4.3.33(1)-release\r\nUse ccache:                     no\r\nC++ Compiler:                   GCC 4.9.2 (/usr/bin/c++)\r\nHost System:                    x86_64-unknown-linux-gnu\r\nBuild System:                   Linux 3.17.4-1-ARCH x86_64\r\nCross-compiling:                no\r\nHost Operating System:          Linux\r\nBuild Architecture:             x86_64\r\nC++11:                          ok\r\nPrecompiled web assets:         no\r\nProtobuf compiler:              /usr/bin/protoc\r\npython:                         python 2.7.9\r\nNode.js package manager:        /usr/bin/npm\r\nLESS css:                       external/less_1.6.2\r\nCoffeeScript:                   external/coffee-script_1.7.1\r\nHandlebars:                     external/handlebars_1.3.0\r\nBrowserify:                     external/browserify_3.24.13\r\nbluebird:                       external/bluebird_2.3.2\r\nwget:                           /usr/bin/wget\r\ncurl:                           /usr/bin/curl\r\nGoogle Test:                    external/gtest_1.6.0\r\ntermcap:                        -ltermcap\r\nboost_system:                   -lboost_system\r\nssl:                            -lssl\r\nprotobuf:                       -lprotobuf\r\nv8 javascript engine:           external/v8_3.22.24.17\r\nRE2:                            external/re2_20140111\r\nz:                              -lz\r\ncrypto:                         -lcrypto\r\ncurl:                           -lcurl\r\nmalloc:                         jemalloc\r\njemalloc:                       external/jemalloc_3.6.0\r\nTest protobuf:                  ok\r\nTest boost:                     ok\r\nInstallation prefix:            /usr/local\r\nConfiguration prefix:           /usr/local/etc\r\nRuntime data prefix:            /usr/local/var\r\n* Wrote configuration to config.mk\r\n```\r\n\r\nI didn't get a core file :/"
  , issueState = "closed"
  , issueId = Id 54536873
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }