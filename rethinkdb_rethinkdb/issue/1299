Issue
  { issueClosedAt = Just 2013 (-08) (-16) 22 : 44 : 21 UTC
  , issueUpdatedAt = 2013 (-08) (-22) 00 : 31 : 59 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1299/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1299"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e10c02"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/pr:high"
          , labelName = "pr:high"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 1299
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Crash on filter with non-deterministic default value"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1299"
  , issueCreatedAt = 2013 (-08) (-15) 01 : 25 : 41 UTC
  , issueBody =
      Just
        "While investigating issue #153, I came across the catch statement in `func_t::filter_call(...)` which does `default_filter_val->call()->as_bool()`, which may block if the default_filter_val is non-deterministic.  An example query below will cause the server to crash (as long as any row does not contain the `fake` field).\n\n``` js\nr.table('data').filter(function(row) { return row('fake'); }, { default: r.js('return true') })\n```\n\nThe solution is to move the `call()` call out of the exception handler.\n"
  , issueState = "closed"
  , issueId = Id 18086716
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 48
          , milestoneClosedIssues = 7
          , milestoneDescription = Nothing
          , milestoneTitle = "1.8.1"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/48"
          , milestoneCreatedAt = 2013 (-08) (-22) 00 : 31 : 59 UTC
          , milestoneState = "closed"
          }
  }