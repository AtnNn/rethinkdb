Issue
  { issueClosedAt = Just 2014 (-09) (-12) 19 : 48 : 10 UTC
  , issueUpdatedAt = 2014 (-09) (-16) 05 : 39 : 00 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3045/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3045"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3045
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Callstack overflow in a coroutine"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3045"
  , issueCreatedAt = 2014 (-09) (-12) 17 : 56 : 42 UTC
  , issueBody =
      Just
        "I thought there was an issue for this, but I coudln't find it. On `next`, `debug` mode:\r\n\r\nI was trying a few things in the data explorer, and run accidentally run this query:\r\n```\r\nr.db('test').table('test')\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n  .filter(function(doc) { return doc(\"bar\").eq(\"foo\")})\r\n```\r\n\r\n```\r\nr: Error in src/arch/runtime/thread_pool.cc at line 341:\r\nerror: Callstack overflow in a coroutine\r\nerror: Backtrace:\r\nerror: Fri Sep 12 10:52:46 2014\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:203 (discriminator 1)\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\r\n       4: format_backtrace(bool) at backtrace.cc:198\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83 (discriminator 1)\r\n       6: linux_thread_pool_t::sigsegv_handler(int, siginfo_t*, void*) at thread_pool.cc:341\r\n       7: /usr/lib/libpthread.so.0(+0xf4b0) [0x7ff8aafa14b0] at 0x7ff8aafa14b0 (/usr/lib/libpthread.so.0)\r\n       8: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:18\r\n       9: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       10: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       11: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       12: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       13: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       14: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       15: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       16: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       17: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       18: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       19: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       20: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       21: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       22: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       23: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       24: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       25: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       26: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       27: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       28: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       29: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       30: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       31: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       32: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       33: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       34: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       35: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       36: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       37: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       38: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       39: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       40: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       41: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       42: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       43: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       44: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       45: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       46: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       47: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       48: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       49: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       50: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       51: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       52: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       53: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       54: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       55: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       56: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       57: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       58: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       59: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       60: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       61: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       62: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       63: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       64: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       65: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       66: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       67: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       68: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       69: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       70: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       71: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       72: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       73: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       74: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       75: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       76: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       77: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       78: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       79: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       80: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       81: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       82: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       83: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       84: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       85: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       86: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       87: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       88: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       89: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       90: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       91: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       92: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       93: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       94: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\n       95: ql::filter_term_t::filter_term_t(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:178 (discriminator 6)\r\n       96: counted_t<ql::filter_term_t> make_counted<ql::filter_term_t, ql::compile_env_t*&, ql::protob_t<Term const> const&>(ql::compile_env_t*&, ql::protob_t<Term const> const&) at counted.hpp:127 (discriminator 2)\r\n       97: ql::make_filter_term(ql::compile_env_t*, ql::protob_t<Term const> const&) at seq.cc:346\r\n       98: ql::compile_term(ql::compile_env_t*, ql::protob_t<Term const>) at term.cc:72\r\n       99: ql::op_term_t::op_term_t(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:171 (discriminator 4)\r\n       100: ql::grouped_seq_op_term_t::grouped_seq_op_term_t<ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t>(ql::compile_env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.hpp:161 (discriminator 4)\r\nerror: Exiting.\r\n```"
  , issueState = "closed"
  , issueId = Id 42654025
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }