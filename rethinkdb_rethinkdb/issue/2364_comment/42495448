IssueComment
  { issueCommentUpdatedAt = 2014 (-05) (-07) 23 : 20 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/42495448"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2364#issuecomment-42495448"
  , issueCommentCreatedAt = 2014 (-05) (-07) 23 : 20 : 35 UTC
  , issueCommentBody =
      "> There is an advantage to using at least one outstanding request instead of at most one. It avoids the extra delay when the client is consuming data faster than the server can send it.\r\n\r\nIf the client is consuming data faster than the server can send it, one outstanding request should be enough.\r\n\r\nTime 0: Client: request batch\r\nTime 0 + B: Server: return batch\r\nTime 0 + B + epsilon: Client: request batch\r\nTime 0 + B + (C < B): Client: finishes processing batch\r\nTime 0 + 2B + epsilon: Server: return batch\r\n\r\n(B is the amount of time it takes for the server to produce a batch, C is the amount of time it takes for the client to process a batch, epsilon is network latency.)"
  , issueCommentId = 42495448
  }