IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-17) 23 : 36 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11467335"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/157#issuecomment-11467335"
  , issueCommentCreatedAt = 2012 (-12) (-17) 23 : 36 : 33 UTC
  , issueCommentBody =
      "Python does indeed take an optional base case it throws on an empty stream\r\nand returns the single element from a singleton stream.\r\n\r\nI think I dislike returning NULL when you have an empty stream because it's\r\nusing a value which the function could return under normal circumstances as\r\nan indication of error.\r\n\r\nI could live with having reduce on a single value return that value since\r\nit's basically akin to saying: In the absence of a base the first element\r\nof the stream (if it exists) is used as the base. That's at least a short\r\nenough description it could work in a tutorial.\r\n\r\n\r\nOn Mon, Dec 17, 2012 at 3:24 PM, Michael Lucy <notifications@github.com>wrote:\r\n\r\n> The two languages I know that are dynamic and have reduce are Common Lisp\r\n> and Ruby, and both let you provide an optional base case, but don't require\r\n> it.\r\n>\r\n> irb(main):6685:0> [].reduce(0) {|a,b| a+b}    0                                             irb(main):6686:0> [].reduce {|a,b| a+b}       nil                                           irb(main):6687:0> [1].reduce(0) {|a,b| a+b}   1                                             irb(main):6688:0> [1].reduce {|a,b| a+b}      1                                             irb(main):6689:0> [1, 2].reduce(0) {|a,b| a+b}3                                             irb(main):6690:0> [1, 2].reduce {|a,b| a+b}   3\r\n>\r\n> I don't know how Python does it, but if it's extremely non-Pythonic to\r\n> omit the base case we could just enforce that it's present in the Python\r\n> driver.\r\n>\r\n> I think we should take an optional base case, and have the semantics Bill\r\n> suggested when people don't provide it (returning NULL on an empty stream\r\n> and returning the only element of a one-element stream). This is easier for\r\n> 99% of cases, and also what I expect based on Ruby's reduce.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/157#issuecomment-11466961>.\r\n>\r\n>"
  , issueCommentId = 11467335
  }