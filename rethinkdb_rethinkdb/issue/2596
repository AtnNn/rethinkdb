Issue
  { issueClosedAt = Just 2014 (-06) (-25) 22 : 12 : 48 UTC
  , issueUpdatedAt = 2014 (-06) (-26) 17 : 42 : 08 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2596/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2596"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2596
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 1777134
          , simpleUserLogin = N "mlucy"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/1777134?v=3"
          , simpleUserUrl = "https://api.github.com/users/mlucy"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 4754399
        , simpleUserLogin = N "bigtree3131"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/4754399?v=3"
        , simpleUserUrl = "https://api.github.com/users/bigtree3131"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "group() throwing false error"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2596"
  , issueCreatedAt = 2014 (-06) (-24) 20 : 00 : 45 UTC
  , issueBody =
      Just
        " r.table(myTable).group(field).ungroup().run() throws (<class 'rethinkdb.errors.RqlRuntimeError'>, RqlRuntimeError(u'Grouped data over size limit 100000.  Try putting a reduction (like `.reduce` or `.count`) on the end.') but r.table(myTable).group(field).map(lambda x: [x]).reduce(lambda x,y: x + y).ungroup().run() does not throw... The grouped data is at most 31 docs per group and there are roughly 25K distinct groups... To add some context, I am filtering a massive table of 'SQL'-like rows (72M) of daily stock prices and then grouping by ticker... For example r.table(myLargeTable).filter(lambda x: (x['yr'] == 2014) & (x['mon'] == 1)).group('ticker').ungroup() throws the error...However, r.table(myLargeTable).filter(lambda x: (x['yr'] == 2014) & (x['mon'] == 1)).group('ticker').map(lambda x: [x]).reduce(lambda x,y: x+y).ungroup() runs fine and produces the expected output."
  , issueState = "closed"
  , issueId = Id 36420209
  , issueComments = 11
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 174
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }