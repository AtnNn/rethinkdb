IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-04) 23 : 32 : 41 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/65723371"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3408#issuecomment-65723371"
  , issueCommentCreatedAt = 2014 (-12) (-04) 23 : 32 : 41 UTC
  , issueCommentBody =
      "@deontologician: They share keys values but not object structure.  If you merge an object with 1000 keys and an object with 1 key, we create a new object with 1001 keys.  We don't copy any of the keys or values, which are reference counted, but we do have to build up a new 1001-key object structure.  If we used functional objects, we could re-use part of the old object structure and do O(log(1000)) work.  If we were able to detect when it's safe to destructively modify objects, we could just patch the big object and do O(1) work."
  , issueCommentId = 65723371
  }