Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 18 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3861/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3861"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:packaging"
          , labelName = "cp:packaging"
          }
      , IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:web-ui"
          , labelName = "cp:web-ui"
          }
      ]
  , issueNumber = 3861
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Make webui a standalone application"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3861"
  , issueCreatedAt = 2015 (-03) (-02) 22 : 46 : 07 UTC
  , issueBody =
      Just
        "Following a brief discussion on slack, we should investigate making the webui a standalone application, which the server might spawn as a subprocess for convenience.\n\nOverall pros:\n1. Remove special http handling code from the server\n2. Remove http backend from the js -driver\n3. Make it easier to add functionality like websockets etc\n4. The UI needn't formulate its queries as reql, it could just hit a websocket endpoint for a specific query.\n5. The webui could stand as a fairly extensive example of a realtime app built on rethinkdb that:\n   - makes use of almost all of its capabilities\n   - is architected like a user would actually architect their app (vs. special pleading that only the webui should use the http interface)\n   - is kept up to date by necessity, vs. example code that bitrots over time\n6. Might offer more flexibility, spinning up the webui server when necessary on whatever machine you wish, vs. needing to open the webui port on the server machine.\n\nOverall cons:\n1. Possible the server & webui could get out of sync\n2. Building the server backend in node or something would add large runtime dependencies.\n3. If backend is in python or something non-js it would need some extra logic to parse the queries coming in through the data explorer.\n\nPros to backend in python:\n1. we already have a python runtime dependency (I believe), so a small server wouldn't be a large runtime dependency\n\nPros to a Node backend:\n1. Could hack around having to parse js on the frontend for the data explorer by being a passthrough to the backend js driver.\n2. The majority of our users are using node.js\n"
  , issueState = "open"
  , issueId = Id 59564529
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }