IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-13) 18 : 39 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/58935734"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2156#issuecomment-58935734"
  , issueCommentCreatedAt = 2014 (-10) (-13) 18 : 39 : 42 UTC
  , issueCommentBody =
      "@wojons That sounds like parallel evaluation of array elements is what you need? (internally that is evaluating the arguments to a MAKE_ARRAY term in parallel).\r\n\r\nIt sounds like we would still have to find a criteria for when that evaluation should be parallelized. If you're constructing an array from constants for example parallelizing that would likely just increase the overhead and make the query slower. Maybe there's some really simple criteria that magically does the right thing (e.g. only spawn a new evaluation coroutine if the current one is actually blocking)?\r\n\r\n@srh Given the existing work you've done on this, do you think that would be something that's easy to do and work well?"
  , issueCommentId = 58935734
  }