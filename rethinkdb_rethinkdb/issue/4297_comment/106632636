IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-29) 00 : 00 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/106632636"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4297#issuecomment-106632636"
  , issueCommentCreatedAt = 2015 (-05) (-29) 00 : 00 : 18 UTC
  , issueCommentBody =
      "@elfring -- I'm a little confused by your question.  My understanding of the C++ standard is that a terminate handler is called whenever exception handling has to be aborted, e.g. because there is no catch handler available.  So we aren't depending on a particular compiler implementation, and there are theoretically other situations where the terminate handler could be called that we would want to handle even if we explicitly caught exceptions at the top of all coroutines."
  , issueCommentId = 106632636
  }