IssueComment
  { issueCommentUpdatedAt = 2014 (-04) (-08) 19 : 26 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/39890935"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/281#issuecomment-39890935"
  , issueCommentCreatedAt = 2014 (-04) (-08) 19 : 26 : 43 UTC
  , issueCommentBody =
      "> Getting and releasing a connection is definitely a lower-level API, but people still need it in case they want to do multiple things on one connection. \r\n\r\nThe only use case I know when using the same connection is useful is when you want to do a write and then a read \r\n- without waiting the write to be acknowledge\r\n- but where the read is going to see the write\r\n\r\nI think it's somehow a really advanced case.\r\n\r\nAlso that means that the server hold a read queries, and I'm not even sure we want to do that. \r\nIf the write fails, the read is still not going to see the write, and this should be catch earlier on the client I think.\r\n\r\nThere may be other use cases though. If someone has one, I would be interested to hear about it."
  , issueCommentId = 39890935
  }