IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-09) 22 : 34 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 690517
        , simpleUserLogin = N "mike-marcacci"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/690517?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-marcacci"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/66371273"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/281#issuecomment-66371273"
  , issueCommentCreatedAt = 2014 (-12) (-09) 22 : 34 : 32 UTC
  , issueCommentBody =
      "While my main reason for using a connection pool is to send parallel queries (which could be handled by #3296), there are a few other features that I do like. The main one is similar to what @chrisvariety mentioned: It's very difficult to pass a possibly closed connection around, checking it wherever it's used. \r\n\r\nMy preference, though, is to pass a pool to `.run(pool)` over some magic global. I think this would give the ideal amount of flexibility and ease: one could keep different pools with different types of connections (with different durability, default db, etc), and be confident that the pool will eventually return a viable connection to the query. Of course, this need not be an actual pool of connections (assuming we can run parallel queries), but it would ideally act like one."
  , issueCommentId = 66371273
  }