IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-16) 22 : 15 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 706854
        , simpleUserLogin = N "AtnNn"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/706854?v=3"
        , simpleUserUrl = "https://api.github.com/users/AtnNn"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/49235179"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/281#issuecomment-49235179"
  , issueCommentCreatedAt = 2014 (-07) (-16) 22 : 15 : 23 UTC
  , issueCommentBody =
      "The above API does not seem to guarantee that a read will see previous writes (because they could have been done on a different connection). Also, it is often a good idea not to return connections to the pool, for example when a query returns a cursor or a change feed.\r\n\r\nI would prefer an operation that explicitly removes single connections form the pool, that would work something like this:\r\n\r\n```python\r\npool = r.connectionPool(...)\r\nwith pool.get() as conn:\r\n   query.run(conn)\r\n```\r\n\r\n```javascript\r\npool.withConnection(function(conn, putBack){\r\n  query.run(conn, function(err, res){\r\n    putBack();\r\n  })\r\n});\r\n```"
  , issueCommentId = 49235179
  }