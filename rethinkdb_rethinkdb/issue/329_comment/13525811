IssueComment
  { issueCommentUpdatedAt = 2013 (-02) (-13) 23 : 55 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/13525811"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/329#issuecomment-13525811"
  , issueCommentCreatedAt = 2013 (-02) (-13) 23 : 55 : 34 UTC
  , issueCommentBody =
      "This is actually really easy to do once we have explain (#175), which we've since decided to call trace. Basically the underlying implementation for that works by carrying along this little data structure as you execute a command and jotting down little notes when events in the system occur like \"loaded a block\" or \"sent 10 bytes over the network.\" We can add a log function like you describe and all it will do is put this value in the explain structure. Then when we render the explain you'll be able to see your log messages displayed right next to the parts of the query they occurred in.\r\n\r\nWe could also add something to just grab the log messages and display them serially if that proved to be a better presentation."
  , issueCommentId = 13525811
  }