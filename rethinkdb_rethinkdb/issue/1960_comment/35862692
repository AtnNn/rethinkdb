IssueComment
  { issueCommentUpdatedAt = 2014 (-02) (-24) 07 : 19 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/35862692"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1960#issuecomment-35862692"
  , issueCommentCreatedAt = 2014 (-02) (-24) 07 : 19 : 54 UTC
  , issueCommentBody =
      "> I'm a fan of \"Don't make any global decisions, and instead make the decision on case by case basis.\" Different cases come with very different trade-offs between our costs for maintaining compatibility (which are ultimately also our users' costs, since we are going to ship more slowly), and our users' costs for keeping up with the changes.\r\n\r\nWe can't apply a blanket decision to cases with different trade-offs, but I think there are classes of cases that have very similar trade-offs. Here is what's going to happen if we don't sniff those out and decide what to do about each case:\r\n\r\n* The same debate will happen over and over again. It'll waste everyone's time, and we won't ship things as quickly as we could. (This one worries me the most -- bikeshedding is death).\r\n* We'll arrive at different decisions for cases that have no discernibly different trade-offs and end up with an inconsistent product.\r\n* We won't be able to communicate a compatibility policy to our users. People will ask \"hey, is the API backwards compatible?\" Our answer (\"it depends\") is really bad.\r\n\r\n> This worked well for a while, but then it turned out that backporting security updates to really old versions of Firefox was more work than is practicable. So Firefox is now kept in sync with the upstream versions, and breaks compatibility all the time.\r\n\r\nWe can have exceptions when they make sense. That doesn't mean there isn't a useful general principle we can sniff out."
  , issueCommentId = 35862692
  }