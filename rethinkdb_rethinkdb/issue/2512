Issue
  { issueClosedAt = Just 2014 (-06) (-10) 19 : 48 : 35 UTC
  , issueUpdatedAt = 2014 (-06) (-10) 21 : 29 : 48 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2512/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2512"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2512
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "`r.http` POST Content-Type may be too magical"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2512"
  , issueCreatedAt = 2014 (-06) (-06) 03 : 26 : 37 UTC
  , issueBody =
      Just
        "Currently when doing a POST request, the user may provide two different types to the `data` optarg: an object or a string.\r\n\r\nObject - the object will be converted to a form-encoded string (with any nested objects printed to JSON), and the `Content-Type` will be set to `application/x-www-form-urlencoded`.  It is necessary to have this behavior because many POST requests will need to use this format, and expecting users to form-encode their own data is a huge pain.\r\n\r\nString - the string will be written directly to the body of the request with no encoding step.  The `Content-Type` will still default to `application/x-www-form-urlencoded`.\r\n\r\nIn either case, the `Content-Type` may be overridden by the user providing a value in the `header` optarg.\r\n\r\n\r\nI believe a common use-case will be that users want to write JSON data in a POST request, so they will do something like:\r\n```py\r\nr.http(url, method='POST', data=row.coerce_to('string'))\r\n```\r\n\r\nThis works in the general case, but if they omit `Content-Type`, the query is a bit off, and may be rejected by some services.  I suggest rejecting POST requests made with `data=STRING` unless `Content-Type` is explicitly specified in the `header` optarg.\r\n\r\nThere is another (slight) problem with this use-case, which is that `row.coerce_to('string')` is not the same as `row.to_json()`, although they are similar.  There are some corner cases where the output is not JSON.\r\n\r\nOpening this issue for comments first, to see if we can get a consensus.  Pinging @neumino and @coffeemug."
  , issueState = "closed"
  , issueId = Id 35116476
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 18
          , milestoneClosedIssues = 180
          , milestoneDescription =
              Just
                "These feature requests, bugs and pull requests have been acknowledged, but will not be fixed."
          , milestoneTitle = "wontfix"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/18"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 24 UTC
          , milestoneState = "closed"
          }
  }