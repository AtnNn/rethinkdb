IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-02) 19 : 06 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20368178"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1094#issuecomment-20368178"
  , issueCommentCreatedAt = 2013 (-07) (-02) 19 : 06 : 18 UTC
  , issueCommentBody =
      "So one thing that we should consider is what happens with errors like #1095 in the other operations. Here's what I think we should do:\r\n\r\n`without`:\r\n```\r\nr.expr({\"foo\" : 1}).without({\"foo\" : \"bar\"})\r\n>>> {\"foo\" : 1}\r\n```\r\nThis seems the most analogous to what `pluck` does and is probably what people want since saying `without({\"foo\" : \"bar\"})` will leave the key \"foo\" in the map in the non error case.\r\n\r\n`has_fields`:\r\nThis one seems easier since we're returning just returning whether or not we match. For example:\r\n```\r\nr.expr({\"foo\" : 1}).has_fields({\"foo\" : \"bar\"})\r\n>>> false\r\n```\r\n\r\nThe rest of these I'm pretty sure have an obvious command that they behave the same as in this regard. `orderby` and `group_by` are like `pluck` and `with_fields` is a combination of `has_fields` and `pluck`."
  , issueCommentId = 20368178
  }