Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 19 : 34 : 31 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3243/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3243"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 3243
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Non-ReQL proposal: allow specifying any global optarg in `connect`"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3243"
  , issueCreatedAt = 2014 (-10) (-24) 05 : 00 : 30 UTC
  , issueBody =
      Just
        "We're accumulating quite a few global optargs that could be passed to run, and in many cases doing it requires the user to thread them through all of their code. It would be really nice if we allowed passing these to `r.connect`, as it's the easiest function for the user to abstract, and they can pass their settings only once. E.g.:\n\n``` py\nconn = r.connect(durability='soft', refer_by='uuid')\n```\n\nOr in JavaScript:\n\n``` js\nr.connect({ host: 'localhost',\n            port: 28015,\n            durability: 'soft',\n            refer_by='uuid'\n          },\n          function(err, conn) { ... })\n```\n\nOne question is whether we want to intersperse global reql optargs with the optargs already defined in `connect` (e.g. `auth_key`) like I did above, or whether we want to add an optarg to `connect` (e.g. `config`) that takes a json object of reql optargs.\n\n(Note, I ran into multiple people that asked for it, and I wanted this myself on many occassions)\n"
  , issueState = "open"
  , issueId = Id 46704575
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }