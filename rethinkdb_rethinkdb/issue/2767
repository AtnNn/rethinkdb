Issue
  { issueClosedAt = Just 2014 (-08) (-04) 16 : 49 : 26 UTC
  , issueUpdatedAt = 2014 (-08) (-04) 16 : 49 : 26 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2767/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2767"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e11d21"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/_release_holder"
          , labelName = "_release_holder"
          }
      ]
  , issueNumber = 2767
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 258437
          , simpleUserLogin = N "srh"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/258437?v=3"
          , simpleUserUrl = "https://api.github.com/users/srh"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Sometimes secondary index functions are getting evaluated with global optargs present."
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2767"
  , issueCreatedAt = 2014 (-07) (-26) 05 : 11 : 22 UTC
  , issueBody =
      Just
        "Secondary index function evaluation should not have any global optargs present (or if they did, we'd want the global optargs captured at the secondary index creation -- but that's not how things work right now).\r\n\r\nRight, now, at *insertion* things are fine -- secondary index functions are evaluated without the global optargs present (according to the testing I've done).  That's why this is a low priority, v1.14 bug.\r\n\r\nHowever, we can see that queries like `table.get_all([2], index='foo').run(right_bound='closed')` (with a contrived secondary index function `lambda x: x.slice(1,2)`) are at some point rerunning the secondary index function in the environment with the global optargs present, affecting their evaluation.\r\n\r\nI'm assigning this to myself because I'm already touching some of the code in question (in rget_cb_t::handle_pair)."
  , issueState = "closed"
  , issueId = Id 38806010
  , issueComments = 11
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 71
          , milestoneClosedIssues = 113
          , milestoneDescription = Just ""
          , milestoneTitle = "1.14"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/71"
          , milestoneCreatedAt = 2014 (-06) (-11) 22 : 31 : 05 UTC
          , milestoneState = "closed"
          }
  }