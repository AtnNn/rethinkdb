IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-20) 05 : 13 : 22 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 572196
        , simpleUserLogin = N "stuartpb"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/572196?v=3"
        , simpleUserUrl = "https://api.github.com/users/stuartpb"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/75190335"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2975#issuecomment-75190335"
  , issueCommentCreatedAt = 2015 (-02) (-20) 05 : 06 : 37 UTC
  , issueCommentBody =
      "Or, heck, even just let functions like `dbCreate` / `tableCreate` / `indexCreate` work with `.default()` (or a function like it with different name to signify that it works in reverse), taking the expression to return when the item in question *does* exist:\r\n\r\n```js\r\nr.dbCreate(dbName).default()\r\n\r\n// which would just be shorthand for:\r\n\r\nr.dbCreate(dbName).default({config_changes: [], dbs_created: 0})\r\n\r\n// although you could conceivably want this instead:\r\n\r\nr.dbCreate(dbName).default(r.db(dbName).config)\r\n```"
  , issueCommentId = 75190335
  }