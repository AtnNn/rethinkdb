IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-20) 23 : 21 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/104069887"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2975#issuecomment-104069887"
  , issueCommentCreatedAt = 2015 (-05) (-20) 23 : 21 : 52 UTC
  , issueCommentBody =
      "@eliaslevy Tim just opened this issue https://github.com/rethinkdb/rethinkdb/issues/4251 which sounds like it will be interesting for your use case.\r\n\r\nI don't think it's necessary that table management follows the same consistency and availability guarantees as the data itself in general. I think in many scenarios a combination of different trade-offs in different places can be the better solution compared to a system that's either CP or AP for both of these aspects."
  , issueCommentId = 104069887
  }