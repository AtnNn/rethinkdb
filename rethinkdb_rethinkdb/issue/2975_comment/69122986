IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-08) 01 : 31 : 30 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 265071
        , simpleUserLogin = N "kofalt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/265071?v=3"
        , simpleUserUrl = "https://api.github.com/users/kofalt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/69122986"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2975#issuecomment-69122986"
  , issueCommentCreatedAt = 2015 (-01) (-08) 01 : 31 : 20 UTC
  , issueCommentBody =
      "My applications currently run various `db_create` + `table_create` calls on boot, ignoring errors if it is an 'already exists' error, to idempotently set the required DB state. Since I execute these commands one at a time, it sounds like I'm fine unless I boot multiple app server nodes at the same time, which is not exactly an escoteric use case.\r\n\r\nI assert that the failure mode of two tables with the same name would be pretty confusing / catastrophic, thus I tentatively support cluster coordination for creation. The alternative being punting environment consistency to scripts the users write. I'm not (currently) running my own Zookeeper :/"
  , issueCommentId = 69122986
  }