IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-20) 05 : 04 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 572196
        , simpleUserLogin = N "stuartpb"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/572196?v=3"
        , simpleUserUrl = "https://api.github.com/users/stuartpb"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/75188913"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2975#issuecomment-75188913"
  , issueCommentCreatedAt = 2015 (-02) (-20) 04 : 43 : 43 UTC
  , issueCommentBody =
      "I don't really feel it's necessary, though, since the `branch` syntax isn't *that* much more bloated for the most-common case (which is often abstracted out of sight anyway), and it's also much more amenable to tweaking for slightly-less-obvious cases (different create condition, different failure behavior...).\r\n\r\nI mean, if you want to add an optarg for this specific error, that's fine, but I feel like it'd be better to just have some kind of `r.pcall(try,else)` wrapper construct that could make it so *any* potentially erroneous query can be substituted for another value (I'm calling it `pcall` instead of the more obvious `catch` so as to avoid conflict with rethinkdbdash-style thenable-promise-everywhere methods)."
  , issueCommentId = 75188913
  }