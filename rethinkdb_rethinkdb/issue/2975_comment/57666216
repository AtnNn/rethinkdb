IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-02) 17 : 27 : 44 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/57666216"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2975#issuecomment-57666216"
  , issueCommentCreatedAt = 2014 (-10) (-02) 17 : 27 : 44 UTC
  , issueCommentBody =
      "If we implement this, we should make sure that calling `tableCreate({conflict: \"ignore\"})` on a table that already exists at least waits until the table is available on the parsing node. So it wouldn't become a no-op, but something like `tableWait()` in case of a conflict.\r\n\r\nGenerally I'm not sure if it's really a good idea to offer this option given the race condition described by @timmaxw."
  , issueCommentId = 57666216
  }