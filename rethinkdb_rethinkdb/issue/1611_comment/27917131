IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 21 : 52 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27917131"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1611#issuecomment-27917131"
  , issueCommentCreatedAt = 2013 (-11) (-06) 21 : 51 : 11 UTC
  , issueCommentBody =
      "I don't have much to add here.  I agree with @mglukhovsky and @jdoliner that being able to run a query, see that it's slow, and then expand a tab or something to see an easy-to-understand profile is amazing.  That's the kind of feature that makes people ask why none of their other tools do it.\r\n\r\nI think that premature optimization is less of a problem than users not understanding the performance of the queries they write.  We get a lot more people asking questions about why things are slow than complaining that their ReQL code has become unmaintainable.  (In general, premature optimization is a problem when you're writing very complicated logic; most ReQL queries aren't that complicated.)  Anything we can do that makes it easier for people to understand why certain things are slow will make writing ReQL code much more pleasant for them.\r\n\r\n@jdoliner -- how long would it take to be reasonably confident that profiling won't slow queries down much?\r\n\r\n(Also, even if we do turn it on by default, I think we need to give people a way to turn it off in case they end up in a situation we didn't consider where it's super slow.)"
  , issueCommentId = 27917131
  }