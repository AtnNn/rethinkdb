IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 21 : 40 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27916233"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1611#issuecomment-27916233"
  , issueCommentCreatedAt = 2013 (-11) (-06) 21 : 40 : 51 UTC
  , issueCommentBody =
      "I really don't like the idea of adding more friction to profiling to dissuade premature optimization. I actually think being able to quickly see profiling results let's people make the most informed decision about whether or not to profile. I designed this tool to automatically do what I've been doing by hand with a bunch of users. I'm constantly getting questions from people of the form: \"Is there anything worth optimizing in this query?\" then they go off and tweak it a bit more and come back to me with the same question. The profiler will automatically tell you if there's anything worth optimizing and how exactly to optimize it.\r\n\r\nIt's immediately obvious to me that this is a killer feature, users are actually willing to call me on the phone to have me on the line to explain the performance ramifications of each line of a query as they write it. I feel very strongly that this really changes how it feels to use the product. I also think it jibes really well with how we're positioning ourselves as a database for realtime analytics.\r\n\r\n> The issue #1613 (and potential others we haven't caught) arbitrarily change the result set from constant to linear\r\nCould you clarify this? As far as I know every profile is always linear size with respect to the size of the query. Have you ever seen a constant size profile?\r\n\r\nI think the arguments about it not doing as much as it could are valid but draw a spurious conclusion. I'd be perfectly happy to wait on integrating this until we have the time to make a working visualizer. But I don't see how this is an argument for having the profiler be an entirely separate flow. I think users are going to have much higher expectations if they click a `Profiler` button and enter a different flow than if they just have a link next to the duration display to see extended information. And if you're worried about it being too distraction while doing too little is only exacerbated by breaking in to a separate flow.\r\n\r\nI'm very strongly opposed to making this a separate flow. I think it really weakens the feature."
  , issueCommentId = 27916233
  }