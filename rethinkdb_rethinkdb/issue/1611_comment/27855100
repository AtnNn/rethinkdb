IssueComment
  { issueCommentUpdatedAt = 2013 (-11) (-06) 09 : 35 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/27855100"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1611#issuecomment-27855100"
  , issueCommentCreatedAt = 2013 (-11) (-06) 09 : 35 : 24 UTC
  , issueCommentBody =
      "I really think having these flows integrated is incredibly useful. Imagine I'm building up a complicated query in the data explorer. I think the workflow users are going to get into if we nail this view is something like this:\r\n\r\n- chain something on to the end and run it\r\n- check to see if the results are what I expect\r\n- check to see if the overhead of this operation is higher than I expect\r\n- if it is I head over to the profile tab and see if anything lights up, perhaps accept its optimization suggestions.\r\n- rinse and repeat\r\n\r\nHaving to switch flows each time you want to profile your query adds friction. Even if all it takes is one extra click and one extra round trip to the server (which could actually be pretty costly) it's going to change how much fatigue you feel using it because a full-time ReQL developer might have to do this several hundred times a day. It's like the difference between having to recompile your program to see results and being able to just keep a REPL open and make changes live. It doesn't seem like a big difference until you actually use it and realize that this elevates the feature from something you use once per query to something you use once per line of the query."
  , issueCommentId = 27855100
  }