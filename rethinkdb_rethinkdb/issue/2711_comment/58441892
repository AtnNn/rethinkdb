IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-08) 23 : 04 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/58441892"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2711#issuecomment-58441892"
  , issueCommentCreatedAt = 2014 (-10) (-08) 23 : 04 : 14 UTC
  , issueCommentBody =
      "I think there's no good reason for keeping this open, as the issue gives no motivation for why we should change this (I don't think #2485 has anything to do with this. There the problem was that the server could only process one query at a time, not that it was guaranteeing a specific order).\r\n\r\nThe reason in more detail:\r\nAs far as I understand, removing the guarantee would allow us to\r\n- execute multiple queries from the same connection in parallel on the server, though that would need more work. (also not sure how much benefit it would have in combination with connection pools #281)\r\n- have connection pools in JavaScript behave more like normal connections\r\n\r\nFor the first point, I think it would make more sense to discuss lifting this guarantee once parallelization on the server is something we are actually considering doing.\r\n\r\nAs far as the second point is concerned, we can decide whether to provide this guarantee for connection pools independently of this. The server providing the guarantee for individual connections does not stop us from not providing it in connection pools.\r\n\r\nAs always, feel free to re-open it if anyone thinks that the issue is still relevant (or needs more discussion)."
  , issueCommentId = 58441892
  }