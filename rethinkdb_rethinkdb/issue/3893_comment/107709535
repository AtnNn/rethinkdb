IssueComment
  { issueCommentUpdatedAt = 2015 (-06) (-01) 21 : 01 : 20 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/107709535"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3893#issuecomment-107709535"
  , issueCommentCreatedAt = 2015 (-06) (-01) 21 : 01 : 20 UTC
  , issueCommentBody =
      "`emergency_repair=False|'unsafe'|'catastrophic'`\r\nThat sounds generally fine, though I would suggest two modifications:\r\n* `'with_data_loss'` instead of `'catastrophic'` as the third value. That is more explicit as to what that setting actually does.\r\n* call the parameter `override` instead of `emergency_repair`, for the simple reason that I think it reads better in case the value is `'unsafe'`. So it would be `override=False|'unsafe'|'with_data_loss'`\r\n\r\nThere might be a better term for `'unsafe'` as well, but I think `'unsafe'` is probably fine (`'with_rollback'`/`'allow_rollback'` maybe because it might roll back acked writes?).\r\nIt's also not relevant if we're only going to support `'with_data_loss'` for now.\r\n\r\nOnly allowing `'with_data_loss'` overrides sounds like a reasonable simplification for this. I'll think about it a little bit more, but I tend to think that it's fine for the first version."
  , issueCommentId = 107709535
  }