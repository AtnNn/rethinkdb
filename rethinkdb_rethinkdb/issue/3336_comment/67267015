IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-17) 02 : 06 : 19 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 2413238
        , simpleUserLogin = N "x10ba"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/2413238?v=3"
        , simpleUserUrl = "https://api.github.com/users/x10ba"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/67267015"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3336#issuecomment-67267015"
  , issueCommentCreatedAt = 2014 (-12) (-17) 02 : 06 : 19 UTC
  , issueCommentBody =
      "i see a need for this, primarily relating to data interchange between entities, and where, for whatever reason: [legal, code based, political, ignorance, hubris], the admin can't shard, replicate or script a 'move' of data from one db to another; even-though the entities share the same local.h7g.r.\r\n\r\n// this.app references db.('mine') whereas that.app references db.('hers');\r\ndb.tableMove('ahem', 'hers', {safe: 1});\r\n// where tableMove([tableName, destination DB, {safe: make a copy, delete the table}]);\r\n// the result would be:\r\n// initial state = db.mine.ahem, db.hers;\r\n// {safe 0}: [db.mine.ahem, db.hers.ahem];\r\n// {safe: 1}: db.mine; db.hers.ahem\r\n// elseif: [prototype, replication, rights, etc]\r\n\r\nmight just be semantics and JSON at some point, but if it was fast, accurate and had a good log/hashIndex and was part of teh standard API ..."
  , issueCommentId = 67267015
  }