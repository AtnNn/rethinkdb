IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-23) 21 : 12 : 33 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/49936357"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2738#issuecomment-49936357"
  , issueCommentCreatedAt = 2014 (-07) (-23) 21 : 12 : 04 UTC
  , issueCommentBody =
      "So, it appears this situation is slightly more complicated.  The involved function in the given backtrace (`namespace_repo_t::on_namespaces_change()`) only uses the `blueprint` field from the semilattice.  Blueprints are generated after every metadata change, so if you have a ton of changes at once, it is rather likely that the blueprint could get in conflict.\r\n\r\nThis still doesn't explain why there is no issue for the conflict.  One last thing you can try to resolve the problem is running `touch` in `rethinkdb admin` to force regeneration of the blueprints."
  , issueCommentId = 49936357
  }