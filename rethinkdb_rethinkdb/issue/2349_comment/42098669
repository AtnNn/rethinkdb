IssueComment
  { issueCommentUpdatedAt = 2014 (-05) (-03) 07 : 37 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/42098669"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2349#issuecomment-42098669"
  , issueCommentCreatedAt = 2014 (-05) (-03) 07 : 35 : 27 UTC
  , issueCommentBody =
      "About what @srh wrote:\r\n```\r\nvar query = r.table('test').filter(r.row('age').gt(5)).filter(r.row('age').lt(100)); // a big query\r\n\r\nquery.count().run().then(...).error(...);\r\nquery.run().then(...).error(...);\r\n```\r\n\r\nThis currently works in both drivers.\r\n\r\nThere is a small difference though. The official driver build the query object only when you call `run`, so in the previous example the query is built twice (since it doesn't cache the query object).\r\n\r\nIn `rethinkdbdash`, the query is build step by step every time you call a method on it, so in the previous example the query is built \"once\".\r\n\r\nBut in both cases, we still have to serialize the query object with protobuf which is the most expensive operation (that may be change with 1.13 -- but I haven't benchmark anything yet)."
  , issueCommentId = 42098669
  }