IssueComment
  { issueCommentUpdatedAt = 2014 (-10) (-28) 18 : 02 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/60802159"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3245#issuecomment-60802159"
  , issueCommentCreatedAt = 2014 (-10) (-28) 18 : 02 : 24 UTC
  , issueCommentBody =
      "@gotlium Oh, you made it look like your results here https://github.com/rethinkdb/rethinkdb/issues/3245#issuecomment-60509206 were without MySQL's query cache. But in truth you had modified the queries from my benchmark to use the cache as far as I can see. That explains why you got so much better numbers for MySQL in the whole-table group query.\r\nNote that using the query cache in a benchmark like the group one makes the measurement pointless. You are comparing MySQL running the query 1 time to RethinkDB running it 10 times.\r\n(I know RethinkDB is still slower even if you do it fairly and you use a strict schema, but by a much smaller margin).\r\n\r\nAlso to be frank I don't understand why you are saying that we are not taking this seriously. Sorry if you got that impression. I followed your suggestions and went through some lengths to understand your results (see https://github.com/rethinkdb/rethinkdb/issues/3245#issuecomment-60527469). Your benchmark has helped us identify some areas that need further investigation and improvement, and I want to thank you for your contribution."
  , issueCommentId = 60802159
  }