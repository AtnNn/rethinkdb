IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-08) 23 : 25 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20643612"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1147#issuecomment-20643612"
  , issueCommentCreatedAt = 2013 (-07) (-08) 23 : 24 : 45 UTC
  , issueCommentBody =
      "> What's returned by: `[\"fo\" ,\"o\"].coerceTo('string')`\r\n\r\nErr, I didn't think of this. The obvious option is `'foo'`, though introduction of this edge case suggests others like `['f', 1, 'o']` which may or may not throw a wrench into this proposal.\r\n\r\n> Currently `r.expr(['f', 'o', 'o']).coerceTo('string')` will print it as JSON.\r\n\r\nErr. May be we shouldn't do this then. People can just call `reduce` instead, which seems like a sufficient workaround."
  , issueCommentId = 20643612
  }