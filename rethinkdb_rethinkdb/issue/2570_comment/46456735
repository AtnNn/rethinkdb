IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-18) 16 : 07 : 47 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/46456735"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2570#issuecomment-46456735"
  , issueCommentCreatedAt = 2014 (-06) (-18) 16 : 07 : 47 UTC
  , issueCommentBody =
      "The `connect` method returns a promise if you don't provide a callback.\r\n(Note: It's a promise, not a connection, so you probably don't want to call it `conn`).\r\n\r\n\r\nSince it's a promise, you can already do something like\r\n\r\n```js\r\nvar connection;\r\nr.connect({db: \"marvel\"}).then(function(conn) {\r\n  connection = conn;\r\n  return r.table(\"marvel\").run(conn)\r\n}).then(function(cursor) {\r\n  return cursor.toArray()\r\n}).then(function(results) {\r\n  connection.close();\r\n  // do something with result\r\n}).error(function(error) {\r\n  if (connection) connection.close();\r\n  // do something with error\r\n})\r\n```\r\n\r\nThere was a discussion of letting run handle a promise (see https://github.com/rethinkdb/rethinkdb/issues/1395#issuecomment-40549752) but it seems like a bad idea to me, you shouldn't use a promise like a \"future\""
  , issueCommentId = 46456735
  }