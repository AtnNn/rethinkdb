IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-18) 21 : 13 : 14 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 123822
        , simpleUserLogin = N "vvo"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/123822?v=3"
        , simpleUserUrl = "https://api.github.com/users/vvo"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/46494991"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2570#issuecomment-46494991"
  , issueCommentCreatedAt = 2014 (-06) (-18) 21 : 13 : 14 UTC
  , issueCommentBody =
      "> I thought that you could call then only once a promise, but I just tried and it's not the case, you can call then multiple times. Looking at the specs (2.2.6) it's expected.\r\n\r\nYup I thought you knew that because without being a promise expert I learned that our use case is one of the goals of promises: creating an object that once it will be resolved, will always be resolved.\r\n\r\nSo at first connect it will connect and next connections will reuse the resolved promise.\r\n\r\n> There is one last little things that I'm not sure about.\r\n> If you do something like\r\n> \r\n> var c = r.connect();\r\n> setImmediate(function() { // or any async operation\r\n>    query.run(c)\r\n> })\r\n\r\nMaybe you can just test for it and see if that's really a case that can happen."
  , issueCommentId = 46494991
  }