Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-07) 17 : 36 : 50 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5359/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5359"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:hygiene"
          , labelName = "tp:hygiene"
          }
      ]
  , issueNumber = 5359
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "order_token_t has different serialization in debug and release mode"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5359"
  , issueCreatedAt = 2016 (-02) (-04) 22 : 28 : 18 UTC
  , issueBody =
      Just
        "This makes mixed debug/release mode clusters crash under certain operations.\n\nFor example I got a crash like this:\n\n```\nerror: Error in src/rpc/mailbox/mailbox.cc at line 118:\nerror: Guarantee failed: [!dest.is_nil()] \nerror: Backtrace:\naddr2line: addr2line: 'rethinkdb': No such file'rethinkdb': No such file\n\nerror: Thu Feb  4 14:22:05 2016\n\n       1 [0xb03ea3]: format_backtrace(bool) at 0xb03ea3 (rethinkdb)\n       2 [0xda6664]: report_fatal_error(char const*, int, char const*, ...) at 0xda6664 (rethinkdb)\n       3 [0xa35656]: send(mailbox_manager_t*, raw_mailbox_t::address_t, mailbox_write_callback_t*) at 0xa35656 (rethinkdb)\n       4 [0xbca000]: remote_replicator_client_t::on_write_async(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&) at 0xbca000 (rethinkdb)\n       5 [0xbcaaf9]: std::_Function_handler<void (signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>), std::_Bind<std::_Mem_fn<void (remote_replicator_client_t::*)(signal_t*, write_t&&, state_timestamp_t, order_token_t, mailbox_addr_t<void ()> const&)> (remote_replicator_client_t*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>, std::_Placeholder<4>, std::_Placeholder<5>)> >::_M_invoke(std::_Any_data const&, signal_t*, write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>) at 0xbcaaf9 (rethinkdb)\n       6 [0xbcc514]: mailbox_t<void (write_t, state_timestamp_t, order_token_t, mailbox_addr_t<void ()>)>::read_impl_t::read(read_stream_t*, signal_t*) at 0xbcc514 (rethinkdb)\n       7 [0xa34bf0]: rethinkdb() [0xa34bf0] at 0xa34bf0 ()\n       8 [0xa34d93]: rethinkdb() [0xa34d93] at 0xa34d93 ()\n       9 [0xa11e2e]: coro_t::run() at 0xa11e2e (rethinkdb)\nerror: Exiting.\nTrace/breakpoint trap (core dumped)\n```\n"
  , issueState = "open"
  , issueId = Id 131492098
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }