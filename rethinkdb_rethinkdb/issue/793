Issue
  { issueClosedAt = Just 2013 (-05) (-13) 20 : 21 : 42 UTC
  , issueUpdatedAt = 2013 (-05) (-13) 20 : 21 : 42 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/793/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/793"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 793
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 552910
          , simpleUserLogin = N "Tryneus"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/552910?v=3"
          , simpleUserUrl = "https://api.github.com/users/Tryneus"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Uncaught interrupted exception when resharding during write operations while a secondary index exists"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/793"
  , issueCreatedAt = 2013 (-05) (-13) 19 : 33 : 39 UTC
  , issueBody =
      Just
        "Title pretty much describes the entire problem.  This is based off of the issue_727_cleanup branch.\r\n\r\nStack trace:\r\n```c\r\nVersion: rethinkdb 1.4.5-1380-ge661f8 (debug) (GCC 4.6.1)\r\nerror: Error in ../src/errors.cc at line 111:\r\nerror: Uncaught exception of type \"interrupted_exc_t\"\r\n         what(): interrupted\r\nerror: Backtrace:\r\nerror: Mon May 13 12:32:37 2013\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at thread_stack_pcs.cc:151\r\n       2: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:250\r\n       3: format_backtrace(bool) at backtrace.cc:197\r\n       4: report_fatal_error(char const*, int, char const*, ...) at errors.cc:71\r\n       5: terminate_handler() at errors.cc:111\r\n       6: +0xb9f26 at 0x7f2fe416bf26 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       7: +0xb9f53 at 0x7f2fe416bf53 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       8: +0xba04e at 0x7f2fe416c04e (/usr/lib/x86_64-linux-gnu/libstdc++.so.6)\r\n       9: ql::env_t::throw_if_interruptor_pulsed() at env.hpp:119\r\n       10: ql::term_t::eval() at term.cc:267\r\n       11: ql::op_term_t::arg(unsigned long) at op.cc:73\r\n       12: ql::var_term_t::var_term_t(ql::env_t*, ql::protob_t<Term const>) at var.hpp:13\r\n       13: counted_t<ql::var_term_t> make_counted<ql::var_term_t, ql::env_t*&, ql::protob_t<Term const>&>(ql::env_t*&&&, ql::protob_t<Term const>&&&) at counted.hpp:125\r\n       14: ql::compile_term(ql::env_t*, ql::protob_t<Term const>) at term.cc:37\r\n       15: ql::op_term_t::op_term_t(ql::env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:45\r\n       16: ql::predicate_term_t::predicate_term_t(ql::env_t*, ql::protob_t<Term const>) at pred.hpp:11\r\n       17: counted_t<ql::predicate_term_t> make_counted<ql::predicate_term_t, ql::env_t*&, ql::protob_t<Term const>&>(ql::env_t*&&&, ql::protob_t<Term const>&&&) at counted.hpp:125\r\n       18: ql::compile_term(ql::env_t*, ql::protob_t<Term const>) at term.cc:50\r\n       19: ql::op_term_t::op_term_t(ql::env_t*, ql::protob_t<Term const>, ql::argspec_t, ql::optargspec_t) at op.cc:45\r\n       20: ql::branch_term_t::branch_term_t(ql::env_t*, ql::protob_t<Term const>) at control.hpp:51\r\n       21: counted_t<ql::branch_term_t> make_counted<ql::branch_term_t, ql::env_t*&, ql::protob_t<Term const>&>(ql::env_t*&&&, ql::protob_t<Term const>&&&) at counted.hpp:125\r\n       22: ql::compile_term(ql::env_t*, ql::protob_t<Term const>) at term.cc:98\r\n       23: ql::func_t::func_t(ql::env_t*, ql::protob_t<Term const>) at func.cc:66\r\n       24: counted_t<ql::func_t> make_counted<ql::func_t, ql::env_t*&, ql::protob_t<Term const>&>(ql::env_t*&&&, ql::protob_t<Term const>&&&) at counted.hpp:125\r\n       25: ql::func_term_t::func_term_t(ql::env_t*, ql::protob_t<Term const>) at func.cc:200\r\n       26: counted_t<ql::func_term_t> make_counted<ql::func_term_t, ql::env_t*&, ql::protob_t<Term const>&>(ql::env_t*&&&, ql::protob_t<Term const>&&&) at counted.hpp:125\r\n       27: ql::compile_term(ql::env_t*, ql::protob_t<Term const>) at term.cc:102\r\n       28: ql::wire_func_t::compile(ql::env_t*) at func.cc:180\r\n       29: rdb_replace_and_return_superblock(btree_slice_t*, repli_timestamp_t, scc_transaction_t<mc_cache_t>*, superblock_t*, std::string const&, store_key_t const&, ql::map_wire_func_t*, ql::env_t*, promise_t<superblock_t*>*, Datum*, rdb_modification_info_t*) at btree.cc:192\r\n       30: do_a_replace_from_batched_replace(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, slice_timestamp_txn_replace_t, superblock_t*, ql::env_t*, promise_t<superblock_t*>*, Datum*, rdb_modification_report_cb_t*) at btree.cc:304\r\n       31: void boost::_bi::list9<boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<fifo_enforcer_sink_t*>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi::value<slice_timestamp_txn_replace_t>, boost::_bi::value<superblock_t*>, boost::_bi::value<ql::env_t*>, boost::_bi::value<promise_t<superblock_t*>*>, boost::_bi::value<Datum*>, boost::_bi::value<rdb_modification_report_cb_t*> >::operator()<void (*)(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, slice_timestamp_txn_replace_t, superblock_t*, ql::env_t*, promise_t<superblock_t*>*, Datum*, rdb_modification_report_cb_t*), boost::_bi::list0>(boost::_bi::type<void>, void (*&)(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, slice_timestamp_txn_replace_t, superblock_t*, ql::env_t*, promise_t<superblock_t*>*, Datum*, rdb_modification_report_cb_t*), boost::_bi::list0&, int) at bind.hpp:827\r\n       32: boost::_bi::bind_t<void, void (*)(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, slice_timestamp_txn_replace_t, superblock_t*, ql::env_t*, promise_t<superblock_t*>*, Datum*, rdb_modification_report_cb_t*), boost::_bi::list9<boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<fifo_enforcer_sink_t*>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi::value<slice_timestamp_txn_replace_t>, boost::_bi::value<superblock_t*>, boost::_bi::value<ql::env_t*>, boost::_bi::value<promise_t<superblock_t*>*>, boost::_bi::value<Datum*>, boost::_bi::value<rdb_modification_report_cb_t*> > >::operator()() at bind_template.hpp:21\r\n       33: callable_action_instance_t<boost::_bi::bind_t<void, void (*)(auto_drainer_t::lock_t, fifo_enforcer_sink_t*, fifo_enforcer_write_token_t const&, slice_timestamp_txn_replace_t, superblock_t*, ql::env_t*, promise_t<superblock_t*>*, Datum*, rdb_modification_report_cb_t*), boost::_bi::list9<boost::_bi::value<auto_drainer_t::lock_t>, boost::_bi::value<fifo_enforcer_sink_t*>, boost::_bi::value<fifo_enforcer_write_token_t>, boost::_bi::value<slice_timestamp_txn_replace_t>, boost::_bi::value<superblock_t*>, boost::_bi::value<ql::env_t*>, boost::_bi::value<promise_t<superblock_t*>*>, boost::_bi::value<Datum*>, boost::_bi::value<rdb_modification_report_cb_t*> > > >::run_action() at runtime_utils.hpp:58\r\n       34: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       35: coro_t::run() at coroutines.cc:178\r\n```\r\n"
  , issueState = "closed"
  , issueId = Id 14277597
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2013 (-05) (-15) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 8
          , milestoneClosedIssues = 183
          , milestoneDescription =
              Just "Issues that are absolutely necessary for 1.5."
          , milestoneTitle = "1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/8"
          , milestoneCreatedAt = 2013 (-03) (-20) 02 : 06 : 44 UTC
          , milestoneState = "closed"
          }
  }