Issue
  { issueClosedAt = Just 2015 (-01) (-03) 00 : 30 : 41 UTC
  , issueUpdatedAt = 2015 (-01) (-23) 21 : 48 : 45 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3316/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3316"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 3316
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 7431361
          , simpleUserLogin = N "larkost"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/7431361?v=3"
          , simpleUserUrl = "https://api.github.com/users/larkost"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "add `Connection._r` to Python driver for testing"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3316"
  , issueCreatedAt = 2014 (-11) (-11) 19 : 55 : 57 UTC
  , issueBody =
      Just
        "There are a number of places in our testing codebase where we need to run the same collection of ReQL commands against a database with little or no changes. Some examples are: ensuring the database exists and a fresh table with a given name or filling a table with sample data. These would go nicely into common support files but for one difficulty: it is awkward to make sure that the helper function is targeting the same database on the same server with the same driver.\r\n\r\nTo make sure that all of these things are true you need a signature like one of these:\r\n```\r\ndef fillTable(r, conn):\r\n     pass\r\ndef fillTable(r, host, port):\r\n     pass\r\n```\r\n\r\nMy solution to this is to add a reference to the driver to the `Connection` object. I am proposing `_r` as the name as it follows the Python convention that a single leading underscore should warn people that this is an internal detail that probably should not be used.\r\n\r\nWith that in place the only thing that would have to be passed along to the functions would be the connection object.\r\n\r\nAdding this would be a little dirty, as the only way of doing this reliably is to put the logic into the `__init__.py` file, and to push the value onto the class when the driver is imported. But this would not add any measurable time to `import`, and so would be low-impact."
  , issueState = "closed"
  , issueId = Id 48427123
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-01) (-23) 08 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 81
          , milestoneClosedIssues = 321
          , milestoneDescription = Just ""
          , milestoneTitle = "1.16"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/81"
          , milestoneCreatedAt = 2014 (-09) (-04) 04 : 49 : 30 UTC
          , milestoneState = "closed"
          }
  }