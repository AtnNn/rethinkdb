IssueComment
  { issueCommentUpdatedAt = 2015 (-10) (-01) 05 : 15 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/144621548"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4853#issuecomment-144621548"
  , issueCommentCreatedAt = 2015 (-10) (-01) 05 : 15 : 13 UTC
  , issueCommentBody =
      "@danielmewes I agree concerning the value in having a structured reference type and I think that's a pretty compelling reason to not allow arbitrary expressions in references. However, I don't see why that necessitates a less expressive syntax. `.get`, `.getAll`, and `r.http` are very easy terms to reason about and it seems like parsing their arguments into a structured pseudotype format would be relatively trivial (even client-side) if that's all that was supported.\r\n\r\nFrom an API standpoint, it's going to be much easier to remember how to use `ref(table.get/getAll(...))` than a `ref` function that takes 2-n arguments. Plus, composability of expressions is one of the best parts of ReQL!"
  , issueCommentId = 144621548
  }