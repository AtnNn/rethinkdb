IssueComment
  { issueCommentUpdatedAt = 2013 (-12) (-05) 02 : 26 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/29866553"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1731#issuecomment-29866553"
  , issueCommentCreatedAt = 2013 (-12) (-05) 02 : 26 : 05 UTC
  , issueCommentBody =
      "Ok, so here is something we could do:\r\n1. Switch all Thread Local Storage to our own wrapper in thread_local.hpp. I've already done most of that for the implementation of #755, which just needs to be merged.\r\n2. Modify the get and set functions generated from thread_local.hpp to carry the `__attribute__ ((noinline))` attribute, at least on GCC. That should have the effect that intermediate addresses computed during access to thread local storage can never be re-used across multiple get/set operations to TLS. In effect, this will hopefully solve our issue.\r\n\r\nThis is a nice explanation of the underlying problem by the way: http://www.crystalclearsoftware.com/soc/coroutine/coroutine/coroutine_thread.html"
  , issueCommentId = 29866553
  }