Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 22 : 27 : 24 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4795/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4795"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Java"
          , labelName = "Java"
          }
      , IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/JavaScript%20/%20Coffee"
          , labelName = "JavaScript / Coffee"
          }
      , IssueLabel
          { labelColor = "fef2c0"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/Ruby"
          , labelName = "Ruby"
          }
      , IssueLabel
          { labelColor = "444444"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:performance"
          , labelName = "tp:performance"
          }
      ]
  , issueNumber = 4795
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Prefetch batches earlier in Ruby and JS drivers"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4795"
  , issueCreatedAt = 2015 (-09) (-04) 01 : 52 : 33 UTC
  , issueBody =
      Just
        "As of RethinkDB 2.1.2, our drivers send a CONTINUE on a cursor, then wait for the response, parse it, and send up to one additional CONTINUE request immediately for prefetching purposes.\r\n\r\nThis works fine as long as the bottleneck on the client is in the application consuming the data from the cursor. However if the bottleneck is in the parsing step, then prefetching the next batch only after parsing the previous response doesn't do much.\r\n\r\nThis can have a significant impact on the throughput at which one can read from a cursor for workloads such as the one described in https://github.com/rethinkdb/rethinkdb/issues/4569 .\r\n\r\nFor the Python driver, this was fixed in https://github.com/rethinkdb/rethinkdb/commit/e94e1656cb12e9f2793a14361dd71afbf7849983 and will ship together with RethinkDB 2.1.3.\r\nThe driver now sends the next CONTINUE request as soon as the previous reply has arrived, *before* parsing the response (this means that we sometimes send another CONTINUE after the cursor has been exhausted, but that's fine).\r\n\r\nWe should also optimize the Ruby and JavaScript drivers in this respect (and in the Java driver too! :-) )."
  , issueState = "open"
  , issueId = Id 104814442
  , issueComments = 9
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 883
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }