IssueComment
  { issueCommentUpdatedAt = 2016 (-04) (-15) 22 : 48 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 3498024
        , simpleUserLogin = N "mschurr"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/3498024?v=3"
        , simpleUserUrl = "https://api.github.com/users/mschurr"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/210673529"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5660#issuecomment-210673529"
  , issueCommentCreatedAt = 2016 (-04) (-15) 22 : 48 : 11 UTC
  , issueCommentBody =
      "I can confirm that closing the connection manually breaks the loop. Program and logs attached.\r\n\r\n```\r\n17:45:18.160 [Thread-0] DEBUG d.SimpleTest - Thread A listening for changes...\r\n17:45:18.228 [Thread-0] DEBUG c.r.a.Query - JSON Send: Token: 1 [1,[152,[[15,[\"messages\"]]]],{\"db\":[14,[\"chatapp\"]]}]\r\n17:45:18.243 [pool-1-thread-1] DEBUG c.r.a.Query - JSON Recv: Token: 1 {\"t\":3,\"r\":[],\"n\":[1]}\r\n17:45:18.373 [Thread-0] DEBUG c.r.a.Query - JSON Send: Token: 1 [2]\r\n17:45:48.159 [Thread-1] DEBUG d.SimpleTest - Thread B: Inserting first change.\r\n17:45:48.161 [Thread-1] DEBUG c.r.a.Query - JSON Send: Token: 2 [1,[56,[[15,[\"messages\"]],[3,[],{\"name\":\"Example\",\"message\":\"Hello World! (1)\",\"time\":0}]]],{\"db\":[14,[\"chatapp\"]]}]\r\n17:45:48.169 [pool-1-thread-1] DEBUG c.r.a.Query - JSON Recv: Token: 1 {\"t\":3,\"r\":[{\"new_val\":{\"id\":\"438e9428-2f91-45f8-b9cd-170556675f4f\",\"message\":\"Hello World! (1)\",\"name\":\"Example\",\"time\":0},\"old_val\":null}],\"n\":[1]}\r\n17:45:48.175 [pool-1-thread-1] DEBUG c.r.a.Query - JSON Recv: Token: 2 {\"t\":1,\"r\":[{\"deleted\":0,\"errors\":0,\"generated_keys\":[\"438e9428-2f91-45f8-b9cd-170556675f4f\"],\"inserted\":1,\"replaced\":0,\"skipped\":0,\"unchanged\":0}]}\r\n17:45:48.176 [Thread-0] DEBUG d.SimpleTest - Thread A received change: {new_val={name=Example, id=438e9428-2f91-45f8-b9cd-170556675f4f, time=0, message=Hello World! (1)}, old_val=null}\r\n17:45:48.176 [Thread-0] DEBUG c.r.a.Query - JSON Send: Token: 1 [2]\r\n17:46:18.177 [Thread-1] DEBUG d.SimpleTest - Thread B: Inserting second change.\r\n17:46:18.177 [Thread-1] DEBUG c.r.a.Query - JSON Send: Token: 3 [1,[56,[[15,[\"messages\"]],[3,[],{\"name\":\"Example\",\"message\":\"Hello World! (2)\",\"time\":0}]]],{\"db\":[14,[\"chatapp\"]]}]\r\n17:46:18.179 [pool-1-thread-1] DEBUG c.r.a.Query - JSON Recv: Token: 1 {\"t\":3,\"r\":[{\"new_val\":{\"id\":\"de0f224c-764a-4ea2-a22d-f1e10b0854cf\",\"message\":\"Hello World! (2)\",\"name\":\"Example\",\"time\":0},\"old_val\":null}],\"n\":[1]}\r\n17:46:18.180 [Thread-0] DEBUG c.r.a.Query - JSON Send: Token: 1 [2]\r\n17:46:18.180 [Thread-0] DEBUG d.SimpleTest - Thread A received change: {new_val={name=Example, id=de0f224c-764a-4ea2-a22d-f1e10b0854cf, time=0, message=Hello World! (2)}, old_val=null}\r\n17:46:18.188 [pool-1-thread-1] DEBUG c.r.a.Query - JSON Recv: Token: 3 {\"t\":1,\"r\":[{\"deleted\":0,\"errors\":0,\"generated_keys\":[\"de0f224c-764a-4ea2-a22d-f1e10b0854cf\"],\"inserted\":1,\"replaced\":0,\"skipped\":0,\"unchanged\":0}]}\r\n17:46:48.189 [Thread-1] DEBUG d.SimpleTest - Thread B: Dropping connection.\r\n17:46:48.199 [Thread-0] DEBUG d.SimpleTest - Thread A failed: \r\ncom.rethinkdb.gen.exc.ReqlDriverError: java.util.concurrent.CancellationException\r\n\tat com.rethinkdb.net.Cursor.waitOnCursorItems(Cursor.java:102) ~[rethinkdb-driver-2.3.0.jar:na]\r\n\tat com.rethinkdb.net.Cursor$DefaultCursor.getNext(Cursor.java:186) ~[rethinkdb-driver-2.3.0.jar:na]\r\n\tat com.rethinkdb.net.Cursor.next(Cursor.java:124) ~[rethinkdb-driver-2.3.0.jar:na]\r\n\tat demo.SimpleTest2$1.run(SimpleTest2.java:38) ~[classes/:na]\r\nCaused by: java.util.concurrent.CancellationException: null\r\n\tat java.util.concurrent.CompletableFuture.cancel(Unknown Source) ~[na:1.8.0_11]\r\n\tat com.rethinkdb.net.Connection.lambda$close$2(Connection.java:161) ~[rethinkdb-driver-2.3.0.jar:na]\r\n\tat com.rethinkdb.net.Connection$$Lambda$1/1784662007.accept(Unknown Source) ~[na:na]\r\n\tat java.util.concurrent.ConcurrentHashMap$ValueSpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_11]\r\n\tat java.util.stream.ReferencePipeline$Head.forEach(Unknown Source) ~[na:1.8.0_11]\r\n\tat com.rethinkdb.net.Connection.close(Connection.java:156) ~[rethinkdb-driver-2.3.0.jar:na]\r\n\tat com.rethinkdb.net.Connection.close(Connection.java:136) ~[rethinkdb-driver-2.3.0.jar:na]\r\n\tat demo.SimpleTest2$2.run(SimpleTest2.java:69) ~[classes/:na]\r\n17:47:18.192 [Thread-1] DEBUG d.SimpleTest - Thread B: Quiting.\r\n17:47:18.192 [main] DEBUG d.SimpleTest - Workers joined, exiting.\r\n```\r\n\r\n```java\r\npackage demo;\r\n\r\nimport static com.rethinkdb.RethinkDB.r;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\nimport com.rethinkdb.net.Connection;\r\nimport com.rethinkdb.net.Cursor;\r\n\r\n/**\r\n * Run in the web UI to add a row and get notified:\r\n * r.db(\"chatapp\").table(\"messages\").insert({\"name\": \"Bob\", \"time\": 0, \"message\": \"Hello!\"})\r\n */\r\npublic class SimpleTest2 {\r\n  private static final Logger logger = LoggerFactory.getLogger(SimpleTest.class);\r\n  \r\n  public static void main(String[] args) throws Exception {    \r\n    final Connection conn = r.connection()\r\n        .hostname(\"localhost\")\r\n        .port(28015)\r\n        .db(\"chatapp\")\r\n        .connect();\r\n    \r\n    Thread A = new Thread() {\r\n      @Override\r\n      public void run() {\r\n        try {\r\n          Cursor<HashMap<String, ?>> cursor = null;\r\n          \r\n          try {\r\n            logger.debug(\"Thread A listening for changes...\");\r\n            cursor = r.table(\"messages\").changes().run(conn);\r\n            \r\n            for (HashMap<String, ?> item : cursor) {\r\n              logger.debug(\"Thread A received change: {}\", item);            \r\n            }\r\n          } finally {\r\n            if (cursor != null) {\r\n              cursor.close();\r\n            }\r\n          }\r\n        } catch (Exception e) {\r\n          logger.debug(\"Thread A failed: \", e);\r\n        }\r\n      }\r\n    };\r\n    \r\n    Thread B = new Thread() {\r\n      public void run() {\r\n        try {\r\n          Thread.sleep(TimeUnit.SECONDS.toMillis(30));\r\n          logger.debug(\"Thread B: Inserting first change.\");\r\n          r.table(\"messages\").insert(\r\n              r.hashMap(\"name\", \"Example\")\r\n              .with(\"message\", \"Hello World! (1)\")\r\n              .with(\"time\", 0)).run(conn);\r\n          Thread.sleep(TimeUnit.SECONDS.toMillis(30));\r\n          logger.debug(\"Thread B: Inserting second change.\");\r\n          r.table(\"messages\").insert(\r\n              r.hashMap(\"name\", \"Example\")\r\n              .with(\"message\", \"Hello World! (2)\")\r\n              .with(\"time\", 0)).run(conn);\r\n          Thread.sleep(TimeUnit.SECONDS.toMillis(30));\r\n          logger.debug(\"Thread B: Dropping connection.\");\r\n          conn.close();\r\n          Thread.sleep(TimeUnit.SECONDS.toMillis(30));\r\n          logger.debug(\"Thread B: Quiting.\");\r\n        } catch (Exception e) {\r\n          logger.debug(\"Thread B failed: \", e);\r\n        }\r\n      }\r\n    };\r\n    \r\n    A.start();\r\n    B.start();\r\n    A.join();\r\n    B.join();\r\n    logger.debug(\"Workers joined, exiting.\");\r\n  }\r\n}\r\n```"
  , issueCommentId = 210673529
  }