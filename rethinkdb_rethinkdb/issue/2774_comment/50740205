IssueComment
  { issueCommentUpdatedAt = 2014 (-07) (-31) 10 : 04 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/50740205"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2774#issuecomment-50740205"
  , issueCommentCreatedAt = 2014 (-07) (-31) 10 : 04 : 06 UTC
  , issueCommentBody =
      "> @srh -- I assume you're strongly in favor of the second option?\r\n\r\nYes.  Also, the datum_t::cmp-specific work is not really a pain in the ass.  It comprises some clear and specific code that will exist for a version or maybe two (or maybe five!  But it's not so bad.).  The harder work is in the general support of this feature.\r\n\r\nBut it's important that we not crash and lose users' data, that we be capable of fixing bugs in the ReQL implementation or specification, and that users' databases don't refuse to work after an upgrade.  This is the way to do it.\r\n\r\nIn order to tell users they need to rebuild indexes, this is simplest and most transparent:  They rebuild the new index with a different name, while the old one still exists, and then they the new index.  There are no technical barriers to supporting index renaming.  E.g. `table.index_rename('before', 'after')`.\r\n"
  , issueCommentId = 50740205
  }