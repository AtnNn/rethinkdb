IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-09) 07 : 27 : 34 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 877936
        , simpleUserLogin = N "marshall007"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/877936?v=3"
        , simpleUserUrl = "https://api.github.com/users/marshall007"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/69301866"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2578#issuecomment-69301866"
  , issueCommentCreatedAt = 2015 (-01) (-09) 07 : 25 : 39 UTC
  , issueCommentBody =
      "Good point, I think in those cases (terms that have an arity range of `2, Infinity`) when the static (infix) method is called with one argument we return a function that only accepts one additional argument. This seems like an acceptable compromise as it handles the common cases and still provides a lot of convenience.\r\n\r\n```js\r\nr.expr([1]).map(r.add(1)) // -> [2]\r\nr.expr([false]).map(r.or(true)) // -> [true]\r\n\r\nr.expr([1]).map(r.add(1, 2)) // would not work\r\n```\r\n\r\nI don't know enough Ruby to provide much insight there, but it doesn't sound easily solvable."
  , issueCommentId = 69301866
  }