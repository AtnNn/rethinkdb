IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-09) 02 : 09 : 07 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/69283561"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2578#issuecomment-69283561"
  , issueCommentCreatedAt = 2015 (-01) (-09) 02 : 09 : 07 UTC
  , issueCommentBody =
      "Ah, I see!  That has a different problem.  A lot of our terms, in addition to taking a variadic number of arguments, can be called either infix or prefix.  A good example is `add`; you can write `r.expr(1).add(2)` or `r.add(1, 2)` in JS.\r\n\r\nIn the Ruby driver, all terms can be called either infix or prefix (i.e. in Ruby `r.foo(a, b)` and `r.expr(a).foo(b)` are always equivalent).  So writing `r.contains(1, 2, 3)` is indistinguishable from `r.expr(1).contains(2, 3)`, and you have the variadic problem all over again."
  , issueCommentId = 69283561
  }