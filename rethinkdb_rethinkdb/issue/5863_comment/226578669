IssueComment
  { issueCommentUpdatedAt = 2016 (-06) (-16) 18 : 51 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/226578669"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5863#issuecomment-226578669"
  , issueCommentCreatedAt = 2016 (-06) (-16) 18 : 51 : 39 UTC
  , issueCommentBody =
      "> Does RethinkDB lend it towards this use-case? Would the subscriptions table be a good approach?\r\n\r\nThe approach looks reasonable to me. I recommend setting the `key` field as the primary key in the table (it's an option to `tableCreate`, see http://rethinkdb.com/api/javascript/table_create/ ). You can easily use changefeeds on a `get` query then to implement the `subscribe` functionality.\r\n\r\nSize changes in the value aren't an issue. Note though that the complete value will be rewritten whenever it changes, so performance might suffer a bit if the values get very large and are updated frequently."
  , issueCommentId = 226578669
  }