IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-24) 22 : 25 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18433412"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/884#issuecomment-18433412"
  , issueCommentCreatedAt = 2013 (-05) (-24) 22 : 25 : 53 UTC
  , issueCommentBody =
      "I haven't really been thinking about implementation details though all this talk about defining special semantics within certain operations within an expression passed to default sounds like a nightmare to me.\r\n\r\nI haven't thought about it too deeply but wouldn't we get the correct behavior if we just add type errors to `default`?\r\n\r\n* `r({a:null})('a').eq(null).default(0) => true` No error generated\r\n* `r({a:null})('a').eq(\"foo\").default(0) => 0` Caught type error cannot compare null and string\r\n* `r({a:'foo')('b').eq('foo').default(0) => 0` Caught missing field error"
  , issueCommentId = 18433412
  }