IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-22) 21 : 46 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18310160"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/884#issuecomment-18310160"
  , issueCommentCreatedAt = 2013 (-05) (-22) 21 : 46 : 40 UTC
  , issueCommentBody =
      "I like the idea of accepting either a value or a function to run on the error. When combined with the upcoming regex command this would enable users to easily branch on different error messages (since we don't support different error types).\r\n\r\nI agree with @jdoliner that equating `null` and `error` in `default` is weird. In general we haven't really decided what we want `null` to mean. Here it's equivalent to an error, elsewhere it's a value just like any other. Some places it's a sentinel used to mean does not exist. I'd really like to clear this up before we define yet more inconsistent context specific behavior for null in different commands."
  , issueCommentId = 18310160
  }