IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-24) 21 : 59 : 31 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18432370"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/884#issuecomment-18432370"
  , issueCommentCreatedAt = 2013 (-05) (-24) 21 : 59 : 31 UTC
  , issueCommentBody =
      "@mlucy you make a good point about empty stream reduction. That has always been a goal of this proposal. We could simply add that error type to the list supported by `default`. While this list is starting to look like a grab bag, they all fall under the heading of \"unexpected absence\". The point of `default` is to handle all such common \"unexpected absence\" cases.\r\n\r\nCan we actually come up with some cases where `(big_expression).default(default_val)` doesn't work as expected? @jdoliner's point earlier is that the limited set of errors outside the scope of the current `default` proposal that don't indicate a serious problem that we would want to fail on.\r\n\r\nThe main class of errors that I can think of not handled in the current `default` proposal are type errors. Perhaps we want to include such errors in the default proposal? Maybe we want to think about `default` in terms of which errors we don't want to be caught (the serious ones) rather than which to include?"
  , issueCommentId = 18432370
  }