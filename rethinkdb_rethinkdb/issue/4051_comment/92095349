IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-12) 17 : 47 : 57 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/92095349"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4051#issuecomment-92095349"
  , issueCommentCreatedAt = 2015 (-04) (-12) 17 : 47 : 57 UTC
  , issueCommentBody =
      "As much as I dislike the behavior, for the exact reasons that @mlucy writes, I think that we are stuck with this behavior. This is both because it is the standard behavior for `iterators` as well as `generators`, and because I don't see an easy way of blocking this. The `list` function works by iterating over what it is given (so using `next()`) and swallows the `StopIteration` error that it gets at the end. In the case we are talking about that is right away. So the only way of telling when we are being used from `list` would be to inspect the call stack, and that does not seem to be a good idea to me."
  , issueCommentId = 92095349
  }