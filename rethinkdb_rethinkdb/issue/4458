Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-07) 17 : 53 : 05 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4458/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4458"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:testing"
          , labelName = "cp:testing"
          }
      ]
  , issueNumber = 4458
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 7431361
          , simpleUserLogin = N "larkost"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/7431361?v=3"
          , simpleUserUrl = "https://api.github.com/users/larkost"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "More testing for backfills"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4458"
  , issueCreatedAt = 2015 (-06) (-25) 22 : 43 : 23 UTC
  , issueBody =
      Just
        "We've had the RDBBackfill unit test uncover a bug in the backfilling very intermittently (https://github.com/rethinkdb/rethinkdb/issues/4370). While fixing it @timmaxw found one other bug and one potential source of bugs in the backfilling and related code.\r\n\r\nThe fact that the test only failed very intermittently suggests that we should be doing more extensive backfill testing.\r\nAs a starting point, I'd suggest something along the lines of the shard fuzzer that randomly reconfigures and reshards tables. We should combine this with a load generator that performs random inserts, updates and deletions from the table between each reconfiguration. We should probably throw in range deletions and inserts for complete subranges of the key space as well, to trigger some additional corner cases. Finally we'll need code to verify that the data matches what it should be.\r\nIdeally we would also occasionally kill off a server or induce a network partition.\r\n\r\nThis could be either a unit test or an integration test I think.\r\n\r\n@larkost do you know if we already have some of those components in place in the integrations test world that we could re-use?"
  , issueState = "open"
  , issueId = Id 91095689
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 1777134
                , simpleUserLogin = N "mlucy"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/1777134?v=3"
                , simpleUserUrl = "https://api.github.com/users/mlucy"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 53
          , milestoneNumber = 68
          , milestoneClosedIssues = 33
          , milestoneDescription = Just ""
          , milestoneTitle = "tests"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/68"
          , milestoneCreatedAt = 2014 (-04) (-25) 22 : 22 : 22 UTC
          , milestoneState = "open"
          }
  }