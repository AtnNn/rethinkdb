IssueComment
  { issueCommentUpdatedAt = 2016 (-02) (-26) 19 : 41 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/189448262"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/5450#issuecomment-189448262"
  , issueCommentCreatedAt = 2016 (-02) (-26) 19 : 41 : 28 UTC
  , issueCommentBody =
      "Thanks for trying.\r\n\r\nThat one is interesting. From the `strerror_r` man page:\r\n```\r\n       int strerror_r(int errnum, char *buf, size_t buflen);\r\n                   /* XSI-compliant */\r\n\r\n       char *strerror_r(int errnum, char *buf, size_t buflen);\r\n                   /* GNU-specific */\r\n\r\n   Feature Test Macro Requirements for glibc (see feature_test_macros(7)):\r\n\r\n       The XSI-compliant version of strerror_r() is provided if:\r\n       (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE\r\n       Otherwise, the GNU-specific version is provided.\r\n\r\n[...]\r\nThe strerror_r() function is similar to strerror(), but is thread safe.\r\n       This function is available in two versions:  an  XSI-compliant  version\r\n       specified  in POSIX.1-2001 (available since glibc 2.3.4, but not POSIX-\r\n       compliant until glibc 2.13),  and  a  GNU-specific  version  (available\r\n       since  glibc 2.0).  The XSI-compliant version is provided with the fea\8208\r\n       ture test macros settings shown in the SYNOPSIS; otherwise the GNU-spe\8208\r\n       cific  version  is  provided.  If no feature test macros are explicitly\r\n       defined, then (since glibc 2.4) _POSIX_SOURCE  is  defined  by  default\r\n       with  the  value  200112L,  so  that  the XSI-compliant version of str\8208\r\n       error_r() is provided by default.\r\n```\r\n\r\nI wonder if something is setting one of those feature macros. Or maybe the default changed for newer versions of GCC or libc?"
  , issueCommentId = 189448262
  }