IssueComment
  { issueCommentUpdatedAt = 2014 (-06) (-18) 20 : 42 : 54 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/46491206"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/137#issuecomment-46491206"
  , issueCommentCreatedAt = 2014 (-06) (-18) 20 : 42 : 54 UTC
  , issueCommentBody =
      "> But also, adding this support just for the big binary fields of an object is also easy\r\n\r\nActually, likewise, the same technique would generally work for other big fields, to speed up access to their small neighboring fields.  This sort of thing can be done row-by-row and doesn't need user-supplied schema info or anything like that.\r\n\r\nAnyway my point is that going for a binary ReQL type does not lock us into any kind of on-the-wire or on-disk representation, or in-memory representation, or any other requirement that query evaluation have bad performance."
  , issueCommentId = 46491206
  }