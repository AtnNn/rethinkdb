IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-07) 01 : 47 : 27 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/17518928"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/758#issuecomment-17518928"
  , issueCommentCreatedAt = 2013 (-05) (-07) 01 : 47 : 27 UTC
  , issueCommentBody =
      "Currently the error \"Connection is closed\" is thrown. This is the expected behavior. Since there is no asynchronous gap between the call to `run` and the error, you can catch it with a try catch block around the call to `run`. Because we throw the error, there is no opportunity to also call the callback with the error. We have to choose between reporting the error with an exception or reporting it by calling the callback with the error.\r\n\r\nIn general the pattern is throw if the code path is not interrupted by an asynchronous operation and only pass the error to the callback if the error is generated on the other side of an asynchronous break.\r\n\r\nI'm in favor of leaving it as is. Changing the behavior would leave this case incongruous with the rest of the api. The callback error passing convention is worse error reporting behavior in my opinion and only exists for certain kinds of errors because of the strange nature of JS."
  , issueCommentId = 17518928
  }