IssueComment
  { issueCommentUpdatedAt = 2013 (-08) (-13) 23 : 29 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/22605353"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1290#issuecomment-22605353"
  , issueCommentCreatedAt = 2013 (-08) (-13) 23 : 29 : 05 UTC
  , issueCommentBody =
      "The python driver currently assumes that a timezone-less time represents a time in UTC. It is possible in Python to construct a datetime object representing any time without giving it a timezone. Python datetimes seem to use an internal 8-tuple time representation rather than UTC epoch time + timezone like we do. Therefore there is no default interpretation that we can apply that will give us the correct intended time.\r\n\r\nThe only solution I can think of is to error on datetime objects that don't have a timezone attached. This really sucks though because it is not possible to construct a Python datetime object with a timezone without using a third party library or writing custom timezone handling code. There is actually no timezone support built into the standard python time library.\r\n\r\nDoes anybody have any better ideas?"
  , issueCommentId = 22605353
  }