IssueComment
  { issueCommentUpdatedAt = 2015 (-04) (-07) 23 : 45 : 27 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 563469
        , simpleUserLogin = N "niieani"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/563469?v=3"
        , simpleUserUrl = "https://api.github.com/users/niieani"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/90762311"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4024#issuecomment-90762311"
  , issueCommentCreatedAt = 2015 (-04) (-07) 23 : 44 : 29 UTC
  , issueCommentBody =
      "OK, I understand. Well, I hope recursive queries do get some love and get to be on the roadmap, I think that there are plenty of great use cases for them.\r\n\r\nA good and simple example is a situation where we want to create a tree of one-to-[many of the same] relationships, like, say, a Social Graph of Friends - 1st degree, 2nd degree, 3rd degree connections, etc. built with each recursion.\r\n\r\nGoing back and forth with the joins and new read queries can work with a small amount of data, but if there'll be thousands of records, it would get very slow with all the round-trips.\r\n\r\nThanks, @mlucy!"
  , issueCommentId = 90762311
  }