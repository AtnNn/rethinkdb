IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-18) 23 : 05 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/56115744"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3051#issuecomment-56115744"
  , issueCommentCreatedAt = 2014 (-09) (-18) 23 : 03 : 31 UTC
  , issueCommentBody =
      "This problem is surmountable @grandquista is correct in that the problem is that Python2.x's print statement implicitly calls the `__str__` method of object, then expects that those are a `str`/`bytes` object, and finally treats that as the default encoding (ascii). However, this is is surmountable by making sure the the byte string that is returned is encoded already (with the encoding for `sys.stdout`).\r\n\r\nI have a fix for this up for review in CR 2111, which is off of branch `larkost/3051-python-driver-unicode-in-errors`.\r\n\r\nThis version works in all Python versions from 2.6 though 3.4.\r\n\r\nI am taking this out of tests, since it is not a testing issue and putting it into 1.6 where it will probably ship."
  , issueCommentId = 56115744
  }