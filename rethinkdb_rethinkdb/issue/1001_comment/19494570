IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-15) 10 : 41 : 46 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19494570"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1001#issuecomment-19494570"
  , issueCommentCreatedAt = 2013 (-06) (-15) 10 : 41 : 46 UTC
  , issueCommentBody =
      "It seems like there's no getting around some added complexity here I find\r\nspecial purpose values tasteful but you done so here's some other options.\r\n\r\n- we could have 3 versions of the function between lower_bound and\r\nupper_bound I seriously doubt @mlucy will like that and I really don't\r\neither but its an option.\r\n- we could introduce r.min_value and r.max_value. These would be valid in\r\nmany other places so it addresses @mlucy's concern I think we should\r\ndisallow serializing them as values to disk and maybe returning them as\r\ndata to users (since they don't really convert to very usable native things\r\nin the language) this means they're probably more complicated to implement\r\nbut maybe it's worth it.\r\n\r\n ---\r\n\r\nSince we seem robe discussing 2 issues in one thread here I'll now address\r\nthe nulls in sindexes issue. I'm all for dropping null values but if I\r\nrecall correctly @coffemug you were actually the main proponent of not\r\ndropping them originally. This isn't to say that you've hit your opinion\r\nquota on this issue but normally when we rethink a decision we have some\r\nmain proponent reminding us why we originally made it. I forget what it was\r\nbut I remember it was pretty convincing and I'd kind of like to have it as\r\ncontext. Can you remember what it was?\r\n\r\n\r\n\r\n\r\n\r\nOn Friday, June 14, 2013, Michel wrote:\r\n\r\n> We could have .after(start_key) and .before(end_key).\r\n>\r\n> For the rest, I still don't see a valid reason not to let people use null.\r\n> We can of had a bad start with null with our API, but it doesn't mean\r\n> that we have to keep pushing it away.\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1001#issuecomment-19490568>\r\n> .\r\n>"
  , issueCommentId = 19494570
  }