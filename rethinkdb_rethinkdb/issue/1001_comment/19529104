IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-17) 07 : 03 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19529104"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1001#issuecomment-19529104"
  , issueCommentCreatedAt = 2013 (-06) (-17) 07 : 03 : 52 UTC
  , issueCommentBody =
      "As far as `between` and dropping nulls goes, the obvious solution is to use key-based arguments instead of positional ones:\r\n\r\n```python\r\ntable.between() # returns everything\r\ntable.between(start = 'bar') # returns everything after 'bar'\r\ntable.between(end = 'foo') # returns everything before 'foo'\r\ntable.between(start = 'bar', end = 'foo') # returns everything between 'bar' and 'foo'\r\n```\r\n\r\nThis seems ok to me. However, if we end up not allowing nulls in secondary indexes, I don't see what's wrong with jut passing `null` to between to indicate an infinite bound like we do now.\r\n\r\n-----\r\n\r\nAs for nulls in sindexes, I don't think either solution had a strong proponent. As far as I recall, we wobbled between available options and picked the one currently implemented (which I agree with at the time). I now think we picked the wrong one in light of treating null as non-existence."
  , issueCommentId = 19529104
  }