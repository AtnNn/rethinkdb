IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-13) 11 : 09 : 03 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19385286"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1001#issuecomment-19385286"
  , issueCommentCreatedAt = 2013 (-06) (-13) 11 : 09 : 03 UTC
  , issueCommentBody =
      "`(...).ne(null)` does work, FYI.\r\n\r\n\r\nOn Thu, Jun 13, 2013 at 3:11 AM, wmrowan <notifications@github.com> wrote:\r\n\r\n> I thought we had a rule that index (only primary?) keys could not be null.\r\n> This is what allows us to use null for empty endpoint in between. If\r\n> secondary index keys can be null but between is supposed to work on\r\n> secondary indexes then we already can't use nulls to denote empty\r\n> endpoints. This is an inconsistency that we have to fix one way or the\r\n> other.\r\n>\r\n> Given that we decided to go the route that null generally means\r\n> nonexistence then @coffeemug <https://github.com/coffeemug>'s original\r\n> proposal makes total sense. Returning null in the secondary index function\r\n> means \"don't include in the index\".\r\n>\r\n> @mlucy <https://github.com/mlucy> why does the query have to be\r\n> (...).coerce_to('boo')? Why does @coffeemug <https://github.com/coffeemug>'s\r\n> (...).ne(null) not work?\r\n>\r\n> \8212\r\n> Reply to this email directly or view it on GitHub<https://github.com/rethinkdb/rethinkdb/issues/1001#issuecomment-19382996>\r\n> .\r\n>"
  , issueCommentId = 19385286
  }