IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-28) 04 : 07 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18524989"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/868#issuecomment-18524989"
  , issueCommentCreatedAt = 2013 (-05) (-28) 04 : 07 : 53 UTC
  , issueCommentBody =
      "It's common for database system to implement an `in` operator which is `contains` with its arguments reversed:\r\n\r\n```\r\nr.expr(5).in([4, 5, 6])\r\n=> true\r\nr.expr(5).in([4, 6])\r\n=> false\r\n```\r\n\r\nIt tends to be very handy because most queries read more naturally with `in` than with `contains`. (We can't actually use `in` because it's defined in many languages, but perhaps we can define `member_of`, e.g. `r.expr(5).member_of([3, 4, 5])`)\r\n\r\nNot strictly necessary, but would be nice if we have time."
  , issueCommentId = 18524989
  }