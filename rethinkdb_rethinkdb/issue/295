Issue
  { issueClosedAt = Just 2013 (-08) (-08) 20 : 56 : 00 UTC
  , issueUpdatedAt = 2013 (-08) (-08) 22 : 17 : 52 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/295/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/295"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 295
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1461947
        , simpleUserLogin = N "neumino"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1461947?v=3"
        , simpleUserUrl = "https://api.github.com/users/neumino"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Callstack overflow in a coroutine"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/295"
  , issueCreatedAt = 2013 (-02) (-07) 02 : 17 : 43 UTC
  , issueBody =
      Just
        "I was testing how long queries were printed in the data explorer when the server crashed. \r\nIt looks like it's always reproducible. The amount of data in \"test\" was low (about a thousand keys, no more).\r\n\r\n\r\nQuery:\r\n\r\n```javascript\r\nr.db('test').table('test').filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).filter( function(doc) { return r.expr(true) } ).orderBy('id').run()\r\n```\r\n\r\n\r\nError:\r\n```\r\nVersion: rethinkdb 1.3.2-239-gb80aa2-dirty (debug) (GCC 4.6.1)\r\nerror: Error in arch/runtime/thread_pool.cc at line 317:\r\nerror: Callstack overflow in a coroutine\r\nerror: Backtrace:\r\nerror: Wed Feb  6 18:14:08 2013\r\n       \r\n       1: lazy_backtrace_t::lazy_backtrace_t() at backtrace.cc:251\r\n       2: format_backtrace(bool) at backtrace.cc:198\r\n       3: report_fatal_error(char const*, int, char const*, ...) at errors.cc:71\r\n       4: linux_thread_pool_t::sigsegv_handler(int, siginfo*, void*) at thread_pool.cc:317\r\n       5: +0xfcb0 at 0x7fd7ea52acb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\r\n       6: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2530\r\n       7: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       8: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       9: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       10: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       11: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       12: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       13: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       14: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       15: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       16: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       17: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       18: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       19: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       20: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       21: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       22: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       23: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       24: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       25: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       26: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       27: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       28: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       29: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       30: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       31: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       32: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       33: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       34: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       35: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       36: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       37: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       38: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       39: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       40: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       41: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       42: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2564\r\n       43: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       44: query_language::eval_call_as_stream(Term_Call*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:2582\r\n       45: query_language::eval_term_as_stream(Term*, query_language::runtime_environment_t*, query_language::scopes_t const&, query_language::backtrace_t const&) at query_language.cc:1882\r\n       46: query_language::execute_read_query(ReadQuery*, query_language::runtime_environment_t*, Response*, query_language::scopes_t const&, query_language::backtrace_t const&, stream_cache_t*) at query_language.cc:1171\r\n       47: query_language::execute_query(Query*, query_language::runtime_environment_t*, Response*, query_language::scopes_t const&, query_language::backtrace_t const&, stream_cache_t*) at query_language.cc:1133\r\n       48: query_server_t::handle(Query*, query_server_t::context_t*) at pb_server.cc:68\r\n       49: boost::_mfi::mf2<Response, query_server_t, Query*, query_server_t::context_t*>::operator()(query_server_t*, Query*, query_server_t::context_t*) const at mem_fn_template.hpp:281\r\n       50: Response boost::_bi::list3<boost::_bi::value<query_server_t*>, boost::arg<1>, boost::arg<2> >::operator()<Response, boost::_mfi::mf2<Response, query_server_t, Query*, query_server_t::context_t*>, boost::_bi::list2<Query*&, query_server_t::context_t*&> >(boost::_bi::type<Response>, boost::_mfi::mf2<Response, query_server_t, Query*, query_server_t::context_t*>&, boost::_bi::list2<Query*&, query_server_t::context_t*&>&, long) at bind.hpp:383\r\n       51: Response boost::_bi::bind_t<Response, boost::_mfi::mf2<Response, query_server_t, Query*, query_server_t::context_t*>, boost::_bi::list3<boost::_bi::value<query_server_t*>, boost::arg<1>, boost::arg<2> > >::operator()<Query*, query_server_t::context_t*>(Query*&, query_server_t::context_t*&) at bind_template.hpp:62\r\n       52: boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<Response, boost::_mfi::mf2<Response, query_server_t, Query*, query_server_t::context_t*>, boost::_bi::list3<boost::_bi::value<query_server_t*>, boost::arg<1>, boost::arg<2> > >, Response, Query*, query_server_t::context_t*>::invoke(boost::detail::function::function_buffer&, Query*, query_server_t::context_t*) at function_template.hpp:133\r\n       53: boost::function2<Response, Query*, query_server_t::context_t*>::operator()(Query*, query_server_t::context_t*) const at function_template.hpp:761\r\n       54: protob_server_t<Query, Response, query_server_t::context_t>::handle(http_req_t const&) at protob.tcc:211\r\n       55: routing_http_app_t::handle(http_req_t const&) at routing_app.cc:29\r\n       56: routing_http_app_t::handle(http_req_t const&) at routing_app.cc:29\r\n       57: http_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at http.cc:308\r\n       58: boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>::operator()(http_server_t*, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) const at mem_fn_template.hpp:280\r\n       59: void boost::_bi::list3<boost::_bi::value<http_server_t*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list1<scoped_ptr_t<linux_tcp_conn_descriptor_t>&> >(boost::_bi::type<void>, boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>&, boost::_bi::list1<scoped_ptr_t<linux_tcp_conn_descriptor_t>&>&, int) at bind.hpp:392\r\n       60: void boost::_bi::bind_t<void, boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<http_server_t*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()<scoped_ptr_t<linux_tcp_conn_descriptor_t> >(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at bind_template.hpp:33\r\n       61: boost::detail::function::void_function_obj_invoker1<boost::_bi::bind_t<void, boost::_mfi::mf2<void, http_server_t, scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<http_server_t*>, boost::arg<1>, boost::_bi::value<auto_drainer_t::lock_t> > >, void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&>::invoke(boost::detail::function::function_buffer&, scoped_ptr_t<linux_tcp_conn_descriptor_t>&) at function_template.hpp:154\r\n       62: boost::function1<void, scoped_ptr_t<linux_tcp_conn_descriptor_t>&>::operator()(scoped_ptr_t<linux_tcp_conn_descriptor_t>&) const at function_template.hpp:761\r\n       63: linux_nonthrowing_tcp_listener_t::handle(int) at network.cc:838\r\n       64: boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>::operator()(linux_nonthrowing_tcp_listener_t*, int) const at mem_fn_template.hpp:166\r\n       65: void boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> >::operator()<boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>&, boost::_bi::list0&, int) at bind.hpp:314\r\n       66: boost::_bi::bind_t<void, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> > >::operator()() at bind_template.hpp:21\r\n       67: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf1<void, linux_nonthrowing_tcp_listener_t, int>, boost::_bi::list2<boost::_bi::value<linux_nonthrowing_tcp_listener_t*>, boost::_bi::value<int> > > >::run_action() at runtime_utils.hpp:58\r\n       68: callable_action_wrapper_t::run() at runtime_utils.cc:67\r\n       69: coro_t::run() at coroutines.cc:178\r\nerror: Exiting.\r\n```\r\n\r\nI'm on branch michel_206 which was forked from next about a week ago."
  , issueState = "closed"
  , issueId = Id 10721453
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }