IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-09) 02 : 04 : 25 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/69283242"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2052#issuecomment-69283242"
  , issueCommentCreatedAt = 2015 (-01) (-09) 02 : 04 : 25 UTC
  , issueCommentBody =
      "> really easy to forget adding a new opt arg to the list in the future\r\n\r\nIf we do this, we should make the `optargspec_t` constructor guarantee that the optarg is in the global list.  That way we'd get a crash the first time we tried to test a term using the new optarg.\r\n\r\n> having to specify opt args at the term where they are being used makes sure people understand which terms a given opt arg has effects on\r\n\r\nYeah.  There are also some optargs which are just outright confusing at the toplevel (`timeout` doesn't specify a timeout for the whole query, it specifies the timeout for any `r.js` calls in the query)."
  , issueCommentId = 69283242
  }