IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-10) 06 : 00 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 10935895
        , simpleUserLogin = N "thenightwassave"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/10935895?v=3"
        , simpleUserUrl = "https://api.github.com/users/thenightwassave"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73648714"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3074#issuecomment-73648714"
  , issueCommentCreatedAt = 2015 (-02) (-10) 05 : 56 : 13 UTC
  , issueCommentBody =
      "I'm not sure what my exact objection is but here is my problem:\r\n\r\nRight now I'm doing a batch insert with documents that each contain a different amount of r.uuid() calls. I've been relying on generated_keys to give me my top-level primary keys but now it seems like my internal keys are going to be completely mixed in with my main primary keys. I no longer know which key refers to an actual document and which is just an internal identifier. \r\n\r\nIs it sound to mix in the two types of keys? Yes, r.uuid() generates a key-like string but is it necessarily a key? Is it possible to include an optarg to r.uuid() to avoid returning its key in the returned key list?\r\n"
  , issueCommentId = 73648714
  }