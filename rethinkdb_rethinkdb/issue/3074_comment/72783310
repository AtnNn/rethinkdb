IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-04) 03 : 15 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/72783310"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3074#issuecomment-72783310"
  , issueCommentCreatedAt = 2015 (-02) (-04) 03 : 15 : 35 UTC
  , issueCommentBody =
      "This is pretty easy to implement for `update` and `replace` since we currently don't have range writes.  I think we should try to maintain the invariant that the number of returned keys is equal to the sum of `inserted`, `replaced` and `deleted`.\r\n\r\nI think the `changes` field should just be set to an array of pkeys with no `old_val`/`new_val` wrappers.  Otherwise the semantics would be sort of confusing (setting both `old_val` and `new_val` to the key would be weird because it would be a trivial change, and we currently omit trivial changes, and setting just one of them would make it appear to be an insert or delete in the case of `update` even though it isn't).\r\n\r\nAs an aside, are we sure we want to do this given that it's almost certainly going to break a lot of people's code?"
  , issueCommentId = 72783310
  }