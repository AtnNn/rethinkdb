IssueComment
  { issueCommentUpdatedAt = 2012 (-12) (-25) 00 : 10 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/11667345"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/181#issuecomment-11667345"
  , issueCommentCreatedAt = 2012 (-12) (-25) 00 : 10 : 05 UTC
  , issueCommentBody =
      "Both good ideas. I think that both of these will be added with the new driver spec which is currently under active development. You can see the actual spec here: https://github.com/rethinkdb/rethinkdb/wiki/protobuf_rfc_raw_spec. Notice that there is a `typeof` so that one's definitely in there.\r\n\r\nThe later I'm not sure about being in the new spec but I know we have talked about our lack of operations on Objects. I think the fundamental operation is just extending map to work on Objects. This would allow you to iterate over them and everything also could just be sugar on top of that. Here's how it would work in my mind:\r\n\r\n    > r.expr({x:1, y:2}).map(function (x) { return x; }).run()\r\n    [{key : \"x\", value : 1}, {key : \"y\", value : 2}]\r\n\r\nThis would be the basic operation, then `keys` could just be sugar for:\r\n\r\n    > r.expr({x:1, y:2}).map(function (x) { return x(\"key\"); }).run()\r\n\r\nThis is another case in which macros would be really nice."
  , issueCommentId = 11667345
  }