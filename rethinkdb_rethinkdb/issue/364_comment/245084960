IssueComment
  { issueCommentUpdatedAt = 2016 (-09) (-06) 20 : 44 : 24 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1448194
        , simpleUserLogin = N "jedwards1211"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1448194?v=3"
        , simpleUserUrl = "https://api.github.com/users/jedwards1211"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/245084960"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/364#issuecomment-245084960"
  , issueCommentCreatedAt = 2016 (-09) (-06) 20 : 44 : 24 UTC
  , issueCommentBody =
      "I hope you haven't reached the conclusion that hashed sharding is always better than ranged sharding?\r\n\r\nSharding is my biggest remaining concern about switching to RethinkDB from MongoDB.  Mongo lets users pick whether they want ranged or hashed sharding, and you have a lot of freedom in picking your shard key.  From everything I've read, database applications are too varied for there to be a one-size-fits-all sharding solution.  Why not provide both ranged and hashed sharding in RethinkDB?  If you moved to only hashed sharding I'd completely lose the ability to control read locality.\r\n\r\nMongoDB docs state clearly that monotonically increasing keys are not a good use case for range-based sharding.  Conversely, they explain how while hashed sharding automatically provides good write balancing, it can really hamper query performance for some kinds of data.\r\n\r\nHere are my other concerns:\r\n* The hard limit of 64 shards means the DB will never be able to scale beyond a certain size\r\n* RethinkDB doesn't automatically split and rebalance chunks like MongoDB does \r\n* I assume the sharding is just controlled by the primary key?  The docs are not very explicit about this."
  , issueCommentId = 245084960
  }