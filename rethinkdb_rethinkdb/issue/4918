Issue
  { issueClosedAt = Just 2015 (-10) (-05) 19 : 07 : 31 UTC
  , issueUpdatedAt = 2015 (-10) (-05) 19 : 14 : 32 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4918/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4918"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 4918
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 167416
          , simpleUserLogin = N "VeXocide"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/167416?v=3"
          , simpleUserUrl = "https://api.github.com/users/VeXocide"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Valgrind: Uninitialized data access in cfeed_artificial_table_backend"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4918"
  , issueCreatedAt = 2015 (-10) (-05) 17 : 45 : 34 UTC
  , issueBody =
      Just
        "This was caught intermittently in the table fuzzer test while shutting down the servers:\r\n```\r\n==17856== Thread 26:\r\n==17856== Conditional jump or move depends on uninitialised value(s)\r\n==17856==    at 0x1F5FD84: cfeed_artificial_table_backend_t::maybe_remove_machinery() (cfeed_backend.cc:134)\r\n==17856==    by 0x1F5F31A: _ZZN32cfeed_artificial_table_backend_tC1EvENKUlvE_clEv (cfeed_backend.cc:41)\r\n==17856==    by 0x1F600BC: _ZNSt17_Function_handlerIFvvEZN32cfeed_artificial_table_backend_tC1EvEUlvE_E9_M_invokeERKSt9_Any_data (functional:1778)\r\n==17856==    by 0x170F761: std::function<void ()()>::operator()() const (functional:2161)\r\n==17856==    by 0x1717FA2: call_ringer(std::function<void ()()>) (timing.cc:93)\r\n==17856==    by 0x1718DCD: _ZNSt5_BindIFPFvSt8functionIFvvEEES2_EE6__callIvIEILi0EEEET_OSt5tupleIIDpT0_EESt12_Index_tupleIIXspT1_EEE (functional:1146)\r\n==17856==    by 0x1718D5D: void std::_Bind<void (*()(std::function<void ()()>))(std::function<void ()()>)>::operator()<, void>() (functional:1205)\r\n==17856==    by 0x1718D33: callable_action_instance_t<std::_Bind<void (*()(std::function<void ()()>))(std::function<void ()()>)> >::run_action() (callable_action.hpp:31)\r\n==17856==    by 0x174BF77: callable_action_wrapper_t::run() (runtime_utils.cc:42)\r\n==17856==    by 0x1750A70: coro_t::run() (coroutines.cc:204)\r\n==17856==\r\n```\r\n\r\nFrom a quick look at the code, the one variable in that expression for which I can't verify that it gets initialized is `last_subscriber_time`."
  , issueState = "closed"
  , issueId = Id 109849301
  , issueComments = 4
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Just 2015 (-10) (-05) 07 : 00 : 00 UTC
          , milestoneOpenIssues = 0
          , milestoneNumber = 109
          , milestoneClosedIssues = 17
          , milestoneDescription = Just ""
          , milestoneTitle = "2.1.5"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/109"
          , milestoneCreatedAt = 2015 (-10) (-01) 17 : 45 : 43 UTC
          , milestoneState = "closed"
          }
  }