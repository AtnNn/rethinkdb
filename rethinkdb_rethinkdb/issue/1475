Issue
  { issueClosedAt = Just 2013 (-09) (-23) 21 : 38 : 54 UTC
  , issueUpdatedAt = 2013 (-09) (-23) 21 : 40 : 57 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1475/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/1475"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "02e10c"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:enhancement"
          , labelName = "tp:enhancement"
          }
      ]
  , issueNumber = 1475
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Think about how performance monitoring should work in a cluster"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/1475"
  , issueCreatedAt = 2013 (-09) (-23) 21 : 11 : 09 UTC
  , issueBody =
      Just
        "We currently have \"perfmons\" to monitor different performance-related statistics throughout the database.\n\nOur perfmons were not really designed to work in a cluster. Instead they collect statistics on each node individually. Their results are then aggregated within the cluster before being displayed to the user as far as I understand.\n\nFor some of the perfmons this does not make much sense. For example there is a number of perfmons which measure characteristics of the caches, serializers and i/o backends. Those things are strongly coupled to each node's hardware, and I imagine that it makes more sense to not aggregate them but to make them viewable on a per-node basis.\n\nIn the longer term, it might also be interested to actually implement distributed performance metrics. For example we could measure how much processing time a given query takes on each of the participating nodes as well as the latency of network communication, and then generate statistics (effective time until completion, summed processing time over all nodes etc.) on a per-query basis. There might be some tricky elements in this, such as dealing with different system clocks on different nodes.\nThis might be related to https://github.com/rethinkdb/rethinkdb/issues/329 and https://github.com/rethinkdb/rethinkdb/issues/175?source=cc\n"
  , issueState = "closed"
  , issueId = Id 19941631
  , issueComments = 3
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 26
          , milestoneClosedIssues = 316
          , milestoneDescription =
              Just
                "These issues are neither bugs nor feature requests. Spam, user questions and accidentally created issues end up here."
          , milestoneTitle = "invalid"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/26"
          , milestoneCreatedAt = 2013 (-04) (-05) 01 : 37 : 20 UTC
          , milestoneState = "closed"
          }
  }