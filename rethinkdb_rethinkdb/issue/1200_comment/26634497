IssueComment
  { issueCommentUpdatedAt = 2013 (-10) (-18) 22 : 24 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 139396
        , simpleUserLogin = N "wojons"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/139396?v=3"
        , simpleUserUrl = "https://api.github.com/users/wojons"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/26634497"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1200#issuecomment-26634497"
  , issueCommentCreatedAt = 2013 (-10) (-18) 22 : 24 : 51 UTC
  , issueCommentBody =
      "one thing i am noticed about pluck is it really imporant when you run it. Here are some examples \r\n\r\n```js\r\nr.db('etdemo').table('et_metrics').filter({\"nodeId\" : \"y98sGsEHRQKocICOXoZhkg\"}).limit(100)\r\n```\r\n\r\nThe one above returns pretty fast overall. Applys the filter until it gets 100 matches.\r\n\r\n```js\r\nr.db('etdemo').table('et_metrics').filter({\"nodeId\" : \"y98sGsEHRQKocICOXoZhkg\"}).pluck('logTime').limit(100)\r\n```\r\n\r\nThe one above takes a really long time since its applying the pluck on every result that comes out of the filter but limit is not stopping it. right away.\r\n\r\n```js\r\nr.db('etdemo').table('et_metrics').filter({\"nodeId\" : \"y98sGsEHRQKocICOXoZhkg\"}).limit(100).pluck('logTime')\r\n```\r\n\r\nNow this returns just about as fast as the first one it plucks after the limit has been in effect."
  , issueCommentId = 26634497
  }