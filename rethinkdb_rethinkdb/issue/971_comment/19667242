IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-19) 07 : 31 : 18 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/19667242"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/971#issuecomment-19667242"
  , issueCommentCreatedAt = 2013 (-06) (-19) 07 : 31 : 05 UTC
  , issueCommentBody =
      "Doing the right thing here and bounding based on size is hard.  Not because it's theoretically hard, but because it will require a code audit.  The current interface doesn't prevent people from adding data to other data and then increasing the size of the first datum.\r\n\r\nAlso, I think what we might actually want is per-query memory limits, not per-data-structure memory limits.  That might also be easier to implement, because instead of having to audit all our old code to make sure that we aren't updating something after it might have been added to something else, we just need to make the `datum_t` constructors private and add a helper `new_datum`."
  , issueCommentId = 19667242
  }