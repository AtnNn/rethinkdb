IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-04) 23 : 42 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/54560911"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3009#issuecomment-54560911"
  , issueCommentCreatedAt = 2014 (-09) (-04) 23 : 42 : 52 UTC
  , issueCommentBody =
      "My understanding was that operations are deterministic under http://en.wikipedia.org/wiki/IEEE_floating_point . Is that wrong?\r\n\r\nNote that afaik we don't compile with the `-ffast-math` compiler flag, which would definitely make results not well defined under optimizations. From the GCC man page:\r\n```\r\n-ffast-math\r\n           Sets -fno-math-errno, -funsafe-math-optimizations, -ffinite-math-only, -fno-rounding-math, -fno-signaling-nans and -fcx-limited-range.\r\n\r\n           This option causes the preprocessor macro \"__FAST_MATH__\" to be defined.\r\n\r\n           This option is not turned on by any -O option besides -Ofast since it can result in incorrect output for programs which depend on an exact\r\n           implementation of IEEE or ISO rules/specifications for math functions. It may, however, yield faster code for programs that do not require\r\n           the guarantees of these specifications.\r\n```"
  , issueCommentId = 54560911
  }