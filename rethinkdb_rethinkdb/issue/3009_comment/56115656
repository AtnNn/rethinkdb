IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-18) 23 : 03 : 09 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/56115656"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3009#issuecomment-56115656"
  , issueCommentCreatedAt = 2014 (-09) (-18) 23 : 02 : 35 UTC
  , issueCommentBody =
      "I think we can be reasonably confident that our current code won't produce divergence on our current compilers, but I'd like it if we did something to ensure that doesn't change accidentally. For example, we could do something like this:\r\n* Define `deterministic_add()`, `deterministic_sub()`, etc. functions and then use those wherever we need determinism. They would just be wrappers around `+`, `-`, etc. but implemented in such a way that the compiler can't possibly optimize them out (e.g. `deterministic_add(deterministic_mul(x,y),z)` will never become a fused multiply-add)\r\n* Statically assert that we're using a compiler that obeys our assumptions"
  , issueCommentId = 56115656
  }