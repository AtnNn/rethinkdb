IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-10) 17 : 05 : 56 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 290841
        , simpleUserLogin = N "al3xandru"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/290841?v=3"
        , simpleUserUrl = "https://api.github.com/users/al3xandru"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16187613"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/587#issuecomment-16187613"
  , issueCommentCreatedAt = 2013 (-04) (-10) 17 : 04 : 24 UTC
  , issueCommentBody =
      "Form 4 is my favorite, but considering Ruby and Python consider this invalid we should go with 3. 2 works too (and I think we are using it an a couple of cases where `foo`'s parameter is a lambda.\r\n\r\nI can go through the docs and update them accordingly.\r\n\r\nJust to use the first example in this thread:\r\n\r\n```ruby\r\nr.table('marvel').get('superman'\r\n ).replace(:non_atomic, {:id => 'superman', :age => 30}).run(conn)\r\n```\r\n\r\nI'd write that as:\r\n\r\n```ruby\r\nr.table('marvel').get('superman').\r\n  replace(:non_atomic, {:id => 'superman', :age => 30}).run(conn)\r\n```"
  , issueCommentId = 16187613
  }