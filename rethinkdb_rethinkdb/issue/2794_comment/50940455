IssueComment
  { issueCommentUpdatedAt = 2014 (-08) (-01) 23 : 46 : 32 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 552910
        , simpleUserLogin = N "Tryneus"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/552910?v=3"
        , simpleUserUrl = "https://api.github.com/users/Tryneus"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/50940455"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2794#issuecomment-50940455"
  , issueCommentCreatedAt = 2014 (-08) (-01) 22 : 09 : 58 UTC
  , issueCommentBody =
      "## Proposed API\r\n### Parameters\r\nThis term is run on a table and takes exactly two arguments:\r\n* Argument 0: TABLE\r\n* Argument 1: STRING, old index name\r\n* Argument 2: STRING, new index name\r\n\r\n### Optargs\r\n\r\n* `overwrite`: BOOL (default=`false`), if true and an index with the new name already exists, it will be deleted\r\n\r\n### Return Value\r\n\r\n* If successful, returns the object `{renamed: 1}`.\r\n* If the old and new names are the same, returns the object `{renamed: 0}`.\r\n\r\n### Errors\r\n\r\n* The new index already exists and `overwrite` is false - \"Index `name` already exists on table `db.table`.\"\r\n* The old index does not exist - \"Index `name` does not exist on table `db.table`.\"\r\n* The old or new name is the same as the primary index - \"Index name conflict: `name` is the name of the primary key.\"\r\n"
  , issueCommentId = 50940455
  }