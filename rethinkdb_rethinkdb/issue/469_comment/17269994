IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-01) 06 : 09 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/17269994"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/469#issuecomment-17269994"
  , issueCommentCreatedAt = 2013 (-05) (-01) 06 : 09 : 02 UTC
  , issueCommentBody =
      "Sorry; I assumed you had seen this at some point.\r\n\r\nI was thinking of this mostly as a tool for us, specifically for use with `import_export.rb`.  People presumably know the primary keys of their tables.\r\n\r\nI don't really think of the primary key as an index; it's sort of more fundamental -- your rows HAVE to have an attribute with that name (it can't just be a function of other attributes), it HAS to be unique, and you can't change it.  Secondary indexes have none of those constraints.  So listing it with the secondary indexes seems a little strange to me.\r\n\r\nIf we want to expose this information to users, one option that I kinda like would be to introduce a `.info` term.  Something like:\r\n```ruby\r\nr.table('test').info =>\r\n{:type => \"TABLE\", :name => 'test', :primary_key => 'id', :datacenter => ..., :hard_durability => ..., :cache_size => ...}\r\n```\r\n\r\n"
  , issueCommentId = 17269994
  }