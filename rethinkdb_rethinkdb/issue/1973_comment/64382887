IssueComment
  { issueCommentUpdatedAt = 2014 (-11) (-25) 10 : 55 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 119317
        , simpleUserLogin = N "solatis"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/119317?v=3"
        , simpleUserUrl = "https://api.github.com/users/solatis"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/64382887"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1973#issuecomment-64382887"
  , issueCommentCreatedAt = 2014 (-11) (-25) 10 : 55 : 29 UTC
  , issueCommentBody =
      "Perhaps it's better to think of a language-agnostic approach -- as someone else pointed out, you might want to expose C functions or whatever. As far as I can see, there are two approaches that would work:\r\n\r\n1) embed every interpreted language into RethinkDB\r\n2) use sockets/pipes/whatever to communicate with a subprocess\r\n\r\nFor simple things, the first approach should work fine -- but you're limited but the amount of scripting languages that RethinkDB supports (which could, of course, be plugin-based). \r\n\r\nOn the other hand, if you take a look at projects like Hadoop, a sockets/pipes based approach seems to work very well there with little overhead. Furthermore, it allows *any* language to be used, as long as it uses the same inter-process protocol.\r\n\r\nThe latter option does make things a little more complex, but in my experience is a better approach: if you have shared code across different computation jobs, a separate subprocess works a lot better.\r\n\r\nTo think out of the box: maybe we can take a look at FastCGI and learn some lessons from them? I think they're pretty much solving the same problem."
  , issueCommentId = 64382887
  }