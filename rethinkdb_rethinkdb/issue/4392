Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-02) (-09) 20 : 35 : 28 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4392/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4392"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "ededed"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/cp:web-ui"
          , labelName = "cp:web-ui"
          }
      ]
  , issueNumber = 4392
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add WebUI interface for emergency cluster repair"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4392"
  , issueCreatedAt = 2015 (-06) (-12) 19 : 19 : 30 UTC
  , issueBody =
      Just
        "This would probably involve adding two levels of \"repair\" to the `table_availability` issue box.\n1. If we still have a quorum and there's no data loss, we can suggest reconfiguring to fix the issue\n2. According to rethinkdb/docs#787 the `emergency_repair` command distinguishes between different levels of repair needed. If it doesn't require an emergency repair it raises an exception. If possible, we should hook into this and avoid suggesting emergency repairs when it isn't required.\n\nThe interface would work similarly to the reconfigure interface, where it executes a dry-run and when the user explicitly accepts the configuration it commits it. Obviously, in emergency repair mode, it would have a lot more explicit warnings and explanations of exactly what the consequences would be.\n"
  , issueState = "open"
  , issueId = Id 87825138
  , issueComments = 5
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 268
          , milestoneNumber = 41
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone will be revisited after each major release during the planning stage for the major release after it. They will be moved to a specific release milestone if chosen for that release."
          , milestoneTitle = "subsequent"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/41"
          , milestoneCreatedAt = 2013 (-06) (-30) 07 : 32 : 52 UTC
          , milestoneState = "open"
          }
  }