IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-03) 01 : 29 : 28 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/54241363"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2924#issuecomment-54241363"
  , issueCommentCreatedAt = 2014 (-09) (-03) 01 : 29 : 28 UTC
  , issueCommentBody =
      "I agree with @danielmewes that displaying the key is not acceptable. I'm not sure how much of a security issue it is (because as you pointed out, you need access to the server to read the value), but it's a huge *perceived* issue, and psychology matters a lot.\r\n\r\nI prefer the API where we allow users to write the key to the config document, but reading back a booleanish value (e.g. `true` if the key is present, `null` otherwise). I think it's a much nicer API from a UX perspective than adding a dedicated command.\r\n\r\n> If we allow both reading and writing the auth key through this interface, we should use the same format for both.\r\n\r\nI would normally agree, but I think there are cases where breaking this rule results in a better experience, and I think this is such a case. Could you consider this more deeply with this in mind? (I.e. it's a really good rule of thumb, but it's also worth selectively breaking such rules when it makes good sense)"
  , issueCommentId = 54241363
  }