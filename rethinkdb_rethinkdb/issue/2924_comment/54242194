IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-03) 01 : 44 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/54242194"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2924#issuecomment-54242194"
  , issueCommentCreatedAt = 2014 (-09) (-03) 01 : 43 : 48 UTC
  , issueCommentBody =
      "> This can also break in some weird ways. For example, what happens if the user writes `true` or `\"<hidden>\"` or whatevver to the field?\r\n\r\nI think that's why we should return a booleanish value but only let them write a string or `null`. If the user tries to write anything other than a string or `null` -- they get an error. When they read, they get a different type (`true`) that they can't write back (because they'd get an error). If the key isn't set, they'd read `null`, which they can then write back.\r\n\r\nI don't think `true`/`null` is a bad UI -- it's pretty clear what's going on (and we'll document it well)."
  , issueCommentId = 54242194
  }