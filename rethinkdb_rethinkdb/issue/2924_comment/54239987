IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-03) 01 : 07 : 49 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/54239987"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2924#issuecomment-54239987"
  , issueCommentCreatedAt = 2014 (-09) (-03) 01 : 07 : 49 UTC
  , issueCommentBody =
      "To read the `cluster_config` table, the user already needs access to the server, which means they either know the auth key already or they have access to the web UI. If they have access to the web UI, they can already read and write arbitrary tables. So I don't think it opens any new security holes, although I'm not 100% certain.\r\n\r\nIf we allow both reading and writing the auth key through this interface, we should use the same format for both. So I'm opposed to displaying a salted hash. If we decide this is a security flaw, I think the correct solution is to add a `set_auth_key()` API call, then make `rethinkdb.cluster_config.auth` show a read-only boolean."
  , issueCommentId = 54239987
  }