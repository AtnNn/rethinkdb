IssueComment
  { issueCommentUpdatedAt = 2014 (-09) (-03) 01 : 19 : 13 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/54240679"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/2924#issuecomment-54240679"
  , issueCommentCreatedAt = 2014 (-09) (-03) 01 : 18 : 41 UTC
  , issueCommentBody =
      "Regarding storing a salted hash: We probably wouldn't perform the salting and hashing transparently. Instead we would expect the user to write the readily hashed value into the table (in a format such as `\"<salt>/<hash>\"` or `{salt: <salt>, hash: <hash>}`). This would have to be accompanied by a ReQL command such as `mk_auth_key()`.\r\nThat interface doesn't seem very intuitive though. Which in turn makes me think that having a dedicated `set_auth_key()` function would be preferable over exposing the auth key configuration in a pseudo table. The latter restricts our future options for changing how auth keys work internally."
  , issueCommentId = 54240679
  }