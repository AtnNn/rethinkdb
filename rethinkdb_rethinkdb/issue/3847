Issue
  { issueClosedAt = Just 2015 (-02) (-27) 07 : 22 : 25 UTC
  , issueUpdatedAt = 2015 (-02) (-27) 07 : 22 : 25 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3847/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3847"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "fbda04"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/st:review"
          , labelName = "st:review"
          }
      , IssueLabel
          { labelColor = "e102d8"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:bug"
          , labelName = "tp:bug"
          }
      ]
  , issueNumber = 3847
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Server segfaults in various tests, including error_tolerant.more-or-less (regression)"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3847"
  , issueCreatedAt = 2015 (-02) (-27) 02 : 08 : 25 UTC
  , issueBody =
      Just
        "```\n1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:100\n2: backtrace_t::backtrace_t() at backtrace.cc:203\n3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:283\n4: format_backtrace(bool) at backtrace.cc:198\n5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\n6: linux_thread_pool_t::sigsegv_handler(int, siginfo*, void*) at thread_pool.cc:343\n7: /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7f5f01c68cb0] at 0x7f5f01c68cb0 (/lib/x86_64-linux-gnu/libpthread.so.0)\n8: counted_t<ql::protob_pointee_t>::counted_t(counted_t<ql::protob_pointee_t> const&) at counted.hpp:35\n9: counted_t<ql::protob_pointee_t>::counted_t(counted_t<ql::protob_pointee_t> const&) at counted.hpp:37\n10: ql::protob_t<Query>::protob_t(ql::protob_t<Query> const&) at counted_term.hpp:56\n11: ql::protob_t<Query>::protob_t(ql::protob_t<Query> const&) at counted_term.hpp:56\n12: should_reply(ql::protob_t<Query> const&) at protob.cc:470\n13: void query_server_t::connection_loop<json_protocol_t>(linux_tcp_conn_t*, unsigned long, ql::query_cache_t*, signal_t*) at protob.cc:565\n14: query_server_t::handle_conn(scoped_ptr_t<linux_tcp_conn_descriptor_t> const&, auto_drainer_t::lock_t) at protob.cc:401\n[...]\n```\n\nI already have a fix, just wanted to put up an issue for reference.\n"
  , issueState = "closed"
  , issueId = Id 59178673
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 89
          , milestoneClosedIssues = 117
          , milestoneDescription = Just ""
          , milestoneTitle = "2.0"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/89"
          , milestoneCreatedAt = 2015 (-01) (-26) 07 : 45 : 17 UTC
          , milestoneState = "closed"
          }
  }