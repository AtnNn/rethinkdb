Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 20 : 13 : 45 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3793/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/3793"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 3793
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add generic sorting"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/3793"
  , issueCreatedAt = 2015 (-02) (-17) 23 : 03 : 13 UTC
  , issueBody =
      Just
        "We currently only let people sort based on fields of objects:\n\n``` rb\nr([{id: 2}, {id: 1}]).orderby('id') => [{id: 1}, {id: 2}]\n```\n\nBut I frequently find myself wanting to do this:\n\n``` rb\nr([2, 1]).SOMETHING => [1, 2]\n```\n\nI'd like to make two proposals:\n1. Let `orderby` take a function, and have it default to the identity function if no arguments are passed.\n\n``` rb\nr([2, 1]).orderby{|x| x} => [1, 2]\nr([2, 1].orderby => [1, 2]\n```\n1. Implement a `sort` term which takes a generic `<` function (which defaults to ReQL `<`):\n\n``` rb\nr([2, 1]).sort{|a,b| a<b} => [1, 2]\nr([2, 1]).sort => [1, 2]\n```\n\n@danielmewes -- I scheduled this for 2.0 because it's been irritating the hell out of me, but I wouldn't object too strongly if we had to bump it to subsequent.\n"
  , issueState = "open"
  , issueId = Id 57996602
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }