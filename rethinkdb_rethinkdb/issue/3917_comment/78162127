IssueComment
  { issueCommentUpdatedAt = 2015 (-03) (-10) 22 : 26 : 52 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/78162127"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3917#issuecomment-78162127"
  , issueCommentCreatedAt = 2015 (-03) (-10) 22 : 26 : 52 UTC
  , issueCommentBody =
      "I couldn't reproduce this, but looking at the code I think we can fix this by just adding an `auto_drainer_t::lock_t` on the `client_t` to `real_feed_t`.  I'm fairly certain that at some point during shutdown all the `real_feed_t`s will be destroyed and the `client_t` can then be destroyed, but since I couldn't reproduce the original crash it's theoretically possible that in that case shutdown would just hang forever rather than crashing.\r\n\r\nAnyway, that fix is up in CR 2704 by @VeXocide .  @VeXocide, can you reproduce this reliably enough for us to test whether the fix causes hanging in the case that currently crashes?"
  , issueCommentId = 78162127
  }