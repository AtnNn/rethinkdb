IssueComment
  { issueCommentUpdatedAt = 2015 (-05) (-21) 01 : 22 : 02 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/104089368"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4250#issuecomment-104089368"
  , issueCommentCreatedAt = 2015 (-05) (-21) 01 : 22 : 02 UTC
  , issueCommentBody =
      "Woot! Thanks. I'll make this change tomorrow\n\nOn Wed, May 20, 2015 at 5:52 PM Joe Haddad <notifications@github.com> wrote:\n\n> @deontologician <https://github.com/deontologician> I've saved you the\n> trouble and tracked down the issue.\n>\n> Basically, due to the asynchronous nature of the code, calling a second\n> close on the connection before the [nodejs/iojs] event loop has a chance to\n> loop results in it registering a duplicate event listener (small bug).\n>\n>           if (_this.rawSocket != null) {\n>             _this.rawSocket.once(\"close\", function() {\n>               closeCb();\n>               _this.rawSocket.removeAllListeners();\n>               return _this.rawSocket = null;\n>             });\n>             return _this.rawSocket.end();\n>           } else {\n>             return process.nextTick(closeCb);\n>           }\n>\n> The first event listener invokes a method on the rawSocket, then nulls it.\n> Then the second (duplicate) listener then attempts to perform the same\n> actions, but finds itself with a null object! I've presented two solutions,\n> choose which you prefer.\n> p.s. I use the term duplicate and bug because there is a check (if\n> @rawSocket?), but it doesn't account for the asynchronous execution.\n> Short and sweet\n>\n> diff --git a/drivers/javascript/net.coffee b/drivers/javascript/net.coffee\n> index 540735b..6f07365 100644--- a/drivers/javascript/net.coffee+++ b/drivers/javascript/net.coffee@@ -1133,7 +1133,8 @@ class TcpConnection extends Connection\n>                          # called in response to the rawSocket 'close'\n>                          # event, we need to additionally clean up the\n>                          # rawSocket.-                        @rawSocket.removeAllListeners()+                        if @rawSocket?+                          @rawSocket.removeAllListeners()\n>                          @rawSocket = null\n>                      )\n>                      @rawSocket.end()\n>\n> A more round-about way of fixing the problem\n>\n> diff --git a/drivers/javascript/net.coffee b/drivers/javascript/net.coffee\n> index 540735b..8b86c9a 100644--- a/drivers/javascript/net.coffee+++ b/drivers/javascript/net.coffee@@ -1127,16 +1127,18 @@ class TcpConnection extends Connection\n>                      else\n>                          resolve result\n>                  if @rawSocket?-                    @rawSocket.once(\"close\", =>+                    localSocket = @rawSocket+                    @rawSocket = null+                    localSocket.once(\"close\", =>\n>                          closeCb()\n>                          # In the case where we're actually being\n>                          # called in response to the rawSocket 'close'\n>                          # event, we need to additionally clean up the\n>                          # rawSocket.-                        @rawSocket.removeAllListeners()-                        @rawSocket = null+                        localSocket.removeAllListeners()+                        return\n>                      )-                    @rawSocket.end()+                    localSocket.end()\n>                  else\n>                      # If the rawSocket is already closed, there's no\n>                      # reason to wait for a 'close' event that will\n>\n> \8212\n> Reply to this email directly or view it on GitHub\n> <https://github.com/rethinkdb/rethinkdb/issues/4250#issuecomment-104083368>\n> .\n>\n"
  , issueCommentId = 104089368
  }