IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-26) 23 : 28 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/71560782"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3663#issuecomment-71560782"
  , issueCommentCreatedAt = 2015 (-01) (-26) 23 : 28 : 39 UTC
  , issueCommentBody =
      "I'd forbid `r.table(...).index(...)` with nothing chained after it, because of the analogy with tables. For tables, `r.table(...)` returns contents and `r.table(...).config()` returns metadata. The index's opaque representation is metadata, not content. So I'd make `r.table(...).index(...)` produce an error and ``r.table(...).index(...).config()` return a document with the opaque representation. We could also make `.config()` return a writable `name` field to replace `index_rename()`.\r\n\r\nFor `.wait()`, I'd forbid `r.table(...).wait(indexes=[...])` and instead have the user do `r.table(...).index(...).wait()` if they want to wait on a specific index. I think it's rare that people want to wait on more than one index but not all of the indexes, so I don't see a reason to offer a special syntax for it.\r\n\r\nI think this can wait for v2.1."
  , issueCommentId = 71560782
  }