IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-27) 21 : 02 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135554128"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/4636#issuecomment-135554128"
  , issueCommentCreatedAt = 2015 (-08) (-27) 21 : 02 : 11 UTC
  , issueCommentBody =
      "I think it might be better to add new terms for schemes that are very different.\r\n\"uuid\" is usually associated with a specific set standards for ID generation (https://en.wikipedia.org/wiki/Universally_unique_identifier#Standards), so I think things like the 'ordered' UUID that was proposed in https://github.com/rethinkdb/rethinkdb/issues/117#issuecomment-55217480 might not be a great fit for the `r.uuid` term.\r\n\r\nThere is another part to #117 which is supporting a more compact representation of UUIDs (i.e. not as a human-readable string, but something shorter). That part would still work well with this patch, assuming the representation will be changed through an optarg.\r\n\r\nIt's a bit hard to say given that #117 is still in flux, but as things are now, I have a slight preference for keeping the patch as it is. It feels nicer to write `r.uuid(name)` than `r.uuid({name: name})`."
  , issueCommentId = 135554128
  }