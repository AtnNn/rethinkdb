IssueComment
  { issueCommentUpdatedAt = 2015 (-08) (-27) 23 : 03 : 43 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/135578695"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/4636#issuecomment-135578695"
  , issueCommentCreatedAt = 2015 (-08) (-27) 23 : 03 : 43 UTC
  , issueCommentBody =
      "With using arbitrary objects as the seed, we probably need some predetermined and unchanging way to generate the final string that gets hashed to a uuid. So we'd need to provide a contract along the lines of \"The json serialized version of the object, with keys alphabetized and pseudotypes serialized like so...\".\r\n\r\nAlternately, we could define it as however they're serialized now when we order things lexicographically for indexes."
  , issueCommentId = 135578695
  }