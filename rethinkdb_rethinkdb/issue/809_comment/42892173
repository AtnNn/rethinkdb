IssueComment
  { issueCommentUpdatedAt = 2014 (-05) (-12) 21 : 42 : 04 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/42892173"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/809#issuecomment-42892173"
  , issueCommentCreatedAt = 2014 (-05) (-12) 21 : 41 : 44 UTC
  , issueCommentBody =
      "I wonder how MongoDB actually does this...\r\nA simple way to make an operation `r.table('foo').between(i, j, index='a').between(k, l, index='b')` a lot more efficient compared to how it would be processed now, is by having the first between only gather the primary keys from the sindex tree. It wouldn't have to load any large values for doing that. The primary keys can be stored into some kind of hash set. Then the second between would traverse index 'b' between the limits k and l, but only load values that are in the hash set.\r\n\r\nAdditional `between`s can be added in the middle. Those would remove non-existent primary keys from the hash set."
  , issueCommentId = 42892173
  }