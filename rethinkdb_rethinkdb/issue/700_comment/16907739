IssueComment
  { issueCommentUpdatedAt = 2013 (-04) (-24) 04 : 39 : 51 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/16907739"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/700#issuecomment-16907739"
  , issueCommentCreatedAt = 2013 (-04) (-24) 04 : 39 : 51 UTC
  , issueCommentBody =
      "I actually think this is going to lead to a really annoying workflow. Suppose I'm trying to merge a branch in I push it to github and wait for travis tests to run. This takes about 15 minutes. Then I go to request a merge but find that someone else has pushed to next in that time so I merge in next, push and wait another 15 minutes while a new set of travis tests run all the while hoping that no one pushes to next during this time. Not being able to close something out is just terrible for developers and adds mental overhead. Furthermore during periods of heavy commit traffic, like at the end of sprints when people are already the most stressed, this problem is just going to compound. I could easily see someone getting locked out of pushing for an hour with this system.\r\n\r\nI do agree with the sentiment though. Let's do something low tech. Add a single script which sanitizes a commit basically doing what travis does. And writes a file somewhere locally with the hash of the commit it just verified. Then add a pre-push hook which makes sure the commit you're trying to push is the one in the file. I like this for a couple of reasons:\r\n\r\n1. for those devs who are diligent about running tests before they push nothing changes\r\n2. tests run on newton so they're a lot faster and we control the system. we're not screwed if travis goes down\r\n3. it's low tech enough that we can all understand it and override it in exceptional situations"
  , issueCommentId = 16907739
  }