IssueComment
  { issueCommentUpdatedAt = 2013 (-07) (-30) 08 : 52 : 28 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 34433
        , simpleUserLogin = N "fuwaneko"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/34433?v=3"
        , simpleUserUrl = "https://api.github.com/users/fuwaneko"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/21777540"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1211#issuecomment-21777540"
  , issueCommentCreatedAt = 2013 (-07) (-30) 08 : 52 : 28 UTC
  , issueCommentBody =
      "@wmrowan Okay, it seems there is a better solution than typeof: ```Object.prototype.toString.call(perhapsOptDict)```. It will return \"[object Object]\". Unfortunately for TermBase instance it will return \"[object Function]\". There's an article with some references on this problem: http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/"
  , issueCommentId = 21777540
  }