IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-07) 01 : 22 : 35 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 265071
        , simpleUserLogin = N "kofalt"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/265071?v=3"
        , simpleUserUrl = "https://api.github.com/users/kofalt"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73342497"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3709#issuecomment-73342497"
  , issueCommentCreatedAt = 2015 (-02) (-07) 01 : 22 : 35 UTC
  , issueCommentBody =
      "> We could still send the ready key once we are done with all initial results, but we might send some update events (with both old_val and new_val) even before that point.\r\n\r\nThat strikes me as a reasonable compromise, as long as there's an unambiguous way to distinguish a query result from a changefeed event. My current understanding would accomplish that by checking for the existence of an `old_val` key.\r\n\r\n> I think we might want to have a more general interface where when you call query.changes(note_states: true), you will get documents telling you what state the changefeed is in.\r\n\r\nWe've implicitly already agreed on this, but I would definitely want those status notifications to be separate documents, and not attached to query/change documents."
  , issueCommentId = 73342497
  }