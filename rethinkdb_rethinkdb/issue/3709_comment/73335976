IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-07) 00 : 02 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/73335976"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3709#issuecomment-73335976"
  , issueCommentCreatedAt = 2015 (-02) (-07) 00 : 02 : 45 UTC
  , issueCommentBody =
      "I think we should do what @kofalt suggested, but with the relaxed semantics @danielmewes mentioned (i.e. you might get some changes before the `{ready: true}` document, but when you get the document you'll be up-to-date).\r\n\r\nThe only thing that I think is left to discuss here is names and generality.  I think we might want to have a more general interface where when you call `query.changes(note_states: true)`, you will get documents telling you what state the changefeed is in.  Right now the states would be `{state: 'initializing'}` and `{state: 'ready'}`, but we could add more in the future.  For example, if we decide to support resumable changefeeds with backfilling semantics, we could add a `{state: 'backfiling'}` or something."
  , issueCommentId = 73335976
  }