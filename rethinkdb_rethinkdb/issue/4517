Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-04) (-29) 20 : 27 : 29 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4517/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/4517"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "0052cc"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/labels/tp:ReQL_proposal"
          , labelName = "tp:ReQL_proposal"
          }
      ]
  , issueNumber = 4517
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 273857
        , simpleUserLogin = N "andyburke"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/273857?v=3"
        , simpleUserUrl = "https://api.github.com/users/andyburke"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Add a method akin to cursor.hasNext()"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/4517"
  , issueCreatedAt = 2015 (-07) (-08) 19 : 18 : 46 UTC
  , issueBody =
      Just
        "It would be nice to have a simple, straightforward way to know if a cursor has any (more) items. \n\nCoercing it to an array and checking for that array to be empty is not (I wouldn't think) efficient, especially if there many records.\n\nThe existing each() and next() methods don't make this easy or straightforward.\n\nThe use case I am looking at right now is checking for existing users in a database who have the same email address or phone number. Currently, I am doing:\n\n``` javascript\n        var error = null;\n        var existing = null;\n        cursor.each( function( _error, _user ) {\n            error = _error;\n            existing = _user;\n            cursor.close();\n        }, function() {\n            if ( error ) {\n                callback( error );\n                return;\n            }\n\n            if ( existing ) {\n                callback( 'Existing user!' );\n            }\n\n            callback();\n        } );\n```\n\nIt would be much nicer to be able to do:\n\n``` javascript\n    if ( cursor.hasNext() ) {\n        callback( 'Existing user!' );\n        return;\n    }\n```\n\nIf, however, it needs to be asynchronous, it still seems more straightforward than the each()/cursor.close() construction above:\n\n``` javascript\n    cursor.hasNext( function( error, hasNext ) {\n        callback( hasNext ? 'Existing user!' : error );\n    } );\n```\n"
  , issueState = "open"
  , issueId = Id 93867964
  , issueComments = 18
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 48436
                , simpleUserLogin = N "coffeemug"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/48436?v=3"
                , simpleUserUrl = "https://api.github.com/users/coffeemug"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 882
          , milestoneNumber = 2
          , milestoneClosedIssues = 0
          , milestoneDescription =
              Just
                "Issues in this milestone are not an immediate priority, and will be periodically revisited. When we decide to work on an issue in backlog, we'll move it to next."
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/2"
          , milestoneCreatedAt = 2012 (-11) (-11) 14 : 16 : 11 UTC
          , milestoneState = "open"
          }
  }