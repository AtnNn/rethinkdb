Issue
  { issueClosedAt = Just 2016 (-07) (-16) 03 : 06 : 20 UTC
  , issueUpdatedAt = 2016 (-07) (-18) 11 : 55 : 41 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5954/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/5954"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 5954
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 863056
        , simpleUserLogin = N "rsantosdev"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/863056?v=3"
        , simpleUserUrl = "https://api.github.com/users/rsantosdev"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Backup whole cluster - alternative"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/5954"
  , issueCreatedAt = 2016 (-07) (-14) 18 : 06 : 40 UTC
  , issueBody =
      Just
        "We have a 3 machine cluster running on docker cloud (AWS host). We spin a container to make backups every hour of our database. Everything is working fine.\n\nExcept that we have a small database and during the bkp time the reads go up 15k and makes major of system queries to run slowly.\n\nThe bkp log:\n\n```\n1476078 rows exported from 25 tables, with 70 secondary indexes\nDone (213 seconds)\n```\n\nThe data of exporting some key tables\n\n```\n{\n  \"new_val\": {\n    \"duration_sec\": 193.228456,\n    \"id\": [\n      \"query\",\n      \"17b3296e-e380-412a-b970-4e23416de7d4\"\n    ],\n    \"info\": {\n      \"client_address\": \"::ffff:10.7.0.47\",\n      \"client_port\": 53419,\n      \"query\": \"r.db().table().orderBy({\\\"index\\\": \\\"id\\\"})\"\n    },\n    \"servers\": [\n      \"rethinkdb_1\"\n    ],\n    \"type\": \"query\"\n  },\n  \"old_val\": {\n    \"duration_sec\": 192.226475,\n    \"id\": [\n      \"query\",\n      \"17b3296e-e380-412a-b970-4e23416de7d4\"\n    ],\n    \"info\": {\n      \"client_address\": \"::ffff:10.7.0.47\",\n      \"client_port\": 53419,\n      \"query\": \"r.db().table().orderBy({\\\"index\\\": \\\"id\\\"})\"\n    },\n    \"servers\": [\n      \"rethinkdb_1\"\n    ],\n    \"type\": \"query\"\n  }\n}\n```\n\nMy question is since I have a single database in my cluster and I want always bkp the full database, would be better bkp the filesystem in this case ?! Is this possible ?! How can I recover the database in that scenario ?!\n"
  , issueState = "closed"
  , issueId = Id 165622995
  , issueComments = 2
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 0
          , milestoneNumber = 19
          , milestoneClosedIssues = 175
          , milestoneDescription =
              Just
                "It's a feature. The issue describes a RethinkDB feature or design choice as if it was a bug."
          , milestoneTitle = "notabug"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/19"
          , milestoneCreatedAt = 2013 (-03) (-29) 21 : 07 : 05 UTC
          , milestoneState = "closed"
          }
  }