IssueComment
  { issueCommentUpdatedAt = 2013 (-01) (-30) 02 : 17 : 05 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/12870545"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/260#issuecomment-12870545"
  , issueCommentCreatedAt = 2013 (-01) (-30) 02 : 17 : 05 UTC
  , issueCommentBody =
      "This is one of many open bugs in the old driver. The development of the old driver was flawed in many ways and for that I'm sorry. Rather than spending a lot of time fixing all these problems at the surface, the decision was made a while ago to really fix the underlying problems that lead to such crappy software (one of the reasons I love this company is that I'm allowed to do this) and we've been re-writing all three drivers from protobuf spec up. The new drivers are almost complete and fortunately, despite much less time spent testing, the new JS driver is already a lot less buggy. This is for a number of reasons:\r\n\r\n1. Much of the functionality has been moved to the server, limiting the amount of driver code that can break\r\n*  The new protobuf spec is much simpler, further allowing the unification of code paths\r\n*  Our API is much more stable now, unlike before when we had to adjust to a shifting feature set\r\n*  The server is now responsible for much more of the error checking. The new found flexibility of the protobuf spec means that pretty much anything that can be constructed through the driver API can be serialized and sent to the server (otherwise valid or now), resulting in fewer cryptic errors on the client and more standardized errors from the sever.\r\n*  The new driver relies much less on Closure and isn't compiled. That was probably the biggest mistake made the first time around.\r\n\r\nThis all has made development of the new driver much simpler, speedier, and less error prone. If you want to try it out, checkout the branch `ql-refactor`. "
  , issueCommentId = 12870545
  }