Issue
  { issueClosedAt = Just 2014 (-06) (-24) 19 : 49 : 46 UTC
  , issueUpdatedAt = 2014 (-06) (-26) 16 : 43 : 17 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2595/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/rethinkdb/issues/2595"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 2595
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "occasional assertion failure when running connections/connection.py test on Python2.6"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/2595"
  , issueCreatedAt = 2014 (-06) (-24) 19 : 32 : 52 UTC
  , issueBody =
      Just
        "Occasionally (more than 1 in 5 times) I am seeing an assertion failure on the server when running the `test_connect_close_expr` sub-test in connections/connection.py test, but only when the driver is running with Python2.6. I am using the `larkost/2531-python-3` branch, but there are no changes in the server on that branch. The most recent `next` checkin is a264830, and I am seeing this mostly on newton, but have seen it locally (MacOS) as well. Running the driver on Python 2.7 or 3.2 does not seem to tickle the bug.\r\n\r\nTo get the error I invoke test-runner thus (using new behavior introduced in this branch):\r\n```\r\n./test-runner -i py2.6 connections/connection.py\r\n```\r\nAlternately off this branch the command should be:\r\n```\r\n./test-runner -i py --python /usr/bin/python2.6 connections/connection.py\r\n```\r\n\r\nAnd finally the contents of the backtrace:\r\n\r\n```\r\n======================================================================\r\nERROR: test_connect_close_expr (__main__.TestConnection)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/ssd2/larkost/rethinkdb/test/rql_test/connections/connection.py\", line 257, in tearDown\r\n    self.servers.__exit__(None, None, None)\r\n  File \"/home/ssd2/larkost/rethinkdb/test/rql_test/connections/../test_util.py\", line 42, in __exit__\r\n    self.stop()\r\n  File \"/home/ssd2/larkost/rethinkdb/test/rql_test/connections/../test_util.py\", line 55, in stop\r\n    server.stop()\r\n  File \"/home/ssd2/larkost/rethinkdb/test/rql_test/connections/../test_util.py\", line 193, in stop\r\n    raise Exception(\"Error: rethinkdb process %d failed with error code %d\\n%s\" % (self.cpp_server.pid, code, logOutput))\r\nException: Error: rethinkdb process 13932 failed with error code -5\r\ninfo: Our machine ID: 693c476d-eec8-46be-af79-08484227a859\r\ninfo: Created directory '/home/ssd2/larkost/rethinkdb/test/rql_test/run/server_43018/rdb' and a metadata file inside it.\r\ninfo: Running rethinkdb 1.13.0-315-g075f8d (debug) (GCC 4.6.3)...\r\ninfo: Running on Linux 3.2.0-61-generic x86_64\r\ninfo: Using cache size of 20187 MB\r\ninfo: Loading data from directory /home/ssd2/larkost/rethinkdb/test/rql_test/run/server_43018/rdb\r\ninfo: Our machine ID is 693c476d-eec8-46be-af79-08484227a859\r\ninfo: Listening for intracluster connections on port 60061\r\ninfo: Attempting connection to 1 peer...\r\ninfo: Connected to server \"newton_xqd\" ec932ee2-6640-455a-b010-c55f1f901efe\r\ninfo: Listening for client driver connections on port 43018\r\ninfo: Listening for administrative HTTP connections on port 54702\r\ninfo: Listening on addresses: 127.0.0.1, 127.0.1.1, ::1\r\ninfo: To fully expose RethinkDB on the network, bind to all addresses\r\ninfo: by running rethinkdb with the `--bind all` command line option.\r\ninfo: Server ready\r\ninfo: Connected to server \"newton_my1\" 945ebd38-582b-4867-ae80-655b9185eba6\r\ninfo: Connected to server \"newton_2ws\" ac8ed49c-9432-4a36-a8be-2f223f1b1432\r\ninfo: Server got SIGTERM from pid 8132, uid 1016; shutting down...\r\ninfo: Shutting down client connections...\r\ninfo: All client connections closed.\r\nVersion: rethinkdb 1.13.0-315-g075f8d (debug) (GCC 4.6.3)\r\nerror: Error in ./src/containers/scoped.hpp at line 189:\r\nerror: Assertion failed: [ptr_] \r\nerror: Backtrace:\r\nerror: Tue Jun 24 11:14:45 2014\r\n       \r\n       1: rethinkdb_backtrace(void**, int) at rethinkdb_backtrace.cc:101\r\n       2: backtrace_t::backtrace_t() at backtrace.cc:202\r\n       3: lazy_backtrace_formatter_t::lazy_backtrace_formatter_t() at backtrace.cc:282\r\n       4: format_backtrace(bool) at backtrace.cc:197\r\n       5: report_fatal_error(char const*, int, char const*, ...) at errors.cc:83\r\n       6: scoped_array_t<object_buffer_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > > >::operator[](unsigned long) const at scoped.hpp:189\r\n       7: one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >::get() at one_per_thread.hpp:77\r\n       8: /home/ssd2/larkost/rethinkdb/build/debug/rethinkdb() [0x16783cb] at 0x16783cb ()\r\n       9: void std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)>::__call<void, , 0, 1, 2, 3>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3>) at functional:1146\r\n       10: void std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       11: callable_action_instance_t<std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:28\r\n       12: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       13: coro_t::run() at coroutines.cc:199\r\n       14: coro_t* coro_t::spawn_later_ordered<std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)> >(std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)> const&) at coroutines.hpp:68\r\n       15: void coro_t::spawn_ordered<std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)> >(std::_Bind<void (*(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > >, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t))(std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > const&, one_per_thread_t<std::map<uuid_u, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > >, std::less<uuid_u>, std::allocator<std::pair<uuid_u const, std::map<key_range_t, uuid_u, std::less<key_range_t>, std::allocator<std::pair<key_range_t const, uuid_u> > > > > > >*, int, auto_drainer_t::lock_t)> const&) at coroutines.hpp:76\r\n       16: namespace_repo_t::on_namespaces_change() at namespace_interface_repository.cc:166\r\n       17: boost::_mfi::mf0<void, namespace_repo_t>::operator()(namespace_repo_t*) const at mem_fn_template.hpp:50\r\n       18: void boost::_bi::list1<boost::_bi::value<namespace_repo_t*> >::operator()<boost::_mfi::mf0<void, namespace_repo_t>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf0<void, namespace_repo_t>&, boost::_bi::list0&, int) at bind.hpp:254\r\n       19: boost::_bi::bind_t<void, boost::_mfi::mf0<void, namespace_repo_t>, boost::_bi::list1<boost::_bi::value<namespace_repo_t*> > >::operator()() at bind_template.hpp:21\r\n       20: std::_Function_handler<void (), boost::_bi::bind_t<void, boost::_mfi::mf0<void, namespace_repo_t>, boost::_bi::list1<boost::_bi::value<namespace_repo_t*> > > >::_M_invoke(std::_Any_data const&) at functional:1780\r\n       21: std::function<void ()>::operator()() const at functional:2162\r\n       22: semilattice_manager_t<cluster_semilattice_metadata_t>::call_function_with_no_args(std::function<void ()> const&) at semilattice_manager.tcc:410\r\n       23: void publisher_controller_t<std::function<void ()> >::publish<void (*)(std::function<void ()> const&)>(void (* const&)(std::function<void ()> const&)) at pubsub.hpp:139\r\n       24: semilattice_manager_t<cluster_semilattice_metadata_t>::join_metadata_locally(cluster_semilattice_metadata_t) at semilattice_manager.tcc:417\r\n       25: semilattice_manager_t<cluster_semilattice_metadata_t>::deliver_metadata_on_home_thread(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t) at semilattice_manager.tcc:344\r\n       26: std::_Mem_fn<void (semilattice_manager_t<cluster_semilattice_metadata_t>::*)(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)>::operator()(semilattice_manager_t<cluster_semilattice_metadata_t>*, peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t) const at functional:551\r\n       27: void std::_Bind<std::_Mem_fn<void (semilattice_manager_t<cluster_semilattice_metadata_t>::*)(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> (semilattice_manager_t<cluster_semilattice_metadata_t>*, peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)>::__call<void, , 0, 1, 2, 3, 4>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3, 4>) at functional:1146\r\n       28: void std::_Bind<std::_Mem_fn<void (semilattice_manager_t<cluster_semilattice_metadata_t>::*)(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> (semilattice_manager_t<cluster_semilattice_metadata_t>*, peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       29: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (semilattice_manager_t<cluster_semilattice_metadata_t>::*)(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> (semilattice_manager_t<cluster_semilattice_metadata_t>*, peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:28\r\n       30: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       31: coro_t::run() at coroutines.cc:199\r\n       32: coro_t* coro_t::spawn_sometime<std::_Bind<std::_Mem_fn<void (semilattice_manager_t<cluster_semilattice_metadata_t>::*)(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> (semilattice_manager_t<cluster_semilattice_metadata_t>*, peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (semilattice_manager_t<cluster_semilattice_metadata_t>::*)(peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> (semilattice_manager_t<cluster_semilattice_metadata_t>*, peer_id_t, cluster_semilattice_metadata_t, unsigned long, auto_drainer_t::lock_t)> const&) at coroutines.hpp:58\r\n       33: semilattice_manager_t<cluster_semilattice_metadata_t>::on_message(peer_id_t, cluster_version_t, read_stream_t*) at semilattice_manager.tcc:253\r\n       34: message_multiplexer_t::run_t::on_message(peer_id_t, cluster_version_t, read_stream_t*) at multiplexer.cc:39\r\n       35: connectivity_cluster_t::run_t::handle(keepalive_tcp_conn_stream_t*, boost::optional<peer_id_t>, boost::optional<peer_address_t>, auto_drainer_t::lock_t, bool*) at cluster.cc:937\r\n       36: connectivity_cluster_t::run_t::connect_to_peer(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*) at cluster.cc:333\r\n       37: std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)>::operator()(connectivity_cluster_t::run_t*, peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*) const at functional:551\r\n       38: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)>::__call_c<void, int&, 0, 1, 2, 3, 4, 5, 6>(std::tuple<int&>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6>) const at functional:1155\r\n       39: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)>::operator()<int&, void>(int&&&) const at functional:1220\r\n       40: pmap_runner_one_arg_t<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)>, int>::operator()() at pmap.hpp:19\r\n       41: callable_action_instance_t<pmap_runner_one_arg_t<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)>, int> >::run_action() at callable_action.hpp:28\r\n       42: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       43: coro_t::run() at coroutines.cc:199\r\n       44: void coro_t::spawn_now_dangerously<pmap_runner_one_arg_t<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)>, int> >(pmap_runner_one_arg_t<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)>, int> const&) at coroutines.hpp:52\r\n       45: void pmap<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)> >(int, int, std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)> const&) at pmap.hpp:41\r\n       46: void pmap<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)> >(int, std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t const*, int, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, co_semaphore_t*)> (connectivity_cluster_t::run_t*, peer_address_t const*, std::_Placeholder<1>, boost::optional<peer_id_t>, auto_drainer_t::lock_t, bool*, static_semaphore_t*)> const&) at pmap.hpp:52\r\n       47: connectivity_cluster_t::run_t::join_blocking(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t) at cluster.cc:376\r\n       48: std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t)>::operator()(connectivity_cluster_t::run_t*, peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t) const at functional:551\r\n       49: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, peer_address_t, int boost::detail::none_helper::*, auto_drainer_t::lock_t)>::__call<void, , 0, 1, 2, 3>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3>) at functional:1146\r\n       50: void std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, peer_address_t, int boost::detail::none_helper::*, auto_drainer_t::lock_t)>::operator()<, void>() at functional:1206\r\n       51: callable_action_instance_t<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, peer_address_t, int boost::detail::none_helper::*, auto_drainer_t::lock_t)> >::run_action() at callable_action.hpp:28\r\n       52: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       53: coro_t::run() at coroutines.cc:199\r\n       54: void coro_t::spawn_now_dangerously<std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, peer_address_t, int boost::detail::none_helper::*, auto_drainer_t::lock_t)> >(std::_Bind<std::_Mem_fn<void (connectivity_cluster_t::run_t::*)(peer_address_t, boost::optional<peer_id_t>, auto_drainer_t::lock_t)> (connectivity_cluster_t::run_t*, peer_address_t, int boost::detail::none_helper::*, auto_drainer_t::lock_t)> const&) at coroutines.hpp:52\r\n       55: connectivity_cluster_t::run_t::join(peer_address_t const&) at cluster.cc:219\r\n       56: initial_joiner_t::main_coro(connectivity_cluster_t::run_t*, auto_drainer_t::lock_t) at initial_join.cc:104\r\n       57: boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>::operator()(initial_joiner_t*, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t) const at mem_fn_template.hpp:280\r\n       58: void boost::_bi::list3<boost::_bi::value<initial_joiner_t*>, boost::_bi::value<connectivity_cluster_t::run_t*>, boost::_bi::value<auto_drainer_t::lock_t> >::operator()<boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>, boost::_bi::list0>(boost::_bi::type<void>, boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>&, boost::_bi::list0&, int) at bind.hpp:392\r\n       59: boost::_bi::bind_t<void, boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<initial_joiner_t*>, boost::_bi::value<connectivity_cluster_t::run_t*>, boost::_bi::value<auto_drainer_t::lock_t> > >::operator()() at bind_template.hpp:21\r\n       60: callable_action_instance_t<boost::_bi::bind_t<void, boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<initial_joiner_t*>, boost::_bi::value<connectivity_cluster_t::run_t*>, boost::_bi::value<auto_drainer_t::lock_t> > > >::run_action() at callable_action.hpp:28\r\n       61: callable_action_wrapper_t::run() at runtime_utils.cc:43\r\n       62: coro_t::run() at coroutines.cc:199\r\n       63: coro_t* coro_t::spawn_sometime<boost::_bi::bind_t<void, boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<initial_joiner_t*>, boost::_bi::value<connectivity_cluster_t::run_t*>, boost::_bi::value<auto_drainer_t::lock_t> > > >(boost::_bi::bind_t<void, boost::_mfi::mf2<void, initial_joiner_t, connectivity_cluster_t::run_t*, auto_drainer_t::lock_t>, boost::_bi::list3<boost::_bi::value<initial_joiner_t*>, boost::_bi::value<connectivity_cluster_t::run_t*>, boost::_bi::value<auto_drainer_t::lock_t> > > const&) at coroutines.hpp:58\r\n       64: initial_joiner_t::initial_joiner_t(connectivity_cluster_t*, connectivity_cluster_t::run_t*, peer_address_set_t const&, int) at initial_join.cc:83\r\n       65: do_serve(io_backender_t*, bool, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, serve_info_t const&, os_signal_cond_t*) at serve.cc:228\r\n       66: serve(io_backender_t*, base_path_t const&, metadata_persistence::cluster_persistent_file_t*, metadata_persistence::auth_persistent_file_t*, unsigned long, serve_info_t const&, os_signal_cond_t*) at serve.cc:422\r\n       67: run_rethinkdb_serve(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*) at command_line.cc:815\r\n       68: void std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)>::__call<void, , 0, 1, 2, 3, 4, 5, 6, 7, 8>(std::tuple<>&&, std::_Index_tuple<0, 1, 2, 3, 4, 5, 6, 7, 8>) at functional:1147\r\n       69: void std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)>::operator()<, void>() at functional:1206\r\n       70: std::_Function_handler<void (), std::_Bind<void (*(base_path_t, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u*, cluster_semilattice_metadata_t*, directory_lock_t*, bool*))(base_path_t const&, serve_info_t*, file_direct_io_mode_t, int, unsigned long, uuid_u const*, cluster_semilattice_metadata_t const*, directory_lock_t*, bool*)> >::_M_invoke(std::_Any_data const&) at functional:1780\r\n       71: std::function<void ()>::operator()() const at functional:2162\r\n       72: starter_t::run_wrapper(std::function<void ()> const&) at runtime.cc:61\r\n       73: std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)>::operator()(starter_t*, std::function<void ()> const&) const at functional:551\r\n       74: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::__call<void, , 0, 1>(std::tuple<>&&, std::_Index_tuple<0, 1>) at functional:1147\r\n       75: void std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)>::operator()<, void>() at functional:1206\r\n       76: std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (starter_t::*)(std::function<void ()> const&)> (starter_t*, std::function<void ()>)> >::_M_invoke(std::_Any_data const&) at functional:1780\r\n       77: std::function<void ()>::operator()() const at functional:2162\r\nerror: Exiting.\r\n```"
  , issueState = "closed"
  , issueId = Id 36417778
  , issueComments = 1
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 706854
                , simpleUserLogin = N "AtnNn"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/706854?v=3"
                , simpleUserUrl = "https://api.github.com/users/AtnNn"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 1
          , milestoneNumber = 17
          , milestoneClosedIssues = 593
          , milestoneDescription =
              Just
                "The scope of this issue is covered by another issue. The closing comment should link to the other issue."
          , milestoneTitle = "duplicate"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/rethinkdb/milestones/17"
          , milestoneCreatedAt = 2013 (-03) (-29) 20 : 23 : 12 UTC
          , milestoneState = "closed"
          }
  }