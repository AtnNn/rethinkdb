IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-13) 22 : 11 : 23 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 7431361
        , simpleUserLogin = N "larkost"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/7431361?v=3"
        , simpleUserUrl = "https://api.github.com/users/larkost"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/69830761"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3562#issuecomment-69830761"
  , issueCommentCreatedAt = 2015 (-01) (-13) 22 : 11 : 23 UTC
  , issueCommentBody =
      "The `or` behavior is much more familiar to me under the name `coalesce`. I would vote for changing this to `coalesce`, and returning `null` in the case that nothing is provided. The `and` behavior is new, and very counter-intuitve to me.\r\n\r\nGiven the change to `coalesce` above you could simulate `and` with:\r\n```python\r\nr.coalesce(r.coalesce(None, None), False).run()\r\n```"
  , issueCommentId = 69830761
  }