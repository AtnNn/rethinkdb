IssueComment
  { issueCommentUpdatedAt = 2015 (-07) (-17) 00 : 16 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/122135319"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/4544#issuecomment-122135319"
  , issueCommentCreatedAt = 2015 (-07) (-17) 00 : 16 : 38 UTC
  , issueCommentBody =
      "* `INTERNAL` -- The query was aborted because of an internal error (i.e. a server bug rather than the query being wrong).\r\n* `RESOURCE` -- a resource limit was exceeded (e.g. the array size limit).\r\n* `LOGIC` -- most ReQL errors are logic errors.\r\n  - `NON_EXISTENCE` -- logic errors that result from something missing, can be handled by `default`.  (E.g. accessing a non-existent field.)\r\n* Operation errors -- errors in writes and reads that are caused by cluster state, configuration, the presence or absence of tables, etc. etc.  The line between operation errors and logic errors is sometimes a little fuzzy.\r\n  - `OP_FAILED` -- an operation is known to have failed.\r\n  - `OP_INDETERMINATE` -- an operation may or may not have failed (e.g. if we were disconnected from the master after sending the write but before hearing whether or not it succeeded).\r\n* `USER` -- an error produced by `r.error`."
  , issueCommentId = 122135319
  }