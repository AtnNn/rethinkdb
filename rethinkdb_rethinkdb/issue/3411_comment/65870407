IssueComment
  { issueCommentUpdatedAt = 2014 (-12) (-05) 23 : 19 : 06 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/65870407"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3411#issuecomment-65870407"
  , issueCommentCreatedAt = 2014 (-12) (-05) 23 : 19 : 06 UTC
  , issueCommentBody =
      "@sctb is this repeatable for you?\r\n\r\nI've not been able to get inserts to stall on an r3.xlarge EC2 node in a quick test.\r\n\r\nIf I do inserts to the *same* table that I'm deleting from, some of those inserts take up to ~100ms while the delete is running. If I insert into a second table, a couple of inserts also get a bit slower, but not to more than ~50ms per insert,\r\n\r\nWhat's actually very odd is that in your case the `delete` took more than 45 minutes with some significant CPU usage. A reasonable time for deleting 1 million documents would be in the range of 30 seconds. That makes me think that something went very wrong apart from the delete blocking other queries.\r\n\r\nHow much other load was there on the server? Without the delete, was CPU usage in similar regions or were the 50% almost exclusively due to the delete query?\r\n\r\nWere the other writes using soft durability?\r\nWere some of them writing to the same table as the delete query?"
  , issueCommentId = 65870407
  }