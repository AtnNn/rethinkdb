IssueComment
  { issueCommentUpdatedAt = 2014 (-02) (-12) 22 : 41 : 42 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 258437
        , simpleUserLogin = N "srh"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/258437?v=3"
        , simpleUserUrl = "https://api.github.com/users/srh"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/34927428"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1915#issuecomment-34927428"
  , issueCommentCreatedAt = 2014 (-02) (-12) 22 : 41 : 42 UTC
  , issueCommentBody =
      "On the matter of pointer indirections in datum_t:\r\n\r\nIt might be a good idea to define a `variant_ptr<...>` type and have datum_t be implemented in terms of a `variant_ptr<wire_string_t, std::vector<counted_t<const datum_t> >, ...>`.\r\n\r\nAnother option would be to have a `counted_variant_ptr<...>` type, where the pointees all hold reference counts.  That would allow one more dereference, and it would mean we'd be using the type `datum_t`, not `counted_t<const datum_t>` everywhere.\r\n\r\nAnother cause of slowness might be the use of `slow_atomic_countable_t`.  That would be difficult and unsafe to remove, for now, though."
  , issueCommentId = 34927428
  }