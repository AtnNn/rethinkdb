IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-30) 00 : 03 : 39 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 17789
        , simpleUserLogin = N "gchpaco"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/17789?v=3"
        , simpleUserUrl = "https://api.github.com/users/gchpaco"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/72129438"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3678#issuecomment-72129438"
  , issueCommentCreatedAt = 2015 (-01) (-29) 23 : 59 : 16 UTC
  , issueCommentBody =
      "I could also imagine `.on` taking an object and a symbol suitable for `.send`; so that would make this look something like this.\r\n```ruby\r\nclass Klass\r\n   def bar(change)\r\n      ...\r\n   end\r\n   def foo(change)\r\n      ...\r\n   end\r\n   ...\r\nend\r\nk = Klass.new\r\nfeed1 = r.table('foo').changes().run(conn).on(k, :foo)\r\nfeed2 = r.table('bar').changes().run(conn).on(k, :bar)\r\n# in base Ruby case\r\nconn.poll(wait=true)\r\n```"
  , issueCommentId = 72129438
  }