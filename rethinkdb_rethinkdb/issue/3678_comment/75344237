IssueComment
  { issueCommentUpdatedAt = 2015 (-02) (-21) 00 : 28 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 17789
        , simpleUserLogin = N "gchpaco"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/17789?v=3"
        , simpleUserUrl = "https://api.github.com/users/gchpaco"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/75344237"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3678#issuecomment-75344237"
  , issueCommentCreatedAt = 2015 (-02) (-21) 00 : 28 : 38 UTC
  , issueCommentBody =
      "I don't *love* the `StreamHandler` et al interfaces, but I can see the value.\r\n\r\nThe main issue I have with the enum interface is I'm not sure how it plays with more involved coroutines.  But it's possible to support it in Ruby pretty easily (methods can have an optional \"block\"), so I don't feel strongly against it.  Numerous standard library methods do this, so I presume Rubyists are accustomed to it.  The main issue with the block case is that you cannot perform `yield` statements in the block; it's very much like a callback in that way.  If you want or need to do something more sophisticated, it's a bit awkward."
  , issueCommentId = 75344237
  }