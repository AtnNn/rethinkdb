IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-28) 21 : 43 : 11 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20216096"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1089#issuecomment-20216096"
  , issueCommentCreatedAt = 2013 (-06) (-28) 21 : 41 : 42 UTC
  , issueCommentBody =
      "> I feel like having multiple use cases baked in to every function is going to rapidly lead to an inscrutable language over time even if each individual change seems like it's better than the alternative.\r\n\r\nHmm, that didn't occur to me, probably because it doesn't *feel* like a big problem in this case (or other cases where we want to do this). I strongly agree with your sentiment in general, but I think we might want to make an exception for passing lambdas instead of values. We already do this in many cases (e.g. `replace`, `update`, probably a bunch of others) and we have at least one more planned that I can think of (`contains`).\r\n\r\nI think that passing lambdas as a shortcut (or rather, passing a value as a shortcut to lambda) is actually a rather nice technique -- it lets people do advanced things, provides ability to pass value as sugar for simpler cases, and is basically sugar on top of `do`. It doesn't seem overly confusing, and seems pretty nice in general. I'd be in favor of extending this pattern to commands where it makes sense.\r\n\r\nI do agree that it's a bad idea to have functions that have overly complicated interfaces, though, I just think allowing lambdas is a worthy exception to make to this rule because:\r\n\r\n1. they're so darned useful\r\n2. they don't seem to be very confusing once you learn the overall principle\r\n3. it's a really nice pleasant surprise to be able to do it in commands where it makes sense"
  , issueCommentId = 20216096
  }