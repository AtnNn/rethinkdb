IssueComment
  { issueCommentUpdatedAt = 2013 (-06) (-28) 18 : 50 : 53 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 43867
        , simpleUserLogin = N "jdoliner"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/43867?v=3"
        , simpleUserUrl = "https://api.github.com/users/jdoliner"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/20207055"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/1089#issuecomment-20207055"
  , issueCommentCreatedAt = 2013 (-06) (-28) 18 : 50 : 53 UTC
  , issueCommentBody =
      "Hmm, to me the \"workaround\" is actually a tad more idiomatic. The code:\r\n\r\n```Ruby\r\n.do{|arr| arr.change_at(2, arr[2] + 1)\r\n```\r\n\r\nlooks fairly similar to:\r\n\r\n```Ruby\r\narr[2] = arr[2] + 1\r\n```\r\n\r\nI also do see some cost in the cognitive overhead of adding polymorphism to `changeAt` and would kind of prefer not to go down the road of adding shortcuts everywhere for things you can accomplish with `do` however if you guys think this is really a lot better we could do it I suppose."
  , issueCommentId = 20207055
  }