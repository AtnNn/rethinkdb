IssueComment
  { issueCommentUpdatedAt = 2016 (-06) (-01) 21 : 33 : 40 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 863286
        , simpleUserLogin = N "dalanmiller"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/863286?v=3"
        , simpleUserUrl = "https://api.github.com/users/dalanmiller"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/223109172"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/pull/5354#issuecomment-223109172"
  , issueCommentCreatedAt = 2016 (-06) (-01) 20 : 07 : 56 UTC
  , issueCommentBody =
      "> After thinking about this a little, I think that the best approach would be to add the changes for this into the normal asyncio_connection.py3_4+.test file, but put the testing for __aiter__ and __anext__ behind skipping decorators that check for the version.\r\n\r\nI'm not sure this will work since 3.5 introduced the `async` keyword. Also there's some difference with `asyncio.async` which turned into `asyncio.ensure_future` in 3.5. So the following examples I believe will fail: \r\n\r\n```py\r\nasync for change in changes():\r\n...\r\nasync with r.connect() as conn:\r\n...\r\nasync def function():\r\n```"
  , issueCommentId = 223109172
  }