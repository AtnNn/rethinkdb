IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-24) 21 : 46 : 45 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 646357
        , simpleUserLogin = N "wmrowan"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/646357?v=3"
        , simpleUserUrl = "https://api.github.com/users/wmrowan"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18431840"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/885#issuecomment-18431840"
  , issueCommentCreatedAt = 2013 (-05) (-24) 21 : 46 : 45 UTC
  , issueCommentBody =
      "What @srh is saying is that individual users will strictly employ one of two data models concerning `null`. Right now we serve pretty well the camp that treats `null` as an application defined sentinel value with no special meaning in the database. We're now talking about shifting to supporting the other camp by default.\r\n\r\n@jdoliner's point is that our perception of which camp is more popular will always be skewed towards the camp we don't best support because they will be the people complaining to us about it.\r\n\r\nI have no idea which camp is more popular or which we *should* support. In either case, the opposing camp will have to adapt their data to fit the data model supported by RethinkDB. We're never going to be able to support both models simultaneously nor should we try to. Instead we should try to be consistent with what we pick and try to make it easy for the people left out to adopt their data to the data model supported by RethinkDB.\r\n\r\nOh and I like the API outlined by @mlucy. It's pretty consistent in supporting the \"null is non-existent\" model while providing an escape hatch for people who might want to treat `null` a bit differently."
  , issueCommentId = 18431840
  }