IssueComment
  { issueCommentUpdatedAt = 2013 (-05) (-22) 22 : 48 : 00 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/18313286"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/885#issuecomment-18313286"
  , issueCommentCreatedAt = 2013 (-05) (-22) 22 : 48 : 00 UTC
  , issueCommentBody =
      "I think that `NULL` in the DB world means something different to people.  SQL established the idea that it just means \"non-existence\", and a lot of people use it that way.\r\n\r\n(Also, as an aside, in Ruby `has_key?` returns `true` if the key maps to `nil`, but that's because you normally check this by just doing `obj[key].nil?` (if you access a key that doesn't exist Ruby gives you back `nil`).)\r\n\r\n---\r\n\r\n@srh -- I think that removing the optional argument might make a lot of sense if we implement `keys`, because people can just write `obj.keys.contains(...)` to get the same behavior as `obj.has_fields(..., :including_nulls => true)`.\r\n\r\nI actually think I like that a lot better."
  , issueCommentId = 18313286
  }