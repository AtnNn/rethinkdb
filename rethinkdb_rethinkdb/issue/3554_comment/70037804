IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-15) 04 : 16 : 38 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 316661
        , simpleUserLogin = N "timmaxw"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/316661?v=3"
        , simpleUserUrl = "https://api.github.com/users/timmaxw"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/70037804"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3554#issuecomment-70037804"
  , issueCommentCreatedAt = 2015 (-01) (-15) 04 : 16 : 20 UTC
  , issueCommentBody =
      "That would produce a lot of false positives, because it's possible for a callback to unknowingly spawn a coroutine on the other side of an abstraction boundary. For example, it's reasonable for a callback to modify the value of a `watchable_variable_t`, since modifying the value of a `watchable_variable_t` is guaranteed not to block. But maybe a completely different object is watching that `watchable_variable_t`, and in response to the change, it spawns a new coroutine governed by its own `auto_drainer_t`."
  , issueCommentId = 70037804
  }