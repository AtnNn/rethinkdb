IssueComment
  { issueCommentUpdatedAt = 2015 (-01) (-15) 03 : 44 : 29 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 1777134
        , simpleUserLogin = N "mlucy"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1777134?v=3"
        , simpleUserUrl = "https://api.github.com/users/mlucy"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/rethinkdb/issues/comments/70035925"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/rethinkdb/issues/3554#issuecomment-70035925"
  , issueCommentCreatedAt = 2015 (-01) (-15) 03 : 44 : 29 UTC
  , issueCommentBody =
      "I don't think the `remember_to_consider_destructor_order_t` buys us much; `auto_drainer_t` already tells me that (although we could make the name scarier I suppose).\r\n\r\nI asked this before, I think, but I forgot the answer: why can't we just make the constructors for the subscription-like classes take a reference to an auto drainer (which they promptly ignore)?  That way you'd know that an auto drainer had already been constructed when you construct them, which is reasonably strong evidence that the auto drainer will be destroyed second."
  , issueCommentId = 70035925
  }